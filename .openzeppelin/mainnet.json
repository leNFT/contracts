{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6222E86F0167E0e2AdC07B961fC7055672f92e49",
    "txHash": "0x601c25086815263c2c28c45d8bad2fb45e079b4c56b67a4437b825bc6a949b0f"
  },
  "proxies": [
    {
      "address": "0x4Df583E7D80336cb9EE91c381A939aEE58404567",
      "txHash": "0x49546796c4f3c1d04056e1d8b6f14e74973bbbd844d91d85a51e3494e77648c5",
      "kind": "transparent"
    },
    {
      "address": "0xFAE8371d6b22F6451A64026785e79Bd7B438306F",
      "txHash": "0x1decebf40136813df89f433265020437593b9fd7d3a1b59422a5318fcd573f5d",
      "kind": "transparent"
    },
    {
      "address": "0xd2E51ae17514B8A0e35eD40cA2D918EEeE976b97",
      "txHash": "0x6f847c5ef63fac80918cc02b98cb39ed40af7de27e0a307e1582e111cecc3db5",
      "kind": "transparent"
    },
    {
      "address": "0x219A56e6056c6e72005bDA1F967aF5D626Af4501",
      "txHash": "0x70576fdf5342e28e1ba61b76f2f8ad511dc7af124b80ae14dff1c3b339927e81",
      "kind": "transparent"
    },
    {
      "address": "0x29827476090a083cfFd9E5D8B48a5b6A3C37c1FF",
      "txHash": "0x6d25209bfd2536e545fe0e4a8735f4567540cc2e63dce0b76e7b30bd62bd1c14",
      "kind": "transparent"
    },
    {
      "address": "0x3c5ebA0872ABcA4D6BD5ecADada8Bc5f12cD4c76",
      "txHash": "0x2c2a035479cc848286e94671494d93bb6a4d16f7e630d646a458e20c3c1544c7",
      "kind": "transparent"
    },
    {
      "address": "0x11FDA9d7aB540309f7292f2dc504C105Fb565173",
      "txHash": "0xaf66384664666db439e9f882e8604740ed0a880a20707bf8f37d16e19d71c064",
      "kind": "transparent"
    },
    {
      "address": "0xD481cA6267C963147b5F2d456FaA52D2b4e47d21",
      "txHash": "0x5c7278d166ce6254d3878490340a53c1c7b4b8934d80e2ada2c90a0c8b10e68e",
      "kind": "transparent"
    },
    {
      "address": "0x771D88969e0b589020e41DBC1aE045D939a1dAEa",
      "txHash": "0x3456922ad509a2ccc5b94126981f90eb5cee17c6be03d93082d0d62e7031868d",
      "kind": "transparent"
    },
    {
      "address": "0x197456A4f5c3B3605033270Bc04Bc599916CaBA0",
      "txHash": "0x98d1f7a94a7e4be8c9b27d19f88bfceeecde1b1e4d0f9da111fec66b2c30e797",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e17c93c60d042c21450becc6a91cafc8053e1862b3f0f87a6085a70bb7494c2b": {
      "address": "0xce25C932BFCd4f11741ee04A17b5e8Ae4a4D63Cc",
      "txHash": "0xda6840a1045a43e8e2b7f8f81464b8f62eb36e17285394b76fe431b53a9a7dcd",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:12"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:13"
          },
          {
            "label": "_swapRouter",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:14"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:15"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:16"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:17"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:18"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:19"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:20"
          },
          {
            "label": "_nativeTokenVesting",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:21"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:22"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:23"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:24"
          },
          {
            "label": "_tradingPoolFactory",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:25"
          },
          {
            "label": "_tradingPoolHelpers",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:26"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:27"
          },
          {
            "label": "_liquidityPairMetadata",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c9b103da9154c3cbc51eca99739ad2688beaa3c142acd6482141ae18de6b083b": {
      "address": "0x70481A372E6Da39AF47f7f6e4f225227243D58fe",
      "txHash": "0xc076984b25474ddbec252a6c7cbce6e0b976c60e4503ccf74373089a79db3a6f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:40"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:43"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "204",
            "type": "t_struct(LendingPoolConfig)14790_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)14790_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFeeRate",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "liquidationFeeRate",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7598803d363377c8bbb5b786ead627d246470a57f36961574795de2fade19dbc": {
      "address": "0x4eC2B8bFC30bf260Fbf109f9dDb67ef89E55d933",
      "txHash": "0xb96385529f827f76f9cb71c09b590d5422786216b43ee66ce8329fb64039d0c7",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:18"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)14896_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:21"
          },
          {
            "label": "_loansLiquidationData",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(LoanLiquidationData)14905_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:24"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:27"
          },
          {
            "label": "_collectionsRiskParameters",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_struct(CollectionRiskParameters)14820_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:31"
          },
          {
            "label": "_defaultLiquidationThreshold",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:35"
          },
          {
            "label": "_defaultMaxLTV",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:36"
          },
          {
            "label": "_activeLoans",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LoanState)14873": {
            "label": "enum DataTypes.LoanState",
            "members": ["None", "Active", "Repaid", "Auctioned", "Liquidated"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollectionRiskParameters)14820_storage)": {
            "label": "mapping(address => struct DataTypes.CollectionRiskParameters)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)14896_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanLiquidationData)14905_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanLiquidationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionRiskParameters)14820_storage": {
            "label": "struct DataTypes.CollectionRiskParameters",
            "members": [
              {
                "label": "maxLTV",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationThreshold",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)14896_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowRate",
                "type": "t_uint16",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint40",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint40",
                "offset": 27,
                "slot": "3"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint16",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)14873",
                "offset": 22,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(LoanLiquidationData)14905_storage": {
            "label": "struct DataTypes.LoanLiquidationData",
            "members": [
              {
                "label": "auctioneer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "auctionStartTimestamp",
                "type": "t_uint40",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "auctionMaxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fbd506f6df1617a0732b673718f980b19934b2bf5e02ed3f1578835ae3f0322c": {
      "address": "0x5Bfad2dE7b9dADe10819586f96CFE6fb674856B5",
      "txHash": "0xcf4d7fcec4524392a0e8d4607f9ba1fa4abc0cdae4c9900275344884251ef0db",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bbf7816229d29a1dff7da0dbf6fd41ecddd1d42420e3d1abd428a282aa8cb1b7": {
      "address": "0x6350C4294a9515B0C4b262961e1eA586FfDd1C72",
      "txHash": "0xfdab908ab028a0853ad4fb591806ae2f290aa58a200853a70e42b34f6e47af82",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:591"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "301",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_balancerDetails",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(BalancerDetails)14984_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_maxLTVBoost",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:50"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(Counter)5240_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          },
          {
            "label": "_loanOperatorApprovals",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:53"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:55"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)14912_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)14912_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BalancerDetails)14984_storage": {
            "label": "struct DataTypes.BalancerDetails",
            "members": [
              {
                "label": "poolId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "queries",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)5240_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)14912_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "lpAmount",
                "type": "t_uint128",
                "offset": 10,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5d4602f6ef5e97b024fc7c840e12d598065c71ff46c064084852584e3e103e11": {
      "address": "0x6c5bB4e34395d135aeC9dAb648b371A30BdA7A77",
      "txHash": "0x8a9085357a6cc0f4368a3e5682e928bd2da2857c6bd5867f23b70a74ba4bc7ad",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:591"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:36"
          },
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)14860_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:38"
          },
          {
            "label": "_nextClaimableEpoch",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:40"
          },
          {
            "label": "_lockHistory",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)14867_storage)dyn_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:42"
          },
          {
            "label": "_totalWeightHistory",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:44"
          },
          {
            "label": "_totalSupplyHistory",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:46"
          },
          {
            "label": "_totalLockedHistory",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:48"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(Point)14867_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:50"
          },
          {
            "label": "_slopeChanges",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:52"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "261",
            "type": "t_struct(Counter)5240_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)14867_storage)dyn_storage": {
            "label": "struct DataTypes.Point[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)14867_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Point[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)14860_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5240_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)14860_storage": {
            "label": "struct DataTypes.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint40",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Point)14867_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "04001952c17515bed4da24cafbb02ad8e1932ea1df74a88d3fa5a148f3579c59": {
      "address": "0xB81eB8f5932597Cc3606849568DEB89aC65DD9e9",
      "txHash": "0x284f2a6ca4e189ca0c7ebf55afe991075a26e800491525f8fa51abe6350ac99b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_gaugeWeightHistory",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:28"
          },
          {
            "label": "_lastGaugeWeigthCheckpoint",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_struct(Point)14867_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:30"
          },
          {
            "label": "_gaugeWeightSlopeChanges",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:32"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:35"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "105",
            "type": "t_struct(Point)14867_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:37"
          },
          {
            "label": "_totalWeightSlopeChanges",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:39"
          },
          {
            "label": "_lockVoteRatio",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:41"
          },
          {
            "label": "_lockGaugeVoteRatio",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:43"
          },
          {
            "label": "_lockGaugeVotePoint",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14867_storage))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:45"
          },
          {
            "label": "_isGauge",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:47"
          },
          {
            "label": "_liquidityPoolToGauge",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:48"
          },
          {
            "label": "_lpMaturityPeriod",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Point)14867_storage)": {
            "label": "mapping(address => struct DataTypes.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14867_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DataTypes.Point))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Point)14867_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92ed7311c10182b396c9fae4c59029d2913759e0cf06e8a4d20465ed67eb8c87": {
      "address": "0xb6D8015a89eD6Cd7Bb3c537b2263bFde740D1a66",
      "txHash": "0x8aa62b89811c6e6e05249963ea18f6cf2807c38dd7732cc209ff7c38b6fa220f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:20"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:22"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fe92f7b522e5809baeeeb5b55c00fd00227fa222981bf56021c533e7635a7bb4": {
      "address": "0x08BD99Cd0Dc9a3E5B32af2E4C55052267d65C92b",
      "txHash": "0x68625c4bb7f2fb994ad02baf615c1df91cf4e07d50d92cd1177030f17a3633f9",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_gaugeBribes",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:21"
          },
          {
            "label": "_userBribes",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:24"
          },
          {
            "label": "_voteNextClaimableEpoch",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => uint256))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e83e1aa6b38dd9cad03c0838748b4cd6c6f3148ae05a00f05ea2f1c33f10c2b5": {
      "address": "0xFA43a4C4266c9Ff522Dd7c83b5a3991bD0fAbEC5",
      "txHash": "0x5b7eaffbac2b3111b435a364713fb43b97fb4e67ea1dba54074b3dbf26abb38c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:28"
          },
          {
            "label": "_isTradingPool",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:31"
          },
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:34"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:36"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
