{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xED88E415cAfAf5B15A6F7A47e04A2AA0f0b3A20f",
    "txHash": "0xb968fc4bae7a9d54a6995751ea1507f5fb1a711835a7b0ac39c56ec423176727"
  },
  "proxies": [
    {
      "address": "0xaAA01B41f246151A612EB253202055eF13901C6b",
      "txHash": "0x60a5aa683edd186ab7111e13ee080bfa5d56b818a87324c23aaddd73109ff2a7",
      "kind": "transparent"
    },
    {
      "address": "0x20b6b66d611cc755CC07dd704195f450faF28FCF",
      "txHash": "0x71573aef6c7cfa1e2c006ae8b4a5f4a32fc90736e827e284f3a543e9f8671ae8",
      "kind": "transparent"
    },
    {
      "address": "0xcafC5B31477721A5e3d647E81DA19Ff06BC312D3",
      "txHash": "0x5ff3421841941f4e215c1167a2b18b792bfa8a38886995157b8fbfc19b1488b3",
      "kind": "transparent"
    },
    {
      "address": "0x05669466F6D575b68127D88DFa564B7e5e8d238F",
      "txHash": "0x961e92b3992d1b142c8827a6098518b74c80e2e9a66f5fdf722743c21f2cd695",
      "kind": "transparent"
    },
    {
      "address": "0xeBB6fa947147442FB9bA991c1bF23Af9c9D02150",
      "txHash": "0x4fe6b7f9dd8e84f414aa5b10f324b078345a5cb7fc122d1fb6fc1a35adce72a9",
      "kind": "transparent"
    },
    {
      "address": "0xd3cAECfC2AdaA67Ee86d5CB50a1897FA93aB0C53",
      "txHash": "0x705908aad1a34664979f7e8d690f1c98579db6c114fce9839053a98e7dd601b1",
      "kind": "transparent"
    },
    {
      "address": "0x644476e533AA66a00b2448887E01C381D3b96b21",
      "txHash": "0x949456ff203399ecb9c6ffb9a335806454ad98447ab6a70c4f1f853d94fe7118",
      "kind": "transparent"
    },
    {
      "address": "0x071303A0F265116FAC39cBc8F21aCc839A183b3A",
      "txHash": "0xb26157613bc7151a1e9eab959f1cedb9b62d9c6abaa6afa5f3baf5eee209aca6",
      "kind": "transparent"
    },
    {
      "address": "0xFD6485C2bcf3031e3bb7C0CF06bF535D9579FD09",
      "txHash": "0x5fd7610e10bed5592d52639556362a745554b9044f1a9ee734916e8df8f5dd9a",
      "kind": "transparent"
    },
    {
      "address": "0x328E8f01638eD73a0e943634c44c457c8f3bf6A0",
      "txHash": "0xeebadaa5c5a2a6f869cace306bf2af88fc259e8ef3dcb5f022926979b8adf61a",
      "kind": "transparent"
    },
    {
      "address": "0xba7FBd0b2805B75ccFEd2a673bFA0E389Fd9Fe0f",
      "txHash": "0x15afc2fcec80d517563c089989e4b2fded7c61626824713656cef54a2b9a721a",
      "kind": "transparent"
    },
    {
      "address": "0xdEC2ED6c8E307c951c089851475Edc13E329B3eD",
      "txHash": "0x4bbfcffb3573fd5edbb9f6fa174096ef11205a71187b11c4667f3ab21a9b23dd",
      "kind": "transparent"
    },
    {
      "address": "0xDed87DbcdF899262f1B9750356eb3E614F5176c4",
      "txHash": "0x9f9c3df1a836cc7131742cd82d88cf485042788c99799177e950cb42e0943383",
      "kind": "transparent"
    },
    {
      "address": "0x135978Ece2c0d261f6e05334cba8aCE1a6501c8a",
      "txHash": "0x2985e167e7e41c73318f109dc1c00ec3aa72f3306c0f301c590ab78313b79575",
      "kind": "transparent"
    },
    {
      "address": "0x7d87116fDc812d37F805903a89c25F0DB7637885",
      "txHash": "0xbfc34f277dbc29c57da22d1f0f127d87744faaa9ef946922a19e1480ffc09aa0",
      "kind": "transparent"
    },
    {
      "address": "0x9e130860945a6700017b71FCC63e700b3e42D941",
      "txHash": "0xb5c0fc0ba9a3b8cbe091be711abf807d65fde7e81b72cf84c7266b2c4b93eec9",
      "kind": "transparent"
    },
    {
      "address": "0x923700f009eC01382e26139AF03A217d3511f66d",
      "txHash": "0x611fcea2cee84817f8eaabb1a0b1bbf77b8ac422b80147195954a15f3ef4316c",
      "kind": "transparent"
    },
    {
      "address": "0xcFc5a1874f8D8b261Ec79A83B57390b556Ca36a7",
      "txHash": "0x239120e6b47983ac39fc6ccc22e12af7181e0a963a0d2ada789db046ed940d10",
      "kind": "transparent"
    },
    {
      "address": "0x2732010F62471B7973e50453da50e47859cc31fF",
      "txHash": "0xf7670b17823d8b0910f45e29c17433fb0997437835b6705f43c13c245dc896cf",
      "kind": "transparent"
    },
    {
      "address": "0x72453D3A15626A1eACA0f741554A3D9441567164",
      "txHash": "0x1f71a280890f3afcdda2a6222524ad07516c90c66afa347055024d71417797e7",
      "kind": "transparent"
    },
    {
      "address": "0x5335ad0a77c7F36DF2Ae8eA73bEfc773E2Ecf1A0",
      "txHash": "0x40b06d6a6c62cde1f3f308e0ad7eadb9b0bde78a5c6a68684ad1912b919d7865",
      "kind": "transparent"
    },
    {
      "address": "0xA717464cf31a115b6205901f36F8dDe8E31ed115",
      "txHash": "0xa1f62b1451b6f2918cd64df28162a3fe095f3d4414e7ac72a3ce369e63fdf4a0",
      "kind": "transparent"
    },
    {
      "address": "0x5ca1B8D555F3F5AB6e2F414b5c82627cAB733AAC",
      "txHash": "0xb48b7dfd7937206bd32bb6e04018650cc51f534f968db29578ef70c6c087103f",
      "kind": "transparent"
    },
    {
      "address": "0x5BEb224b4d0EE803f3Db52F9EAba6893C158aD54",
      "txHash": "0xc7599e25d63658597b43e9e1a741b08b32623bfe56e9b30b3e742af4335e8251",
      "kind": "transparent"
    },
    {
      "address": "0x584c04eEADBf220b77E3c6acAA3d14367bb18572",
      "txHash": "0xc3382574d13bc6a515f4cd3d80cbddcbf85e6ecf38b88c7618901a4ed1e2a48a",
      "kind": "transparent"
    },
    {
      "address": "0x19D50A3cf89BadCe2d293B09A6359226cdf7c8A0",
      "txHash": "0x43023d403e54a18c9c63a4ea0557260c5791ebd3124be1435d4853cca3d1c04d",
      "kind": "transparent"
    },
    {
      "address": "0xeCC4FdE75d64B8da0372bB28eb02D499c7143281",
      "txHash": "0x2454c948105141c5ab71f70c5dccc99233ddd8d9d7e2d0fc2853ad36e3039c00",
      "kind": "transparent"
    },
    {
      "address": "0xfC01f2c0663af032FF943D4F8a47aD3B3597357F",
      "txHash": "0xa5c127d84ecfc59f98707ebb2c60caa2f42dd671becac20133f116320b8a9337",
      "kind": "transparent"
    },
    {
      "address": "0xFFd974415C552C537a07b8dd4a62d0d786d29289",
      "txHash": "0xdcce87a495af4f627069fb548d882ed15ab41ccd6c7c24ce21ef84c5c0c2f4b9",
      "kind": "transparent"
    },
    {
      "address": "0x58Fcc8E87F713C7F789B0300d1Be9c89056A1BBf",
      "txHash": "0xfe7ffb4fb6b5d5e99f2bbe94e2b02e8ef236daef0da705e1b05e0d5b4087f514",
      "kind": "transparent"
    },
    {
      "address": "0x26322Bef12d242df6E2A54F62a8de5cd26139152",
      "txHash": "0xc9569c65ae7969acda57f0e77c9fc666b4fb95b011c4ddc32400f2c739848658",
      "kind": "transparent"
    },
    {
      "address": "0x6Dfd2C7aa4ff3Ba831bd937b0fDAeadfF3940D03",
      "txHash": "0xbd5d7c22c61e28d5d3552f02756e82f5a3954e38dfa794467390008fc4ea8ce9",
      "kind": "transparent"
    },
    {
      "address": "0xfe80B32ac72225dF89F1A627130DA4c0B8B9Ad65",
      "txHash": "0x674f1ce7a213de34c04f7b412e5d1ea3c587be0ad2f2e95e8bf758f2b0dcb1cd",
      "kind": "transparent"
    },
    {
      "address": "0x02990efB1EAb33C67e6Ff3bad02aED4212eb18B4",
      "txHash": "0x95c97f51d62ba575128d1c1575425d81d5b91a4d224c44f789f6a096d6eaeeae",
      "kind": "transparent"
    },
    {
      "address": "0x21bc286858C21Ed9FFD195CC4E0B29fB98416224",
      "txHash": "0x33f7ef88eb38decbfdff2fc249518b314820bd3e3a27142bbdedea66f43904f0",
      "kind": "transparent"
    },
    {
      "address": "0xB7F23E73Cb870A0c95c0582380744b10B52a8181",
      "txHash": "0x4c95784af4dd922f3e27ffe9b6e6a3fec591edd4945cec466fd0f9fe2f82c5ea",
      "kind": "transparent"
    },
    {
      "address": "0x69805F9a06a9250631B674C9b7645d73763D71bB",
      "txHash": "0xd4c378a350d1966a5d0f6bc208f43680fb3678a18163efd579293a529512bef8",
      "kind": "transparent"
    },
    {
      "address": "0x5dF2C7B89332D35f65185B6c2E7ae736CdAf5EFF",
      "txHash": "0x02b4a29362bfba4d269b4e7bb57f794115f298307f4009b9b1dd086ff75e5576",
      "kind": "transparent"
    },
    {
      "address": "0xe8198Eb877E3f6A00BE44b31FaE6FCb0AFe2e912",
      "txHash": "0x8085994d9aa16d6148ab8c9a86ff2c433d13093d7efa7c87067117acb6fb3c80",
      "kind": "transparent"
    },
    {
      "address": "0xE1eB022317e9c72dcD93De4d9c74A57f14C114Ae",
      "txHash": "0xbbb6fdacc572c22f1a24d068ebda40b2b9592a078b84606c5bce0fbae43bfec7",
      "kind": "transparent"
    },
    {
      "address": "0xDdbB036773e01f94c6577CA19d302F8C67C0DDA6",
      "txHash": "0x867ce2c6c08fc0bb1dedf6e5fe12deafeceabe421c1e57ad3a8559f6e0d13e87",
      "kind": "transparent"
    },
    {
      "address": "0xBA7f25c1E3f70E5040Cf8047020dC43cBC27897D",
      "txHash": "0x174db6754183071a29f8bf65c78d2fdbcb39fc82046e6f9467a42fd62d7f2ee6",
      "kind": "transparent"
    },
    {
      "address": "0xB23eB1599EA031ac7c84B78d815Ab59B398A632e",
      "txHash": "0xd27420d8f010d6db8670f7f5790b7c6c37171f264a0b5dddcf2fa54bcc3a629b",
      "kind": "transparent"
    },
    {
      "address": "0x94aD1cAeCB41AA78A13f0285226b29Fd0d903cdA",
      "txHash": "0x932b9bcdab3bb38167ed69cccd752b92ade79935c8fea81f8f4cd52cadf929fc",
      "kind": "transparent"
    },
    {
      "address": "0x86f24Ce7Eb979fb5c0b42984eb3818cC2DA0d499",
      "txHash": "0x1b690bc7657fdb28112451d5e2cd2317598e7ce5e20aea518ea1773cc0a600a4",
      "kind": "transparent"
    },
    {
      "address": "0x935633A8dbA2199aa4De8C6dE8ef90712caeC2E6",
      "txHash": "0xc5cbfece20d5f1c6f8a1b0d5e8651a1d66e29c1b1cef9737746f7c422b9d194c",
      "kind": "transparent"
    },
    {
      "address": "0x60C6C4CFFeF824f16D5A8f165935537f0eEca061",
      "txHash": "0xf5168cc507d4596660bb8fa08a4b5d4254bbca7e7fa716a4ef8fd162342b3e3c",
      "kind": "transparent"
    },
    {
      "address": "0xe9f6470520397b26c525d50078B0f4D38b0b5A2b",
      "txHash": "0xcf6f557a6819944c718a3d461f9a9f57cd7bcae785e15cbed090bc0228885ca5",
      "kind": "transparent"
    },
    {
      "address": "0xb219B42481E6036E1e4db3D8b3B939478D9F2C0f",
      "txHash": "0xd839b1636355ddb80c512a946b0f7a51d3c0e6761e94dd68f432bbcdfe8d8546",
      "kind": "transparent"
    },
    {
      "address": "0x0C1A84c72791fe317F97F297b380002dcBAfCaB8",
      "txHash": "0xb517cb43ca56599a3eaf3d3b9dc8a7eb6ee4fe4c2f70300e8c5dbeada4fe9332",
      "kind": "transparent"
    },
    {
      "address": "0x40F9e9aDDB6e6D21467a4d8CCBf8751EBB084b2a",
      "txHash": "0xda26ae86295dca9d3dcc5927c26885a9f4928062cfeb7c180f94cabd9435fe20",
      "kind": "transparent"
    },
    {
      "address": "0x0e72D92dC901cC3475b6EdA3da502dac980B1726",
      "txHash": "0xf19b9db607dda2a8271e392817459e4945b7fab7c9a7198eeda537a0c79d2194",
      "kind": "transparent"
    },
    {
      "address": "0xE63Be7043D36336e33c6532F2B1742a0f22675B1",
      "txHash": "0xfa906f798ddc187e40a83c55e6f2e608b7eb730169b68e96e796a293ac0b869c",
      "kind": "transparent"
    },
    {
      "address": "0xbdCa745a62D7cDC04c088e7eC44EF4f245E84C9C",
      "txHash": "0xb524f23490992031843c40d6b4449ee79910c46edc8d5082040be5da45fe5d83",
      "kind": "transparent"
    },
    {
      "address": "0x7A417191355B376256924c5601d1EB2a61b8Fc9c",
      "txHash": "0xd5bb8fecbdbfde22f995648ace3bd9900936b88c6b0dac1f780e24336e635cda",
      "kind": "transparent"
    },
    {
      "address": "0xa6C583E389716f1cBEFD4911fef5BfC8A3db40DB",
      "txHash": "0x43ea5f4b81522f6ff162f32c536933c9ce6bb35c39001c24a3fddb25ca55e247",
      "kind": "transparent"
    },
    {
      "address": "0x1716E9f52a1B585B8Fae26786B970275683D27A8",
      "txHash": "0x2690c0173deed8d38281fafbaa8ce2291c17d52016eb058f4da7e011eb7a3beb",
      "kind": "transparent"
    },
    {
      "address": "0x383Def7E6dC7153592996B04D1A8B86C7926065F",
      "txHash": "0xb8eb5a2ca2e1889641c70a6f089e758734e1bffe151f58fc2e3759aaef05eee6",
      "kind": "transparent"
    },
    {
      "address": "0xAc54D8ebbCD9aB2888182dA898B32b063ce77adC",
      "txHash": "0x16a691c421c54c4db220c737023a1520f4da4b4d1274f1d5a5ca022ddf90fa65",
      "kind": "transparent"
    },
    {
      "address": "0x48DAa67CE12C320B1d54F76b519464F80a68a493",
      "txHash": "0x45d2623042d62e598cb7f19e7d3a8e0041a8bda4c2eed7dbf96e1f3c302e5a05",
      "kind": "transparent"
    },
    {
      "address": "0xb9167B52dE8195684DED898b8a6829B9efcE5d45",
      "txHash": "0x00704ca0a72d83a0c28a0a59ef7738168b01511e2a43a9d9ca46237513a44362",
      "kind": "transparent"
    },
    {
      "address": "0xb74a4C34F2876e4A447b2C85f3eA1b2cAae61212",
      "txHash": "0x8d6dac5ce0cb0151a8b4e8a7f279e20612366d6ad9ad7d2d522219c19233240d",
      "kind": "transparent"
    },
    {
      "address": "0x2Fc1029D8839D242B1aA1e91D0902Cbb692C0635",
      "txHash": "0x4e36f2cd4d6d66f788e2cead5850fc96b175fd5c905234450ced485a9ac02c33",
      "kind": "transparent"
    },
    {
      "address": "0x70CD8e6C7D52C7B9b6833Bfb1b2F7699087add69",
      "txHash": "0xe8350c105042f64bd012cb48fad0d7bb15fbbb072ab39a0ed5055cc163aafb53",
      "kind": "transparent"
    },
    {
      "address": "0x8fCE8b0665506F6DD655CfAF09FE6c905Dc9BB44",
      "txHash": "0xe4c60e3f35e1cdf06fada82c942035cd72af559e456d0568cb7f7df383adf190",
      "kind": "transparent"
    },
    {
      "address": "0x40fa76CD272EC7b181e8DC48087D4Ab4d2153b41",
      "txHash": "0xfe5b49e961d97a659d8180b84a501a41e38eafe7f6ed6d0bdb404864f08accee",
      "kind": "transparent"
    },
    {
      "address": "0xDF3f858F41eC63559F90aB625cB47D93BbF57E4E",
      "txHash": "0xa5f338345961dab1a7ffe02a41ec8dbabd5d68dc1fe96500797ba2b3416c7a07",
      "kind": "transparent"
    },
    {
      "address": "0xEa2aeca320Bf0A689652881bA894A5887711679f",
      "txHash": "0x15b273e9db45a9a60b26fdea315fa86e57217a09c359ab5176d4485b904be2aa",
      "kind": "transparent"
    },
    {
      "address": "0x28456748a3468C96Afb9903a1ff59580eC7b2F0d",
      "txHash": "0x67c6ec7a82f352e4fc6d3a4f855adde524b5430f3eeb0ee0e391ae8d3dff5d18",
      "kind": "transparent"
    },
    {
      "address": "0x7beDa9610b9Dbb09FC76a4d36EB2cDAa76A6CBe7",
      "txHash": "0x3b84c3d02db2b07901a3a0ee76cc66b166631d567eaa4f627f3d2ff5a325115a",
      "kind": "transparent"
    },
    {
      "address": "0xB39805bBAa5eC349c5F90DdB10bFFB1691ee12eB",
      "txHash": "0x1b8cbb4e2174722e2d2ea67ab1e1b4c0801f029209ddc1a38c7b84eef297b495",
      "kind": "transparent"
    },
    {
      "address": "0xBF4bE750F6690fC3039f828c0fdEA966D75DD245",
      "txHash": "0x693208cb7385b60f7a39c0ecbbf320c0fefe080446fac7ab9b173f3a7d35098e",
      "kind": "transparent"
    },
    {
      "address": "0xe18BF63F7Ea4cC0e15BAC1CDb508B18b63341e71",
      "txHash": "0x1bafc00c0aeb8ac0cce861569b6c46a157b81a6a900cfbea2848804029daba02",
      "kind": "transparent"
    },
    {
      "address": "0xB510db875b2b151A3714C932136ee4607Cd3E561",
      "txHash": "0x885a613a26ef812417cb54f9608092693041c15296e908efa71140083ae6d2b0",
      "kind": "transparent"
    },
    {
      "address": "0x1b82F49FF56De638FD7B1959aA13CbB9558a4048",
      "txHash": "0xfcda91b0cbb3f81f9799cde9ee3479ad7561de9ddcc3e27c47df71d086567313",
      "kind": "transparent"
    },
    {
      "address": "0xcf98cECe8a15Bb4770f7f84B637BcD584EfdC3aB",
      "txHash": "0xaaeea43309635e1fefda8344cc004a051fef27bf61194a9089dd9ecba4fb63a1",
      "kind": "transparent"
    },
    {
      "address": "0xa7Eecd25F75171606D2369dF5A563A4270b59c79",
      "txHash": "0xc45cc9491f72d35310eb5e0ae4c8423556b6da2ca37cb39f394335a839b21cce",
      "kind": "transparent"
    },
    {
      "address": "0xdcf016431Ab7D991fe8Cd8cdA185eD6759723c7A",
      "txHash": "0x74f5650ed240ecf1ce619c0ee69494e3baa3cfae305d6c4af09821067a177463",
      "kind": "transparent"
    },
    {
      "address": "0x122cD00087c928974b623655239241be83df064B",
      "txHash": "0x766aa60ed8fd4ca00120c4a3b913537131d227c3554a85be7097fc50d738762b",
      "kind": "transparent"
    },
    {
      "address": "0x39D6d21Ed203746A6E7403741AbC4828c862f74d",
      "txHash": "0x49e2a0872db110058961fc8844f7839827f25fdaf74757d70a3527afdd97c434",
      "kind": "transparent"
    },
    {
      "address": "0x7109a21e30F243D9c917Bd9f0aB29D00eFcc987F",
      "txHash": "0xcc8950c8ca836873f601d1aee3c395b00caaadfddac1c50ad005a66bf1a1b7d7",
      "kind": "transparent"
    },
    {
      "address": "0xDAdf79e0F3E231c4340fCa520615Cf459e8f3537",
      "txHash": "0xed7e7a32c0ae0d2e700358a78a7e1b04ada3f9d8c840d273896a6bfcacc2412a",
      "kind": "transparent"
    },
    {
      "address": "0x2270A65FceF09d1E467795715Fe1f0768312F680",
      "txHash": "0x5e6d3361a1747bd8c2026aa1444d997a1407d635461a44c2d3649ca11e313e83",
      "kind": "transparent"
    },
    {
      "address": "0x597E08AEd71486F90885E267ACc05EbDFfFD6EEf",
      "txHash": "0xeb9fea12924fcbd7808c38816ed46f660c563c0f186e901dc99772833d9ff522",
      "kind": "transparent"
    },
    {
      "address": "0x24C41C85baC5A3E0Cb8EFfdD909A96539256b701",
      "txHash": "0xf8ac995c3c3700e70d4a6b25a211f77cf3df1374002f13b110b23b626af3fc6e",
      "kind": "transparent"
    },
    {
      "address": "0x938B93E791E2a9a6E57EEf2c4744ae3ea716CfCA",
      "txHash": "0xb59f5664972b983d8f104bd700a5b105438dc37ed9393244c04dcf35305f9805",
      "kind": "transparent"
    },
    {
      "address": "0xEE2C0cBd4E71a36257eb9267F29da30997D6d6aE",
      "txHash": "0x4f2d3732288a61695b684c3be20904394ac2a1eebafae86008258ed88c3dfc39",
      "kind": "transparent"
    },
    {
      "address": "0x4dc31F440d17DCcd0A42d6050B621C4078991934",
      "txHash": "0xfd3c184201f6fbe474fb8d6f725c649bd21be7f7c996fb27bd28a0429ca1cffd",
      "kind": "transparent"
    },
    {
      "address": "0xfb5bc7e07706DF270E7aCED80e0aC2065D72fE5a",
      "txHash": "0x4cb1e248cf5f22195bfe2fbb7a905ecd877ddce8ba7debc3b957e22ab17145d8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "42f432d2c07d8eeafaeb9da5e0d49868f68fcb86dabde2a8d1b2704e04fc1291": {
      "address": "0xA9c749C9af955Ab66556E2F13bc00b075ab01284",
      "txHash": "0x46f48d1b75a4f09c2b803e4b88b96c0e81abeae97924eb72f89cb0148e6b139f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:10"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:11"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:12"
          },
          {
            "label": "_swapRouter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:13"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:14"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:15"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:16"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:17"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:18"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:19"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:20"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:21"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:22"
          },
          {
            "label": "_tradingPoolFactory",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:23"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:24"
          },
          {
            "label": "_liquidityPairMetadata",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6d8c2390e4190964ddec5f214acad4584e9d7319d943f3da9f57d0e2e856182f": {
      "address": "0xd9431e283B93137109B22b847BCF02716A720E22",
      "txHash": "0x0f454af6e1a58ab2d12cd01134b16844f7e5984278e2523027004f40a53c2052",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)9419",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:49"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)12228_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)9419": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12228_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10e6310aecfb25e42b039642e2a6c73ba3aff6efc379b752c42c29c8b845e32c": {
      "address": "0xA943d7E6134E46bF80069460ddA8AB68A0948A20",
      "txHash": "0xf9fecb1a5087c9aeb004619a0919ccf4ede1f4ad1afccea710a84b21593656a1",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(LoanData)11985_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:30"
          },
          {
            "label": "_loansLiquidationData",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_struct(LoanLiquidationData)11994_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:33"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:36"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IAddressProvider)9239",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:37"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:40"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:43"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)9239": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)11962": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Auctioned",
              "Liquidated"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)11985_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanLiquidationData)11994_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanLiquidationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)11985_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowRate",
                "type": "t_uint16",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint40",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint40",
                "offset": 27,
                "slot": "3"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "maxLTV",
                "type": "t_uint16",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)11962",
                "offset": 22,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(LoanLiquidationData)11994_storage": {
            "label": "struct DataTypes.LoanLiquidationData",
            "members": [
              {
                "label": "auctioner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "auctionStartTimestamp",
                "type": "t_uint40",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "auctionMaxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "97371010339e00f1d9f624f40884df21583aca23a80c9d58bc2fc522694cb086": {
      "address": "0x12EED05a2e67b3193c7409B63d7cB33496f746aD",
      "txHash": "0x1dcb3c814d3e14606a7c26c806d72b0b621888183f5d8efb4547f44f8a527247",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressProvider)10829",
            "contract": "DebtToken",
            "src": "contracts/protocol/Lending/DebtToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)10829": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c67e2670596615ee9b0a6c5142ba7cead368b99596c30b2103ef25c1f3ae5fbb": {
      "address": "0x263b39896C8732f8847c175199Bd8A59A5Ff4Fb7",
      "txHash": "0x9a86a49082be3e0f6629e77447a0c7a2f52aa2829a90e0bf5c552995adea4294",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressProvider)11441",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11441": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52bd184be0538891cd57c21c431c21ffeb583ccb052a688a560ce4e795ebc819": {
      "address": "0xD2f3DfE1903CE16DAB59edb38F4e0CfFc42E83B8",
      "txHash": "0xa618839865da7c16b7fba85fb030d67ab71bc9589fffc6216a76d7d228b0db30",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)9419",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:47"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:50"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          },
          {
            "label": "_balancerDetails",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(BalancerDetails)12411_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          },
          {
            "label": "_balancerPoolId",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:53"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "312",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:54"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:55"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "314",
            "type": "t_struct(Counter)4261_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:56"
          },
          {
            "label": "_loanOperatorApprovals",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:58"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:61"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)12343_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressProvider)9419": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)12343_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BalancerDetails)12411_storage": {
            "label": "struct DataTypes.BalancerDetails",
            "members": [
              {
                "label": "poolId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "queries",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)12343_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lpAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aefbc801999f48178a5bc830892a6c9aefa9b32f27812eda6458bcd6df0c5f6f": {
      "address": "0xBCE024170821403ae65691d28d11031B4fEa638E",
      "txHash": "0xc9545b3a721b23007befea8582a5b03d4c5b295155096222cadaedc8a68c966f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)5032",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:40"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:41"
          },
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)5338_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:43"
          },
          {
            "label": "_nextClaimableEpoch",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:45"
          },
          {
            "label": "_lockHistory",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)5345_storage)dyn_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:47"
          },
          {
            "label": "_totalWeightHistory",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:49"
          },
          {
            "label": "_totalSupplyHistory",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:51"
          },
          {
            "label": "_totalLockedHistory",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:53"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(Point)5345_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:55"
          },
          {
            "label": "_slopeChanges",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:57"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(Counter)2618_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)5345_storage)dyn_storage": {
            "label": "struct DataTypes.Point[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)5032": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)5345_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Point[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)5338_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2618_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)5338_storage": {
            "label": "struct DataTypes.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)5345_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "76e120a1a099269a108d3c5b79c180083e0e970ea283a7a34519b2815f73b86d": {
      "address": "0x9C5870F308bD681367ca1DcF1aa0c0C24D0602EA",
      "txHash": "0x261973897ac740b862cda281b850b3e6d40c7703794e6f6633ad38ecfaef60f6",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressProvider)11441",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:20"
          },
          {
            "label": "_gaugeWeightHistory",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:23"
          },
          {
            "label": "_lastGaugeWeigthCheckpoint",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_struct(Point)14568_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:25"
          },
          {
            "label": "_gaugeWeightSlopeChanges",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:27"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:30"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Point)14568_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:32"
          },
          {
            "label": "_totalWeightSlopeChanges",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:34"
          },
          {
            "label": "_lockVoteRatio",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:36"
          },
          {
            "label": "_lockGaugeVoteRatio",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:38"
          },
          {
            "label": "_lockGaugeVotePoint",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14568_storage))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:40"
          },
          {
            "label": "_isGauge",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:42"
          },
          {
            "label": "_liquidityPoolToGauge",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_address)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:43"
          },
          {
            "label": "_initialRewards",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11441": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Point)14568_storage)": {
            "label": "mapping(address => struct DataTypes.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14568_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DataTypes.Point))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Point)14568_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "662c8e51a13a7bfde232f22b04aa5c84bcd634706565085594cb0b5f7eaecd3a": {
      "address": "0x20B66dc5E17Ffb2a19a8Ce5Fe3FBddD8A903F0aF",
      "txHash": "0x32fe996ac8ae871ee18f586579ebdcf3d6e0ed2314279a0f3e91345ea67e1084",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)9419",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:25"
          },
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:27"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:29"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:30"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)9419": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df035a91c3f05363bc2940dae29db20debb9f4bcbc06d4b93f762e3b999ff9c2": {
      "address": "0xD89Af691CB507077301d51bDe3bfea4e67895C86",
      "txHash": "0xcd6c2a17e07a6b23ea13fd6f19922ce645e2c227032c5c5fd5443cca7ca386ef",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11441",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:26"
          },
          {
            "label": "_gaugeBribes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:28"
          },
          {
            "label": "_userBribes",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:31"
          },
          {
            "label": "_voteNextClaimableEpoch",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11441": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => uint256))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9e2ec5e151c6fdb7b6bd36d40c2631298344e4fdf85d01c1a42834bc14caf264": {
      "address": "0xF372239Ba9D012b2bbf993b2481087315dEaACEF",
      "txHash": "0x104fa9e6212c3a8b6f6a6a9c283501cefdde09c64389ba2380411fd1830b853b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11441",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:32"
          },
          {
            "label": "_protocolFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:34"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11441": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1b81bdc7c75420b8df02dfdd8f377d5bb4fd1f9f1f9a96083aa907f8ce0ee894": {
      "address": "0x798798167f70c3E742e00F851707A2579A15f5DD",
      "txHash": "0xc5d23273c9989fd5a98f552a1b14b739cb295cfebc03e36c6abc1b466f0750d4",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)9419",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:49"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)12228_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)9419": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12228_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "171f6adc7ac21026eb8e55d08d2b3b4e23bc5b02e50f4d8c380ba98bd88285c3": {
      "address": "0xdD5709970777e09B43C2fD3122cEde4d77C664a7",
      "txHash": "0x9fb9f1b8cdccac192f455a092c191cc23846b2bd53954548eb0473b4722e81d6",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)7048",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:49"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)9161_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)7048": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)9161_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7cfde2a4aa3876fff263d43e556ea0da0ee64f9079783381cbb661fa17effde4": {
      "address": "0x4155c6e3b17d1DE1730BAA9f235db54279442A1b",
      "txHash": "0x97e823fcf32ffb07ad30a4b35b00ca092970b086e8e3f7e0f0e7d5b6cdf32569",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(LoanData)1448_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:30"
          },
          {
            "label": "_loansLiquidationData",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_struct(LoanLiquidationData)1457_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:33"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:36"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IAddressProvider)982",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:37"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:40"
          },
          {
            "label": "_collectionsRiskParameters",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_struct(CollectionRiskParameters)1373_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:43"
          },
          {
            "label": "_defaultCollectionsRiskParameters",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(CollectionRiskParameters)1373_storage",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)982": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)1427": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Auctioned",
              "Liquidated"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollectionRiskParameters)1373_storage)": {
            "label": "mapping(address => struct DataTypes.CollectionRiskParameters)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)1448_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanLiquidationData)1457_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanLiquidationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionRiskParameters)1373_storage": {
            "label": "struct DataTypes.CollectionRiskParameters",
            "members": [
              {
                "label": "maxLTV",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationThreshold",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)1448_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowRate",
                "type": "t_uint16",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint40",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint40",
                "offset": 27,
                "slot": "3"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)1427",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(LoanLiquidationData)1457_storage": {
            "label": "struct DataTypes.LoanLiquidationData",
            "members": [
              {
                "label": "auctioner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "auctionStartTimestamp",
                "type": "t_uint40",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "auctionMaxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ec21c76e02e42bbd9a42223511c58b58cee401dc21f44de0eb90bf7b55d548a8": {
      "address": "0x969bdEbd10BaB445D5cCFe2f208878b231Ea5a0b",
      "txHash": "0x991556db590820ad6bd201e65836496c1e5f093eead0e1ac733d5b6112fe1cc5",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)9192",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:47"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:50"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          },
          {
            "label": "_balancerDetails",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(BalancerDetails)11844_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          },
          {
            "label": "_balancerPoolId",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:53"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "312",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:54"
          },
          {
            "label": "_maxLTVBoost",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:55"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "314",
            "type": "t_struct(Counter)4261_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:56"
          },
          {
            "label": "_loanOperatorApprovals",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:58"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:61"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)11776_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressProvider)9192": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)11776_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BalancerDetails)11844_storage": {
            "label": "struct DataTypes.BalancerDetails",
            "members": [
              {
                "label": "poolId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "queries",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)11776_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lpAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d07c4e64af3f59d07189ef50205af193bcd9b49b5da7dd84482b7247cffe3881": {
      "address": "0x06d41Fa93aD2762314E9e7Be20A31e2A30Cc0e2F",
      "txHash": "0xb9218903c002b406871bc2f1a563ade5168b1809b5cc9bd1d93e7925b4803153",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11441",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:32"
          },
          {
            "label": "_protocolFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:34"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11441": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1d865e8629c05bd1254175cea45365ca2e0609ec1ca6b363df2c736d2474db6e": {
      "address": "0xaca47e6678C33076a47ABD9D193cB9d69C93bC18",
      "txHash": "0x23bbd174ed5424edf372819c9d7949806509cfea76ea88b417bedede1a8ba853",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)8638",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:49"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)11040_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)8638": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)11040_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "26d9f7b9f22708e3a54cf1661b7478ce8a87acfac6d26dda8cef0de42e908ab8": {
      "address": "0x95c29F22f73B2E4d719c20Ca3be7c49CaBC53ED8",
      "txHash": "0x377cab00f121e0820d01fc27ceb2dae933f6ff3e9a69cfad225c3bd8147689c6",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(LoanData)9491_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:30"
          },
          {
            "label": "_loansLiquidationData",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_struct(LoanLiquidationData)9500_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:33"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:36"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IAddressProvider)7095",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:37"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:40"
          },
          {
            "label": "_collectionsRiskParameters",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_struct(CollectionRiskParameters)9416_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:43"
          },
          {
            "label": "_defaultCollectionsRiskParameters",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(CollectionRiskParameters)9416_storage",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)7095": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)9470": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Auctioned",
              "Liquidated"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollectionRiskParameters)9416_storage)": {
            "label": "mapping(address => struct DataTypes.CollectionRiskParameters)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)9491_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanLiquidationData)9500_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanLiquidationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionRiskParameters)9416_storage": {
            "label": "struct DataTypes.CollectionRiskParameters",
            "members": [
              {
                "label": "maxLTV",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationThreshold",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)9491_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "borrowRate",
                "type": "t_uint16",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint40",
                "offset": 22,
                "slot": "2"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint40",
                "offset": 27,
                "slot": "2"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint16",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)9470",
                "offset": 22,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LoanLiquidationData)9500_storage": {
            "label": "struct DataTypes.LoanLiquidationData",
            "members": [
              {
                "label": "auctioner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "auctionStartTimestamp",
                "type": "t_uint40",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "auctionMaxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b2cd23089c4ee1525ed4ccbedd943bfb3f80b32a2c0f25666c7b4fdcf59138d0": {
      "address": "0x95Bc959a5D53ef4CEb65acd647c38992a2A9F2Cc",
      "txHash": "0x4ec786cddefcd573826f6c05d119a0f63ee63076629cfc3a86baf55d53dbc287",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)11441",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:47"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:50"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          },
          {
            "label": "_balancerDetails",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(BalancerDetails)14638_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          },
          {
            "label": "_balancerPoolId",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:53"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "312",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:54"
          },
          {
            "label": "_maxLTVBoost",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:55"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "314",
            "type": "t_struct(Counter)4920_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:56"
          },
          {
            "label": "_loanOperatorApprovals",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:58"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:61"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)14570_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressProvider)11441": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)14570_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BalancerDetails)14638_storage": {
            "label": "struct DataTypes.BalancerDetails",
            "members": [
              {
                "label": "poolId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "queries",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4920_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)14570_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lpAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f8f9592fb89ff9178f1f1a8fcae1fbeb7ef0b1d274c4b945dd800dcd9928231": {
      "address": "0x63879F31b2Cb8b60329B1ce7c2AeC9fa27B131CE",
      "txHash": "0xf7493e938b4f71cd0dcf245d4c3814a9d070fde0148f98cc50d4f0cd38d04c2c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)5930",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:40"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:41"
          },
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)6412_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:43"
          },
          {
            "label": "_nextClaimableEpoch",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:45"
          },
          {
            "label": "_lockHistory",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)6419_storage)dyn_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:47"
          },
          {
            "label": "_totalWeightHistory",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:49"
          },
          {
            "label": "_totalSupplyHistory",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:51"
          },
          {
            "label": "_totalLockedHistory",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:53"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(Point)6419_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:55"
          },
          {
            "label": "_slopeChanges",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:57"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(Counter)2618_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)6419_storage)dyn_storage": {
            "label": "struct DataTypes.Point[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)5930": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)6419_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Point[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)6412_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2618_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)6412_storage": {
            "label": "struct DataTypes.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)6419_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4824d2a0b32645ef7d10fac39f266338c0742c866098139ef1c9f93e9d4d6307": {
      "address": "0x033E6A1D69Ec21B1768f90dfDF44D705fd4cb1cE",
      "txHash": "0xa49f2a7f67e400b1e883f5c3f1ac90d5cfbb8bc6302eff6af0d178cba338ef99",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressProvider)5930",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:20"
          },
          {
            "label": "_gaugeWeightHistory",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:23"
          },
          {
            "label": "_lastGaugeWeigthCheckpoint",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_struct(Point)6419_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:25"
          },
          {
            "label": "_gaugeWeightSlopeChanges",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:27"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:30"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Point)6419_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:32"
          },
          {
            "label": "_totalWeightSlopeChanges",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:34"
          },
          {
            "label": "_lockVoteRatio",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:36"
          },
          {
            "label": "_lockGaugeVoteRatio",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:38"
          },
          {
            "label": "_lockGaugeVotePoint",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)6419_storage))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:40"
          },
          {
            "label": "_isGauge",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:42"
          },
          {
            "label": "_liquidityPoolToGauge",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_address)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:43"
          },
          {
            "label": "_initialRewards",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:44"
          },
          {
            "label": "_lpMaturityPeriod",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)5930": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Point)6419_storage)": {
            "label": "mapping(address => struct DataTypes.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)6419_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DataTypes.Point))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Point)6419_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1a9aa9cd00e1fda51eaa4a4ff70f14e7498b725b8736483a32461ae00f02af67": {
      "address": "0x5B43bd682f20c6aedb10E764B92FD3b7Df53611c",
      "txHash": "0x837d398ef7cbea192e610f7252bf672b6931aab3231b8494eb84bf004e53f592",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)7516",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:32"
          },
          {
            "label": "_validPools",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:35"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:37"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)7516": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b114c79b87727ce7000dd5ee2cf83bbac862f58860befe329834eb7320ba7db0": {
      "address": "0x2849fD97cf19bB3C1CB52e1460501b0a97b34132",
      "txHash": "0x2a997215622825609fa5683abdc2c158823ecc9f8ed38c41bc357f4a4549d54b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:10"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:11"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:12"
          },
          {
            "label": "_swapRouter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:13"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:14"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:15"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:16"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:17"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:18"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:19"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:20"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:21"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:22"
          },
          {
            "label": "_tradingPoolFactory",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:23"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:24"
          },
          {
            "label": "_liquidityPairMetadata",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f90d47cb41c99dd650fb528e096127c7a199e3397213f383fe6772e67482c128": {
      "address": "0x036e0597C2bBA662d996D310f0c65B098944DCc4",
      "txHash": "0x92110504c9a70bbfad31390dd54d83ee94d32433264d8063e107b8f68e4c5b09",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:10"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:11"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:12"
          },
          {
            "label": "_swapRouter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:13"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:14"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:15"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:16"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:17"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:18"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:19"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:20"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:21"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:22"
          },
          {
            "label": "_tradingPoolFactory",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:23"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:24"
          },
          {
            "label": "_liquidityPairMetadata",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "049ee2dbedeeea026d9c0ece345385118b0c52b605ab057b31aa8255ef99e2f2": {
      "address": "0x76be44a6Df2899dB0EcfA3a02672Cd9c6121a00C",
      "txHash": "0xf68c70d6526097a0bbc48678d77056bfc68bd0002ed76c38414c49cf80978137",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:39"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:42"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:45"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)14436_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)14436_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3ec92072b88816fd3a5285918d93b1c4cdeaacab9b9d826de672f6329fb4a467": {
      "address": "0x5E46f748921a2072ec3A80bD5af894a73d06E834",
      "txHash": "0x4d3713618a5b4d8489793ac4bcbe35e760b574604d5de077e8db38e94c275a28",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:25"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(LoanData)14540_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:28"
          },
          {
            "label": "_loansLiquidationData",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_struct(LoanLiquidationData)14549_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:31"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:34"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:35"
          },
          {
            "label": "_collectionsRiskParameters",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(CollectionRiskParameters)14463_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:38"
          },
          {
            "label": "_defaultCollectionsRiskParameters",
            "offset": 0,
            "slot": "157",
            "type": "t_struct(CollectionRiskParameters)14463_storage",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:41"
          },
          {
            "label": "_activeLoans",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)14517": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Auctioned",
              "Liquidated"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollectionRiskParameters)14463_storage)": {
            "label": "mapping(address => struct DataTypes.CollectionRiskParameters)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)14540_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanLiquidationData)14549_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanLiquidationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionRiskParameters)14463_storage": {
            "label": "struct DataTypes.CollectionRiskParameters",
            "members": [
              {
                "label": "maxLTV",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationThreshold",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)14540_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowRate",
                "type": "t_uint16",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint40",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint40",
                "offset": 27,
                "slot": "3"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint16",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)14517",
                "offset": 22,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(LoanLiquidationData)14549_storage": {
            "label": "struct DataTypes.LoanLiquidationData",
            "members": [
              {
                "label": "auctioner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "auctionStartTimestamp",
                "type": "t_uint40",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "auctionMaxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e8949f5aa548753fc1ed61010594d51fed308eefe76abd8aab3d66e9895f4ed9": {
      "address": "0x795fc9E112C9261C190c3Bf5BfDA027bA7Baa519",
      "txHash": "0x8c067c18f4ec5b2fc2cbaeaf217319578fba77609addd12d60803f81acefa29a",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:21"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b4abad99b1c5e9ba36d5c7a6ace82df366d759696a6d8f1f5de5acc587efe33e": {
      "address": "0xE5FA77CcA54724A279915A564D49c7c2010825E6",
      "txHash": "0x657b2222b26a5511e6452e0ce09fec566934c016f3f71881e3e40d07ba33011c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:47"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_balancerDetails",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(BalancerDetails)14624_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:50"
          },
          {
            "label": "_balancerPoolId",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "312",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          },
          {
            "label": "_maxLTVBoost",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:53"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "314",
            "type": "t_struct(Counter)4966_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:54"
          },
          {
            "label": "_loanOperatorApprovals",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:56"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:59"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)14556_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)14556_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BalancerDetails)14624_storage": {
            "label": "struct DataTypes.BalancerDetails",
            "members": [
              {
                "label": "poolId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "queries",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4966_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)14556_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lpAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e495835ae79e960b9669d9976b3a000c746b8b1e1bf7303ac0a681f1f138aa35": {
      "address": "0x25368F45E9Ef75E71d6c5c6AA0D9beA5a058cD52",
      "txHash": "0x098454f3d0746f487468c61f8779c892767012c686eca6973dfc895e06d3968c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:39"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:42"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:45"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)14436_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)14436_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3fd7f07b6842b7868560491def12b5d51caec4d9c3ca7725200a632a17e03d70": {
      "address": "0xc611109b8C07d1D820eCC8c99253A05d71821AB4",
      "txHash": "0xa581e1d7fc3660253dd2f6bd638af5c3fdaa01e8d4ef4bd17fd850314285260e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:37"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:38"
          },
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)14503_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:40"
          },
          {
            "label": "_nextClaimableEpoch",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:42"
          },
          {
            "label": "_lockHistory",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)14510_storage)dyn_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:44"
          },
          {
            "label": "_totalWeightHistory",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:46"
          },
          {
            "label": "_totalSupplyHistory",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:48"
          },
          {
            "label": "_totalLockedHistory",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:50"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(Point)14510_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:52"
          },
          {
            "label": "_slopeChanges",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:54"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(Counter)4966_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)14510_storage)dyn_storage": {
            "label": "struct DataTypes.Point[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)14510_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Point[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)14503_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4966_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)14503_storage": {
            "label": "struct DataTypes.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)14510_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7b1a26dc41fe3a04876cbfb1abf0b3ab22176d38093a93c3c6e829b4a98e7e27": {
      "address": "0xd1C5947b8204ad6Aa9655765efc71048B0550535",
      "txHash": "0xcef3b413d6632943602611b30b20966f8f4adc18dc2243d8eb16d3cc7bfaaef1",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:20"
          },
          {
            "label": "_gaugeWeightHistory",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:23"
          },
          {
            "label": "_lastGaugeWeigthCheckpoint",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_struct(Point)14510_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:25"
          },
          {
            "label": "_gaugeWeightSlopeChanges",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:27"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:30"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Point)14510_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:32"
          },
          {
            "label": "_totalWeightSlopeChanges",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:34"
          },
          {
            "label": "_lockVoteRatio",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:36"
          },
          {
            "label": "_lockGaugeVoteRatio",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:38"
          },
          {
            "label": "_lockGaugeVotePoint",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14510_storage))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:40"
          },
          {
            "label": "_isGauge",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:42"
          },
          {
            "label": "_liquidityPoolToGauge",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_address)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:43"
          },
          {
            "label": "_initialRewards",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:44"
          },
          {
            "label": "_lpMaturityPeriod",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Point)14510_storage)": {
            "label": "mapping(address => struct DataTypes.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14510_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DataTypes.Point))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Point)14510_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fb46c089f7954f47595933e2cfd72935b924608ae72cfc8cd4afafc949b33e0f": {
      "address": "0xf22746aa26036b30491aBAF3A12BbDE9dDAC9448",
      "txHash": "0x800162c9aa8b520c56e81847213cb3f537a9d764f23255ae7cf919650b5cc692",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:25"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:27"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:28"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f13642cbf74b3efe3122cd71dde1636c910cbd08f4a3dc1046ba16f5c5ba05de": {
      "address": "0x274925312017E28D5f0518C4a96523Fb8f05511F",
      "txHash": "0x80ba20b9dd6ef0a8225b0bcc6e365243fd9147df99de23043bf66e72e5f4b97e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:24"
          },
          {
            "label": "_gaugeBribes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:26"
          },
          {
            "label": "_userBribes",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:29"
          },
          {
            "label": "_voteNextClaimableEpoch",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => uint256))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8f095748e5635aab952feeec5d4d5305c1d582142e2c6d628de869e83ba243f": {
      "address": "0x4368De651Df01ec528524EE8f3c508D3ACDd8976",
      "txHash": "0x43b6a930882140c8d2ee90547171ea42817faa3b6f75fea5078403584c1d2fe3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:27"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:30"
          },
          {
            "label": "_isPool",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:33"
          },
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:36"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:38"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "255b32379b68bdbee7e01a1f9a59ffe5e3b053e337d319365659af4de5cdfca3": {
      "address": "0xDA79F32dA59b827EfbC7fA792c4E79E3a5d89cD8",
      "txHash": "0x24d40059bae5c5324911c14922a282a8479f874938d3f8dac11ddf053a945c86",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:39"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:42"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:45"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)14436_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)14436_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8dfb0f111ad158ae1a7a6b0932eb3968d25ecdcff418354b676590d711dd4911": {
      "address": "0x4AB26720Ed1a216aB6db5eD9509e404E1E3F6Ec6",
      "txHash": "0xbfab3738a5339d899751e4995c27f4ad7056ea1f369bccdec02342f18946fa56",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:10"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:11"
          },
          {
            "label": "_swapRouter",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:12"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:13"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:14"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:15"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:16"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:17"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:18"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:19"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:20"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:21"
          },
          {
            "label": "_tradingPoolFactory",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:22"
          },
          {
            "label": "_tradingPoolHelpers",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:23"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:24"
          },
          {
            "label": "_liquidityPairMetadata",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/addressProvider.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "385114445670b440172eeaecc04da15f8c4c11a74ac2f70ea35994516d794a5b": {
      "address": "0x426aFCFCf7E96730F9Bdc926C84279fe40aD52e0",
      "txHash": "0x66a7320856457994635d8a41150552ba99dcf1b134260c6157f260c7bf73a26c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:39"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:42"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:45"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)14420_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)14420_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "03c655e3dfd324623fc759e8ff8ba4262991b5e131e5d059f39ae0ff47e2feb6": {
      "address": "0x3240Ac357AeE96EFeE080F36637F7C6077E6530b",
      "txHash": "0x39e73dc84d90361be554dbddeac5245d0ac9ec664ccfb81db63eb99e502365b3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(LoanData)14524_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:30"
          },
          {
            "label": "_loansLiquidationData",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_struct(LoanLiquidationData)14533_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:33"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:36"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:37"
          },
          {
            "label": "_collectionsRiskParameters",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(CollectionRiskParameters)14447_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:40"
          },
          {
            "label": "_defaultCollectionsRiskParameters",
            "offset": 0,
            "slot": "157",
            "type": "t_struct(CollectionRiskParameters)14447_storage",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:43"
          },
          {
            "label": "_activeLoans",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)14501": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Auctioned",
              "Liquidated"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollectionRiskParameters)14447_storage)": {
            "label": "mapping(address => struct DataTypes.CollectionRiskParameters)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)14524_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanLiquidationData)14533_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanLiquidationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionRiskParameters)14447_storage": {
            "label": "struct DataTypes.CollectionRiskParameters",
            "members": [
              {
                "label": "maxLTV",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationThreshold",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)14524_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowRate",
                "type": "t_uint16",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint40",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint40",
                "offset": 27,
                "slot": "3"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint16",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)14501",
                "offset": 22,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(LoanLiquidationData)14533_storage": {
            "label": "struct DataTypes.LoanLiquidationData",
            "members": [
              {
                "label": "auctioneer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "auctionStartTimestamp",
                "type": "t_uint40",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "auctionMaxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5284b41750bcda3295e4db7c9d853b4b483a416819a81147a4d965c1e40c7585": {
      "address": "0xc6735B1986799A5a65f21827E7e876D8A2d1c1Cb",
      "txHash": "0xdaf3fdbd293ed11bc23ab61c2671a9737744c8c4e85b1386053b9aed33f82331",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:47"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_balancerDetails",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(BalancerDetails)14608_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:50"
          },
          {
            "label": "_balancerPoolId",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "312",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          },
          {
            "label": "_maxLTVBoost",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:53"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "314",
            "type": "t_struct(Counter)4966_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:54"
          },
          {
            "label": "_loanOperatorApprovals",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:56"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:59"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)14540_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)14540_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BalancerDetails)14608_storage": {
            "label": "struct DataTypes.BalancerDetails",
            "members": [
              {
                "label": "poolId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "queries",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4966_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)14540_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lpAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7c8603565a05f8c879f76da7e567cc21f05df9f0fb9688a94df8a6e4744c73b9": {
      "address": "0x13159FCAf302167ef7Ab63F9Ff769b0662096d15",
      "txHash": "0xaacd2b1c55f4f4e03538056b627c37e720ed3fb503f0b4b144a5235c3be61fde",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:38"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:39"
          },
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)14487_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:41"
          },
          {
            "label": "_nextClaimableEpoch",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:43"
          },
          {
            "label": "_lockHistory",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)14494_storage)dyn_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:45"
          },
          {
            "label": "_totalWeightHistory",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:47"
          },
          {
            "label": "_totalSupplyHistory",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:49"
          },
          {
            "label": "_totalLockedHistory",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:51"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(Point)14494_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:53"
          },
          {
            "label": "_slopeChanges",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:55"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(Counter)4966_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)14494_storage)dyn_storage": {
            "label": "struct DataTypes.Point[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)14494_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Point[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)14487_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4966_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)14487_storage": {
            "label": "struct DataTypes.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)14494_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "41a758219df0c93760d387ac99280cd61af71a828e19befe9e6ddb5c023fa1ba": {
      "address": "0x3617F56e17b9cfEC99751Cc8a2ED8797aa745A3C",
      "txHash": "0x4e72ff6deb3da47b8bcccc9a22f0be54b6d998e8787979452de1bc01a35daf0a",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:22"
          },
          {
            "label": "_gaugeWeightHistory",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:25"
          },
          {
            "label": "_lastGaugeWeigthCheckpoint",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_struct(Point)14494_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:27"
          },
          {
            "label": "_gaugeWeightSlopeChanges",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:29"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:32"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Point)14494_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:34"
          },
          {
            "label": "_totalWeightSlopeChanges",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:36"
          },
          {
            "label": "_lockVoteRatio",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:38"
          },
          {
            "label": "_lockGaugeVoteRatio",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:40"
          },
          {
            "label": "_lockGaugeVotePoint",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14494_storage))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:42"
          },
          {
            "label": "_isGauge",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:44"
          },
          {
            "label": "_liquidityPoolToGauge",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_address)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:45"
          },
          {
            "label": "_initialRewards",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:46"
          },
          {
            "label": "_lpMaturityPeriod",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Point)14494_storage)": {
            "label": "mapping(address => struct DataTypes.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14494_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DataTypes.Point))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Point)14494_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3391f49c00bb7b61ba5b6277b3ab8302b7eee55fe8050a548d64b3eb08992fca": {
      "address": "0xF80888073c2b741Daf9331514b2357F3E60cFb07",
      "txHash": "0x1b1b0582246fb1b69c811821c5ade640e632abac0dd03d3a0b7be2a6a8804bb0",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:24"
          },
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:26"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:28"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:29"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1e5eba0a3e5c46d6208f8e87be67e483c710894677b7ba0828eb7d9c08b9b26b": {
      "address": "0x4d687353604c5Ee2Fd07Ac869F98824a07A13cc7",
      "txHash": "0x7149a4a1669233d3ac1950381bf74fde5fd201b8b44ba9164dcea63e20d73b19",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:24"
          },
          {
            "label": "_gaugeBribes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:26"
          },
          {
            "label": "_userBribes",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:29"
          },
          {
            "label": "_voteNextClaimableEpoch",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => uint256))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dfa5169be881a20d03e2e424507b98ee8fd568df0a3ca00aeb696da0b49cf0bd": {
      "address": "0x910470B913e5B8837961A4dDCA21864aBDb034A3",
      "txHash": "0xe08ef26cd7d3f2a5d7f1f20eb736035b3ac4ce49f6b7ffa0c2857ed516e2656e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11477",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:28"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:31"
          },
          {
            "label": "_isTradingPool",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:34"
          },
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:37"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:39"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11477": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fe7febc2385806a9ebc457026bf252a23209c09c66e218f89597cfe48a001624": {
      "address": "0x4E80f6404BFA5c3bBbde4AcaE195Cc6448eCdf3B",
      "txHash": "0x44e456f58006f5d6a7bafbc574c03e15e3a5700bb9dfa2ba2e4366a663ab38a9",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:11"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:12"
          },
          {
            "label": "_swapRouter",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:13"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:14"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:15"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:16"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:17"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:18"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:19"
          },
          {
            "label": "_nativeTokenVesting",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:20"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:21"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:22"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:23"
          },
          {
            "label": "_tradingPoolFactory",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:24"
          },
          {
            "label": "_tradingPoolHelpers",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:25"
          },
          {
            "label": "_bribes",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:26"
          },
          {
            "label": "_liquidityPairMetadata",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "39029905dfd237619729eeb95dcebdd924b0736b2dd61c673f2c1a6790be3c26": {
      "address": "0x3ca21f032cd8095032AB93fd8B8d2904C15A6d04",
      "txHash": "0x330b3aed9deb096870e1e23b0440c1a68c4ea48ee88edd9dd2a3628fa9c0eab9",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:37"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:40"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:43"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:45"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(LendingPoolConfig)14437_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)14437_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "maxLiquidatorDiscount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "auctioneerFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8731b0389cc24892d5c52b666f7885b272ac093ac5249764d759feb29eb2b0bb": {
      "address": "0xac0E3D43BD7404679d54eC898d027DD70AB40BC4",
      "txHash": "0xa042af5d47ad47847cc722982c8562952a9bdc240d5154412cfee820de760937",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:24"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(LoanData)14542_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:27"
          },
          {
            "label": "_loansLiquidationData",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_struct(LoanLiquidationData)14551_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:30"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:33"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:34"
          },
          {
            "label": "_collectionsRiskParameters",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(CollectionRiskParameters)14465_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:37"
          },
          {
            "label": "_defaultCollectionsRiskParameters",
            "offset": 0,
            "slot": "157",
            "type": "t_struct(CollectionRiskParameters)14465_storage",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:40"
          },
          {
            "label": "_activeLoans",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)14519": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Auctioned",
              "Liquidated"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CollectionRiskParameters)14465_storage)": {
            "label": "mapping(address => struct DataTypes.CollectionRiskParameters)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)14542_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanLiquidationData)14551_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanLiquidationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionRiskParameters)14465_storage": {
            "label": "struct DataTypes.CollectionRiskParameters",
            "members": [
              {
                "label": "maxLTV",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationThreshold",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)14542_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowRate",
                "type": "t_uint16",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint40",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint40",
                "offset": 27,
                "slot": "3"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint16",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)14519",
                "offset": 22,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(LoanLiquidationData)14551_storage": {
            "label": "struct DataTypes.LoanLiquidationData",
            "members": [
              {
                "label": "auctioneer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "auctionStartTimestamp",
                "type": "t_uint40",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "auctionMaxBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fd35768f1a20a6eee9ca585d3533c0c78105e1b5aec8b05f79946494244eec0d": {
      "address": "0x594dbB828FD345A611934FbD22F3cd703d380739",
      "txHash": "0xde8c430d9cf933fba8b16426b9fcfdf2f9e74c870634aeb3906e169400c06626",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "NativeTokenTest",
            "src": "contracts/test/NativeTokenTest.sol:19"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenTest",
            "src": "contracts/test/NativeTokenTest.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "419229a4ef653275cc9ebfd71620d58fbbe65e0ee36c9acad69175d89a8a7fd6": {
      "address": "0x5DB7A9FAc96B3b0BEb9C89618a41830F749BBF33",
      "txHash": "0x27c7c11ca23c21bac0e653b85c95a87e6dcc1b3492598408f13c66e0a6fcf74e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:47"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_balancerDetails",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(BalancerDetails)14626_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_balancerPoolId",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:50"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "312",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          },
          {
            "label": "_maxLTVBoost",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "314",
            "type": "t_struct(Counter)4966_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:53"
          },
          {
            "label": "_loanOperatorApprovals",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:55"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:58"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)14558_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)14558_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BalancerDetails)14626_storage": {
            "label": "struct DataTypes.BalancerDetails",
            "members": [
              {
                "label": "poolId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "queries",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4966_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)14558_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lpAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bbfe3347f500696ba9459f675a7f6daf55efbbfa343585bea9f5c66a6a0f7be2": {
      "address": "0x9EC6fc46105E29891BB251A936Fc2B9B2462a62b",
      "txHash": "0xd3fd87fd9d205255ce78613fec14105fa6f4c9fc0fb062bbfc75acdb97072b14",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressProvider)4895",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:33"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:34"
          },
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_struct(LockedBalance)5187_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:36"
          },
          {
            "label": "_nextClaimableEpoch",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:38"
          },
          {
            "label": "_lockHistory",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_array(t_struct(Point)5194_storage)dyn_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:40"
          },
          {
            "label": "_totalWeightHistory",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:42"
          },
          {
            "label": "_totalSupplyHistory",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:44"
          },
          {
            "label": "_totalLockedHistory",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:46"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "259",
            "type": "t_struct(Point)5194_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:48"
          },
          {
            "label": "_slopeChanges",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:50"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(Counter)2486_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)5194_storage)dyn_storage": {
            "label": "struct DataTypes.Point[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)4895": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Point)5194_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Point[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)5187_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2486_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)5187_storage": {
            "label": "struct DataTypes.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)5194_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8ea06495796ce667696c6d8c9d5666fef03e26b49868a543df25cb8605ad37aa": {
      "address": "0x7ecf7625c21437a9E00651E9005A6A3D6c78e70B",
      "txHash": "0x9539118f2e19a2bf07a8e8c01e4b3056a918758ca76adca9372e5fbc852f8e7b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:21"
          },
          {
            "label": "_gaugeWeightHistory",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:24"
          },
          {
            "label": "_lastGaugeWeigthCheckpoint",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_struct(Point)14512_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:26"
          },
          {
            "label": "_gaugeWeightSlopeChanges",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:28"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:31"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Point)14512_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:33"
          },
          {
            "label": "_totalWeightSlopeChanges",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:35"
          },
          {
            "label": "_lockVoteRatio",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:37"
          },
          {
            "label": "_lockGaugeVoteRatio",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:39"
          },
          {
            "label": "_lockGaugeVotePoint",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14512_storage))",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:41"
          },
          {
            "label": "_isGauge",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:43"
          },
          {
            "label": "_liquidityPoolToGauge",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_address)",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:44"
          },
          {
            "label": "_initialRewards",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:45"
          },
          {
            "label": "_lpMaturityPeriod",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "GaugeController",
            "src": "contracts/protocol/Gauges/GaugeController.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Point)14512_storage)": {
            "label": "mapping(address => struct DataTypes.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Point)14512_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DataTypes.Point))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Point)14512_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1409b74f31cf92504c9d0008e8898531a114851726e01f632d419b5989aca11": {
      "address": "0x5652b4c26Dd893b516D5660B7870ed2AF0cc5c0E",
      "txHash": "0x7f1324f74dfd5504bef658eea2af71b0f6e5022e8e7312a47269a00e8b65c514",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:16"
          },
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:18"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:20"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:21"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b0390674c201471ee74413d95e461777e9c9b8e178244af2e289fbe41e28b00a": {
      "address": "0x375d482A6d400E9d8CbaDE5FAb595846B1F5Acd2",
      "txHash": "0xbdfcc4594fa9bbef59d4ddd19f39afcdaae56c6b1301cb64fcb57c3f9a6da300",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:17"
          },
          {
            "label": "_gaugeBribes",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:19"
          },
          {
            "label": "_userBribes",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:22"
          },
          {
            "label": "_voteNextClaimableEpoch",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "contract": "Bribes",
            "src": "contracts/protocol/Bribes.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => uint256))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fccf57d3a6e7295eeb5864a6cf5b8ca4acde26288406d4b6b3bce48cf4b39546": {
      "address": "0x1d8a6e868B50636fC39d59CedC93DfedB8F7C55A",
      "txHash": "0xc6d44afe025100a3753c27c4258f7a71f0a18197eb0363d8ca7449acb29155b3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressProvider)11482",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:25"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:28"
          },
          {
            "label": "_isTradingPool",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:31"
          },
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:34"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:36"
          },
          {
            "label": "_tvlSafeguard",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Trading/TradingPoolFactory.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressProvider)11482": {
            "label": "contract IAddressProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
