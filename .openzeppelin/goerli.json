{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe9f5Feb0d62Bf6350A221E9d14Cfb62C1EEABb32",
    "txHash": "0xc24ed6f60ad5dcf1d11f1ba5c88550772e7366be12c34fbe759cbd80de0dc967"
  },
  "proxies": [
    {
      "address": "0x541A934eEB91F91f178d4Cd91F2db0d0e712Db4a",
      "txHash": "0x731e0056ab86aafb89297d20e03b02281e3711207a0693038ea8350b31a86792",
      "kind": "transparent"
    },
    {
      "address": "0x30499a0e1D548435FdB3E856633f6c7cd4Ba9891",
      "txHash": "0x5d9a4e9a302504343030b563f11e267380cc8278b35cef5843dafa0aa9000424",
      "kind": "transparent"
    },
    {
      "address": "0x54aeE695e688b87E2D13379E5af2F463d13907E8",
      "txHash": "0xa296d7e75e45b1b3419f1342b1710f754dac57768568cb10a5516cfb5644a829",
      "kind": "transparent"
    },
    {
      "address": "0x721f7BAE16b7dfdafF22Cc149c909d8527da109a",
      "txHash": "0x05403539117800c5035b7773aed7c77b467d5a3d13cd64d5219609bcf38916b4",
      "kind": "transparent"
    },
    {
      "address": "0x5E8827dF0f496Cd0710B25C4EB37A550242fCF1b",
      "txHash": "0x216a43e504ab40dfb9258b9fc3c988ab28a815a7be9711e8c8bd7d4a2dc2a75c",
      "kind": "transparent"
    },
    {
      "address": "0xf9A7e772FF0BdA5676D35ad30E0AAd7b63AF3055",
      "txHash": "0x27fc429e6e49877ef9c538fb1b6db4ea16865d2ab92f0028b368396d44f132ed",
      "kind": "transparent"
    },
    {
      "address": "0xd311ce967e154733427E5725669B7B3dCAC1519A",
      "txHash": "0xf86bf5d441a5853b6b3049af81182b0198eaaa2c17a0b3e85890ef09d230df7c",
      "kind": "transparent"
    },
    {
      "address": "0xA6E7981ae66b5Be72106bBA4e90624C8c2615009",
      "txHash": "0xf70e0ac381d97f72fe149fdefe9d0ac3de448b7af2fc9fced047e3cd81dbc0c9",
      "kind": "transparent"
    },
    {
      "address": "0x8a923ae10DCfcCa05d7078D11c0582e9F212c1Be",
      "txHash": "0x574b33b9b9b2098d88d53873f11749bc843a10c7c5c0edec7f7dbe8ec0a23215",
      "kind": "transparent"
    },
    {
      "address": "0x51Edf4f4702950D06B4418E7713A9e4891fbB292",
      "txHash": "0x96a7e06ac21bad1dd568673a096e167b2ac2e29794b9cd2f70c2e61e93f5fefa",
      "kind": "transparent"
    },
    {
      "address": "0x3A55132824588559D4bfaC85f7A80F53Cc733813",
      "txHash": "0x67bbbb1b6a9724c760d6a34af721e6cb27479784feceaae2b5421d2caf9dda43",
      "kind": "transparent"
    },
    {
      "address": "0xEaE87a2690609D267B9D48671d7fA3f0aA027632",
      "txHash": "0x7fce3454dfa2d718e834922e6e060a8142419351009c7a0d95d0bd7f344ba72b",
      "kind": "transparent"
    },
    {
      "address": "0xF1Ceba60cA2C94F73cb6db162eE7ad7391D17a44",
      "txHash": "0xcd6645ec479f17a6a275900fa66d94dd5ee921c335333efc9ffd6a18051acae2",
      "kind": "transparent"
    },
    {
      "address": "0x261622D908Dcaab096C5B875bAf1C51803D279fE",
      "txHash": "0x981ceb06ab2eb1c04d4d8b8c8812fdc5456f10c47b03bb1961e493536ce8cabc",
      "kind": "transparent"
    },
    {
      "address": "0x3DD8DeE134bb4c64da312095b7a5dED70cB884aE",
      "txHash": "0x59aa605ab63fb207b85f423b456abaad8ff2b8ba3f57980b4a042f7374a56859",
      "kind": "transparent"
    },
    {
      "address": "0xB2800CcBc821b48A7f7C075b8B25ae3E8Df72eC3",
      "txHash": "0xdacf282586da2099faf126fc769f8cdd02db2595c91f8a67974d604890deffeb",
      "kind": "transparent"
    },
    {
      "address": "0x2032d58Dac6398F2e7FF7DaaE32d7BabDE71F64c",
      "txHash": "0x81702323ba522f07c9f7fb80f0ff685975dacedf37bcf947d7ff13d80aa49532",
      "kind": "transparent"
    },
    {
      "address": "0x261963247f41a12DFe07475324F49B7e54671b8D",
      "txHash": "0x6c653bd39f418ddcd41f915b2b42057c209e0ac7b0135227890f0fdc2713034e",
      "kind": "transparent"
    },
    {
      "address": "0xc70Be26D55Ab44CAB154E2047796B1df364Fe569",
      "txHash": "0x1032ef59a834de3c43425873e0a48e3042c99e69571687ef7eb333241f8caddb",
      "kind": "transparent"
    },
    {
      "address": "0x8a794B33c8587094Fc781fFB2345425d8D282Dac",
      "txHash": "0x51162b74baa4d2595b91ecfa21517bd4febbb0eca91ef76e6e37324ccf3e9c0d",
      "kind": "transparent"
    },
    {
      "address": "0x31AbcAfdA7e8E7A07A7E8A07e1C699EC1d44F828",
      "txHash": "0x68802bab678bdde3d618c9c4dadf3558399eb6b4853365135ed984a1034be65c",
      "kind": "transparent"
    },
    {
      "address": "0x136F8B52343B5B95Dee26EcA82d749C790BD9f2F",
      "txHash": "0x6e82a0b0c3d2f3c8da09177fc7ab52fcadc678fc0ad7fba51a874444da329102",
      "kind": "transparent"
    },
    {
      "address": "0xf790dd39dF46335166Bccf2126a06E01c70a59eA",
      "txHash": "0x0dfe6ce8ad4dd959a66daca8a19a4b6dfb64429cea6b3d47c6541c4b81ec50fa",
      "kind": "transparent"
    },
    {
      "address": "0x22058919880037EE6DF016B0014b48A3daE697D0",
      "txHash": "0x750ab89dff5d6eadd8150d58e01bc0f8f92e068c453535c13d615eb9e7cfe869",
      "kind": "transparent"
    },
    {
      "address": "0x0E335C779441bfA587AA5D647566b01cB43B6202",
      "txHash": "0x5c8b7f9b91ba81a731ab8d0a50ddd32b222eb9e164df083ac134760f30143e7d",
      "kind": "transparent"
    },
    {
      "address": "0x5657B03401641FA6A91B698a3960C326d5DfB03c",
      "txHash": "0xebbe3a0a4ea03a519614fec7b09599c9c91266cee9d019b93a622e2e6ed22c0f",
      "kind": "transparent"
    },
    {
      "address": "0x51d29EF3367e9E43A7485c55FCd58e0F33750210",
      "txHash": "0xdb031219bc7b3c8ce3f953bf98363d0b8d0a2dd78c2d7f237d6bd142aa75bffa",
      "kind": "transparent"
    },
    {
      "address": "0x19084E6E125DdC5dC7bE7E524142Ac7B869D2898",
      "txHash": "0xa6ff120adbe7c2ee4e0e01680aac1f58c3afe8f48d8b268aa8c9ead6fd833c41",
      "kind": "transparent"
    },
    {
      "address": "0x6dDcde112D0Dc5ed518b12a0145B30bC6f916BcD",
      "txHash": "0x0c2a7aa413758ff6bec00eb2d8aec7995ba04d794fe55590dcef1c133fe79998",
      "kind": "transparent"
    },
    {
      "address": "0x95c0D4E4922fc1D8F4DFD35c3a54Bc56a0Feb0Fc",
      "txHash": "0xcb2add52a8afaa2268f7c04c14d1c082352452213a62d184ebf1dfc6a33f91e4",
      "kind": "transparent"
    },
    {
      "address": "0xFd9986b72050279B60aea6A03Ef2f613aA5887bb",
      "txHash": "0x5df92cfcc2addb683f454ba3c67df01b53b7292e6f51fe7d115004ed7b863594",
      "kind": "transparent"
    },
    {
      "address": "0xee3F9A8cFAC1C8960eB3CC28f08d4998B8801F11",
      "txHash": "0x8ea58f651f610819e4bb0d7b193b36a86bffe045efef46ba513cf9329b45f4d7",
      "kind": "transparent"
    },
    {
      "address": "0xE1206b2cc36b868146e4AC48B28C504Ca04d69E3",
      "txHash": "0xac844a7eb1aa445cdbc5a459b9812ac148b4a5174b39a520f2b4b967bce80f36",
      "kind": "transparent"
    },
    {
      "address": "0xE5267785F4Fc0c8861eFD2d27f15859ecE091537",
      "txHash": "0x30ba6f60bdbaa873ca1de394590b5c93b6718a3053bbbfcec4b038c33dc606e9",
      "kind": "transparent"
    },
    {
      "address": "0x0f771503E071FB7930D923D5f9bF0263a22F7691",
      "txHash": "0x78556a5bfa45579c6eb16fe68f0a73c44ac37d39aa5dcf1b03c606b804c1bfff",
      "kind": "transparent"
    },
    {
      "address": "0x4f145ce0C3D36433f411C5686c053F9683FC4715",
      "txHash": "0xdab7e49285a325f940782d9aeac0a3b30e218c35f70abf094e07226b008cb25c",
      "kind": "transparent"
    },
    {
      "address": "0xD07162A12C386e53f55c9cA8014d0E26b252dEC9",
      "txHash": "0x5d6fb48a40c5fd488b09d5f97011d48b9a18b54c7d1d0eabe318daf0e0680bac",
      "kind": "transparent"
    },
    {
      "address": "0xA93eAd2b82B47d0349dADe5a41237508E7aE5337",
      "txHash": "0x049c2aa2b3a2a9e1c7d92b597a73703765167feabc73fdc3a15ff2aa39b2d4bd",
      "kind": "transparent"
    },
    {
      "address": "0x725B3De7e6f6C6212C19e467F6Aa1d7Cae32cd1E",
      "txHash": "0x2b3dfc22aef95b27bf0ae7380c88df3ac3012bfcdc435e25559e49369487d4da",
      "kind": "transparent"
    },
    {
      "address": "0x1F7cf0350D181eB919E95a6A2c228a802723452E",
      "txHash": "0x4f98ceb10b118fee123850162b4be873c1d64c1861caa4b2cddd1b673eacf783",
      "kind": "transparent"
    },
    {
      "address": "0x8381FaeAf1eCCC2F74Ff62AE2C55C7Af79Bb4Cc0",
      "txHash": "0xe88d0ef5a7ac1c1c28d3e178027394572857b76dffae565068fdd25851daad33",
      "kind": "transparent"
    },
    {
      "address": "0xce87AE2f770600Ef85f6e02D3eE435Ba08876576",
      "txHash": "0x234bdd6463611339978b8ac7a78b3a0619cb77cfa2605f0ac252b2b806a72f89",
      "kind": "transparent"
    },
    {
      "address": "0x8dac313f65Ce99Db05dA1f44079c0ED8212255E7",
      "txHash": "0x6eed6f5707b911b201d269b42723101253b59a16214ca0f9e35895538e8c4ef0",
      "kind": "transparent"
    },
    {
      "address": "0x96a3f833A91685B9307E9157275c3E33A58Feb08",
      "txHash": "0xf6ec5251e22af228e4771aca9a490891c599446cd86652567cb10031ddb1eb77",
      "kind": "transparent"
    },
    {
      "address": "0x87285395910a53F1D1A2eA2Ec0d1b484452D1D7D",
      "txHash": "0x7edced0e102b912f3aa6a94a0211d6560781c58999ce05a0d00c5803b5154bde",
      "kind": "transparent"
    },
    {
      "address": "0xAC9144e882E3BAAA5F25A3C1479F95Ce740E0BDc",
      "txHash": "0x34f4e11c93f67d59ad1e93bc77e3c004fa49f250f3373c4b371cd971621a74ed",
      "kind": "transparent"
    },
    {
      "address": "0xF236ECD75b54a70A8917cdA084348ED4A2D9dE69",
      "txHash": "0x69ae5cfb80408d2e2e38384bfa1bc3c2309e2e66bdb160f0d04a0664937f090f",
      "kind": "transparent"
    },
    {
      "address": "0x3433F448a0dAd5e96A94A07187dd5248d1d4dF59",
      "txHash": "0x0f697fc344aa44de98b23384f78d758cff314527f2645e5a2dc572e1f63eeda0",
      "kind": "transparent"
    },
    {
      "address": "0x7EC6b20D28CE6A38F26F481daDDA0b2F4FB19E35",
      "txHash": "0xa61ca3ce427ac2c075e6575c35c513e8ed3673c052698ae96d63521dd5311beb",
      "kind": "transparent"
    },
    {
      "address": "0xE352e2CDa637E019a21484A9baB9f661c61ef325",
      "txHash": "0x1dbcca8a7efe7f995d9ee06eff8f417f55407b42517e64d1d03c6b01878c5ef3",
      "kind": "transparent"
    },
    {
      "address": "0x7bF70Db0F1b36C499953B41aD9C29616fb4C9424",
      "txHash": "0xf7b7660b61e7d2fbb63c1ea4e7e68843c5ce804d436536fad065af64f07397e1",
      "kind": "transparent"
    },
    {
      "address": "0xfbECDcD5A6c149C4580c3A251943999915238EA2",
      "txHash": "0x7d79253de76c03be9241ed500ff82931891395411dead3a277baffb50f2e817e",
      "kind": "transparent"
    },
    {
      "address": "0xEaC2d24465CEa40e9c5A5c9773126868197e4c39",
      "txHash": "0x6fc310e3b2c75b01c9b9b358f36e1167c3743b1096bca27643aaf334632292ca",
      "kind": "transparent"
    },
    {
      "address": "0x3d5eD57e3e6C0cAFE5265533940851A8409439d9",
      "txHash": "0xefb1c764c6f7144be5d491beb0b5360984cb491274d72fdbc1050d71ec65322e",
      "kind": "transparent"
    },
    {
      "address": "0x8AB3f4Fddba4B4BfCa72ac8D3A96327E29bB379F",
      "txHash": "0xba5974ad26ca07decec32f4ebfb9c601b9fab8090d0ffd99b252372508d9358d",
      "kind": "transparent"
    },
    {
      "address": "0x54679B5A4F605695c2Ac95782B823bb0AE40c231",
      "txHash": "0x2e49ad1d0e8709fc1af0cb297ec1dc4ca1a5c55569dea339db8ea050c51aaa30",
      "kind": "transparent"
    },
    {
      "address": "0x79117e354828278F32E1b2Ee7C0233AD170899ea",
      "txHash": "0xa42fa998c64cf9d775426ad2ea02a11cae8f844ebb6407efc15abc0606729691",
      "kind": "transparent"
    },
    {
      "address": "0x383Cc6FEDFfB290fc4b93E4eb2857992c3295A34",
      "txHash": "0x99df7172fb971bce7104b1ec124bb0c0e65b56641b1204ca123d10381c78e9b0",
      "kind": "transparent"
    },
    {
      "address": "0x82f50A6658FC8fafAd9ECF8Ca7C14b2A102dAC2D",
      "txHash": "0xd46502abb69ca9486200db55f4088d68f81048c679b8d2175536894295a68704",
      "kind": "transparent"
    },
    {
      "address": "0x58E7292B53BdeA98da01BA4D4497661A0E1435ee",
      "txHash": "0x4cd3fc2f195b53383a1a42092f61ffe27ee56c138a992c884d751bca3da973a6",
      "kind": "transparent"
    },
    {
      "address": "0x6ee58b778108f9A077310050f63336C33908dbbf",
      "txHash": "0xdd3bcf20ca7e54e184c50b3474980698486be6915c3a2831c3641cc79ee72b06",
      "kind": "transparent"
    },
    {
      "address": "0x42983eA14048b84B0eaA677A9490555EB5298f1b",
      "txHash": "0x59afe1ec9020c8d55596baae48477949ea50b853d13feb7b6405414210aef5f7",
      "kind": "transparent"
    },
    {
      "address": "0x3547B72040dF9D0356832C7Ddc883d6B5f587a47",
      "txHash": "0xaddd52b148f5644659c1472f87137d254e2452363072c694cf4b6e548671d7a5",
      "kind": "transparent"
    },
    {
      "address": "0x3Da4805Fe636Eb5239165D21e483909D32e42bCF",
      "txHash": "0xfca8f4c6befef72fca72e5d0fe6f16e477eb5e2e3d33353a957d3fb844476e3f",
      "kind": "transparent"
    },
    {
      "address": "0xcF7fef47BcF0001E3F5DAd59a212A7775107B996",
      "txHash": "0x0eb1e5455a4d7a659456fc90fd789f00918b3da8bd8a714c62022fb8e4ecaeef",
      "kind": "transparent"
    },
    {
      "address": "0x5e0A2938726DA409085bf889199608221af36214",
      "txHash": "0x7242c8be58dd735dbd474c25b44b3db41bfd9359a714529e37297e73f6e002bb",
      "kind": "transparent"
    },
    {
      "address": "0x9bb52784c56cD2fAe99E2212aAe7D2A1fd9D3E50",
      "txHash": "0x9828666efb25947edc7c5020bd87280227312b155dda1b07b916d57b65e5ba98",
      "kind": "transparent"
    },
    {
      "address": "0x8c8Cb5D5e7359aa84CE0cd5e6e390a4Fa3600df7",
      "txHash": "0x66d00c264e914a99bbd3d6d2fb91eb6dc7cbca5b824fa0c7bcfc74ad4b78c091",
      "kind": "transparent"
    },
    {
      "address": "0x8122eD02F56da765f85f26F9169a9490dB34428a",
      "txHash": "0x3b7ac2dcb41fd423196611c67c3c80e9f3414582b0794329b9b79bf273e02817",
      "kind": "transparent"
    },
    {
      "address": "0x0E11591FB6d80687E8633133f59C57b1247c76ff",
      "txHash": "0xab8f9b516cdfd911f70d2123fe0a0d982191159cb050b1f7470c0f8fdb3f783d",
      "kind": "transparent"
    },
    {
      "address": "0xeD466A71ACE317EBdc7158c6595c8893e3e7acAC",
      "txHash": "0xd516802507731c952f64d1867ab25b51414089c41e1b7d761c9b720d1c86490f",
      "kind": "transparent"
    },
    {
      "address": "0x0E606DcFabA681a46BCDd33A2Ee0A00aBc37ce99",
      "txHash": "0xc61a266aeb7178af2e799d94c2e9100be74ad8719a1f225746958cca4c18608e",
      "kind": "transparent"
    },
    {
      "address": "0x44BE1c2a2A48A147F16BB62f8d1ceD6cda4BE783",
      "txHash": "0x8b8ef1de3ca27f0662cf501daa12a720df5dc45f9279c77a54567ec26e18eb12",
      "kind": "transparent"
    },
    {
      "address": "0x4838D22f8dc5D11Da7172DEe9e6da90Cf9f336e3",
      "txHash": "0x7a690523fd921910eef037fcc5a00db0b87be066e3925962c8e9dacca511cceb",
      "kind": "transparent"
    },
    {
      "address": "0x27474C1c51F630D44b84d317D2Bfc76ae93eFECc",
      "txHash": "0x7b610a3291382ef9907e446a3ed86c4aceb135ebfc11c7682d1fd3cd020fa4da",
      "kind": "transparent"
    },
    {
      "address": "0xEcdE9a7E7D3cd2b7A9d74d130C5E0b1e9410706C",
      "txHash": "0x05c9e2ea33ee4c7863d49961100434a209266b802120b8fee3457732d8daad65",
      "kind": "transparent"
    },
    {
      "address": "0x6652BafbB31cd5312260FF8FC479e2778866f1DD",
      "txHash": "0xb2b3e57a250302f6930614827cfe73cdceb48da62f35831a182036b9410f1534",
      "kind": "transparent"
    },
    {
      "address": "0x0D5D18CD204B75F7F1f10BE73a0cb8C2bB2bbD60",
      "txHash": "0xb381fc8fbbe35df1bfaeddcabff23d83e5fc18d7a681d7d19c58daf25de4def6",
      "kind": "transparent"
    },
    {
      "address": "0x49B7C0d60105A36fEa0074f41Df2cA0e8EB82C9E",
      "txHash": "0xaa589759e61fa986ede8421e8784397899cc94f20905cace2e32c603d4ca1b7f",
      "kind": "transparent"
    },
    {
      "address": "0x1312bf318f29158925856303eD5cA3515c4eff1d",
      "txHash": "0xafa19eee3a120b068889f86faf0c9cc904e912328af71c2f79ceb7ebae134287",
      "kind": "transparent"
    },
    {
      "address": "0x4fc7Fb627A85834bDF0c6AB279392d91Ad343a33",
      "txHash": "0x987c346f7b32b25e08508d7051200e7cc51db1c5f06f68e099bba636f4b818ab",
      "kind": "transparent"
    },
    {
      "address": "0xcB301E479775838191403C5D11D13aF5166ef4D8",
      "txHash": "0x184e79b30b34d30777f32ad081d3ad680b1962b534f09d66a5649fe4c2fa797b",
      "kind": "transparent"
    },
    {
      "address": "0x8a28E86bcdf461C420fCd81644CFb4663624BFAA",
      "txHash": "0xae4c07683c24fe5b50c32fdcc9bdb865dd899fd6ef159d88eb83fa7441a751aa",
      "kind": "transparent"
    },
    {
      "address": "0x79e9F0ea365f29E23e66adFC2d8954C907AeE320",
      "txHash": "0xedd152d4355a088b9c637732008a6dae08522e34a7daa16d0513080e4ca046b0",
      "kind": "transparent"
    },
    {
      "address": "0x6C11a8bB901cbbD394b499daE65496bCf6159f84",
      "txHash": "0xf7446f2634190ce22d378c7e4863630f10087d204635368e510d05678f548915",
      "kind": "transparent"
    },
    {
      "address": "0x2A2120445dE1Bd190d89d4B9BBBBE1272194Ceb6",
      "txHash": "0xe8cb5b2bf8090f8cf9224d161c1926a5048b16bef3a911b56b1a09ac4577f66d",
      "kind": "transparent"
    },
    {
      "address": "0x26267d209Caf2Cdb2e8ad15b91B1B97B0357d881",
      "txHash": "0x9c7a9f048d3e02f7e5a238722f5583a6f42d5284d2bb9ab4356fc14c8fb59ed4",
      "kind": "transparent"
    },
    {
      "address": "0x5Acd3D68b61BA0Edde286e2C35e15aE0bce3084c",
      "txHash": "0x58b397d38b470d847a13bf02e80b0a599139eed0b33d26908be42217cf736b32",
      "kind": "transparent"
    },
    {
      "address": "0xAD4514AC69DF3C0d3B68D46A589eB5a1D043419E",
      "txHash": "0xb0133540b83f421fb907d9485558e59f134e6722264e41d8ccf061d3002a99e6",
      "kind": "transparent"
    },
    {
      "address": "0x1d3Da9D20a775D1Ef69AE9a106578c2E54b5fc63",
      "txHash": "0x4a7c60f59e5f426d6cb6207473a187ce732fe336bcb5a8da990f38567ec7a5a4",
      "kind": "transparent"
    },
    {
      "address": "0x2d62F6d6D8c84CdA1E0eE76fF580204e306E4715",
      "txHash": "0xc37da3ed211da0d712e2abcaed26f93af9cabb0698b2bbec9b240efbd237523a",
      "kind": "transparent"
    },
    {
      "address": "0xC46eD8b3e08e8Bb8071D85af95990BE079dBC132",
      "txHash": "0x6e084faa5ad5074f1dd047360a4fbe749cb4409e80f056c56ff81dd4e4b9049f",
      "kind": "transparent"
    },
    {
      "address": "0x3D0006809BD6663A4f733A8201fd0F968912E095",
      "txHash": "0x128fc0151a16d64850483cfb4af97c9664e55d9d109be2d1b879382e34701755",
      "kind": "transparent"
    },
    {
      "address": "0x606c3f13515E76053B1Dfd922A6497c1bC132516",
      "txHash": "0x2dbdeebdcbb0b78672ed1fe6d60b94d555537b9884345449cba26f8d2ba85a10",
      "kind": "transparent"
    },
    {
      "address": "0xF56cFdF18EeFdC2Fb6fC736c35E9B6A06052C057",
      "txHash": "0x8d038306260fbe358523958efa4d303e99f08a8d99ab6978cc90cb213e332b56",
      "kind": "transparent"
    },
    {
      "address": "0x2039664186341B911B9De2835C41fB9Dcb9e57c4",
      "txHash": "0x3c6e02281dc121b41ab7182c09ea539399b8d4669bbb58d17333edfcd969edef",
      "kind": "transparent"
    },
    {
      "address": "0xeF513fe71555F0d66EFBb5883b0bFc867018F897",
      "txHash": "0xcf28abd5dec3443e4a25ae979b4b53ed2c0f5073645755bcff380a0a7d3eb4fd",
      "kind": "transparent"
    },
    {
      "address": "0x1d5AFd3592B4156C628b8cDAc40118d132100C01",
      "txHash": "0x6e0008a6feb1d31fc585971296f437ee8b59ec13c7d366aaee36616861a0b9b4",
      "kind": "transparent"
    },
    {
      "address": "0x084A760addc7734c3aCEFdF9EE35270D1b1f3926",
      "txHash": "0x4425e23a2d79cf7aca3bb50590ef3c3dab8fb72e0e3cec9ed8ab346ffc00f546",
      "kind": "transparent"
    },
    {
      "address": "0x8b031ce518DDD056fa4bCdfB636c392489eF8511",
      "txHash": "0xc9b5cc7b10ee6441ce5ca5cf8a59c7ca6bc908bca328bd8d0518b131e0f3604f",
      "kind": "transparent"
    },
    {
      "address": "0xE4C10bC0b47F097d9339E1ED0493dC37B79D85f7",
      "txHash": "0x60a8bf032c23fdabc321448baccb7bc4488d4d71f57034e3aad40dbcdf6afe51",
      "kind": "transparent"
    },
    {
      "address": "0x99875B5b97f61DA21f5dae645dc7c35fA6BEDF2e",
      "txHash": "0x34f44dee7b778479800542b4fba3266eaba9db2892e44eb53dfd51a3ffba97da",
      "kind": "transparent"
    },
    {
      "address": "0x2ae166dC4a710F24fFCf4F37C7EAb36DAF017d76",
      "txHash": "0xba6ef774a76578b613f97ceee7193590ecf5a468db8bce103cbcbd8e9fd38001",
      "kind": "transparent"
    },
    {
      "address": "0xa05a3Fd9974232F5877d3fb247cC876994b1134B",
      "txHash": "0xf24c2eebe4a1b72274c0ff16ef6dcabe815d0f3667944b03a6e228cc9bf1ac7b",
      "kind": "transparent"
    },
    {
      "address": "0xc038B92BDd49cbd6FB07387d76DA26503dAA1366",
      "txHash": "0x5ff2d189fab3d03ce1b2e48802a191aa2b91a1c1b1cf21dba8247f59d8153ac2",
      "kind": "transparent"
    },
    {
      "address": "0x4F40a28AF856C4FF8d1073b08Cb99E4c3b7adc94",
      "txHash": "0x6539d5ca92a6ff93354115c4a8851afc000b7f171f4e492a2cc2dc2cdceb6835",
      "kind": "transparent"
    },
    {
      "address": "0xb3347F226AB1BE0E4b453339b9CDd95553b082f2",
      "txHash": "0xd68be0c3f4a238766784a8fd84bb0227fbe0e31132477f1748053c98e6d3a52d",
      "kind": "transparent"
    },
    {
      "address": "0x9BF7c751Ff844E251705E720e9879D6122E96376",
      "txHash": "0xf7c95f731bd5ca880f9d19393cf07a5c26fb7994c2a7be96719eea8e31361156",
      "kind": "transparent"
    },
    {
      "address": "0x880B87111EE236Fa28C5373deeb4BB50C3606006",
      "txHash": "0x3ce9e1c8276508e4d79dd5db82c41d4fa552a3f9b37cb8f844e12c11e5298e2e",
      "kind": "transparent"
    },
    {
      "address": "0xb620789d076BE9393d5D1A76B1E878A2d8b93F42",
      "txHash": "0xbae520caec87e632d45b5df181b763f50933512f2ba573a8c842c3176af31c86",
      "kind": "transparent"
    },
    {
      "address": "0x00f3c340d980C347B5a48E966B3B4fA7ce70039d",
      "txHash": "0xa19d5c6e9f320b9b1a783bf7e5af693c4da98318909077918769ff2751bec8a4",
      "kind": "transparent"
    },
    {
      "address": "0x85fD1Ea5EDa1288d213057Ce5139B936BB667fd9",
      "txHash": "0x242d0b62a58795d464014d581e68772f97d5e7448620dd97fe1805acbfd5f8da",
      "kind": "transparent"
    },
    {
      "address": "0x246CF37582fF245f1FFdC96DeA388A006d619BAC",
      "txHash": "0x85359dfae118373e4027ad6646961a0f9b4ec0157c53c879ee5984c18438c8a2",
      "kind": "transparent"
    },
    {
      "address": "0x9BD97a14821a6AA5FfFb48b7D276E52B9fa3Fe98",
      "txHash": "0x30797a1468c7827afca89577ade322b87c1847ce15f2777798562631999431be",
      "kind": "transparent"
    },
    {
      "address": "0xaDF819bC159f7e0A6F98a48A2C36BB09c1018a0A",
      "txHash": "0xa80d2c161b215aea88108ea55ca25a5dc84f0cd1059a61295627d585147cd298",
      "kind": "transparent"
    },
    {
      "address": "0x31444DC60f98b06F6b7f3dc908dD520792cA9617",
      "txHash": "0xa0ef5a946884b1b1b0c30e3271708541d9235354a925ab90edbfb98674c87c34",
      "kind": "transparent"
    },
    {
      "address": "0x5DbeB37ADBF28505896b1F4F2880A45903c89630",
      "txHash": "0x50f07ce9bb8c8cf1d6de3cd37f66ec065c3dcb34bbafa6846de6f63a038fb2c5",
      "kind": "transparent"
    },
    {
      "address": "0x4B074b7f8C2CF981B772EC1c00B8dfe56B38e62A",
      "txHash": "0x0b70145c020f74550ea757d045349a4d18c06674bb3ff66896c78c1fb50973d6",
      "kind": "transparent"
    },
    {
      "address": "0x59c305a4A59AaE31120f6f2D73Ceb7093Fdc6cB1",
      "txHash": "0x48b90a6dcd40ac848206e6eed4e24fb3bf190e5a27e95c1b13563a137983a187",
      "kind": "transparent"
    },
    {
      "address": "0x6B1574d378b297647e50481Ff2acf7412086B4e5",
      "txHash": "0x2d32923e441bc616741249bfcff1985247c4970cca4ea5bd0d921ec8c8bb89bf",
      "kind": "transparent"
    },
    {
      "address": "0xf32BA2aBB1e16Db341B55c2Fc0010037eEd8f274",
      "txHash": "0x0011fefc3eec546a42eb0ba5dda52ff3f3b7c845673ff6030aafd06a6e8b72cc",
      "kind": "transparent"
    },
    {
      "address": "0x58687A7FAF8D94652A21C50Ca54fC66212BccA23",
      "txHash": "0x954ea1b78dd9e2db74dae2971f717531f3a75a6f681ec6aaf32ecda6740f40d0",
      "kind": "transparent"
    },
    {
      "address": "0x317ad63223c7d3DEA3ac011b0B2B5Ae7E569859e",
      "txHash": "0xf2fbc1d425fbbb20fcab2da5da0cd32e566d21ba35aa9f8a78e147fef42ca277",
      "kind": "transparent"
    },
    {
      "address": "0xaC2EcaaCc07d8E4bbC640Ef8f94833D01F2bef72",
      "txHash": "0x7ed442b3d81cf083e3ce23ec61540ec3b2e52ba92acc278abd7c2295fe45f5e8",
      "kind": "transparent"
    },
    {
      "address": "0xE90792768Ab5f26C74B573c8Acd426920a2c0b9f",
      "txHash": "0xc051cbbfaf902c13f0818415d65009fd0827d36466bd488d3480ef243c9c34fe",
      "kind": "transparent"
    },
    {
      "address": "0x44eD05dE30D51020bd6e6728cCF0D425052e36BA",
      "txHash": "0xa177338176d29c12c2b61a419010cf58be5f238c52c498ef2c4802a742e45879",
      "kind": "transparent"
    },
    {
      "address": "0x46023c80f7EAB6b28Cb57b9B80077F43B2a9bCB3",
      "txHash": "0xaf32816b2f0a1f6c29786b79d719c3ac627967cbac0597d82b8d828a1087bd39",
      "kind": "transparent"
    },
    {
      "address": "0xAb3CBBB2aB5Be194616b56BCa1F17e661cBF7B7E",
      "txHash": "0x9486f818cae785b8fddba8d3eee15ededa0d0442e60cb0babf7b55535e6657a4",
      "kind": "transparent"
    },
    {
      "address": "0x97c2289D512a8DD89386FE642C385DccCCfB9af2",
      "txHash": "0x6ddcff6b2c0c2259c7a08ffe5701cf8142e03e23b3d9387d3713a17789f5ff49",
      "kind": "transparent"
    },
    {
      "address": "0x969d83D6366f42C81f3111Ce894e6EA8F3048d2e",
      "txHash": "0xbdccec7759f803142d55183cb072f96ba0a668c9295194358697ee2cccf94d07",
      "kind": "transparent"
    },
    {
      "address": "0x6f55CaA664015d7465380558C86d0eD545A5F79F",
      "txHash": "0xfa5f4865a29c6a4d63f119a896fab0f1f895ad739ff4abed5bf81267bb8fb858",
      "kind": "transparent"
    },
    {
      "address": "0xD741dD2A4422f85DfcbF8a5BDBBdB16AD83C5c52",
      "txHash": "0xecd849d4eab9a285af425c7b29ec5f081499d2d6574c7acdf07829a6b63ab76e",
      "kind": "transparent"
    },
    {
      "address": "0xb79d56a0dA0315D419F09756774598BB7B865C2c",
      "txHash": "0x41c0c7f1c0e565a658ffee504168aaf8cd5ddfb481a3ff81d3eee3b9fe4ac6b1",
      "kind": "transparent"
    },
    {
      "address": "0x9059e7Fa78a68ff26A26b3e44720cA43a5B245Bf",
      "txHash": "0x8f0c8568061a679c46081f3cc0a0e3c8b22e817e8fd6083c3f717d3c2ac94bc6",
      "kind": "transparent"
    },
    {
      "address": "0x6F4Ad5AaCa133C4c0CcECBFFE15Ebc5e33623da1",
      "txHash": "0xcf6ff2f447e7b87b06b49ac3a6d3494448c16ee80dbcbfb48fedb216c6aab783",
      "kind": "transparent"
    },
    {
      "address": "0xcd08661B0A1C12d80c8225F8313a4AcB358c25Dc",
      "txHash": "0x6c51b2a598fbc61231b5ac345f1f8d6068178c3aa3af29c6d96e56db641ad4f1",
      "kind": "transparent"
    },
    {
      "address": "0xf44160CaDbFcAC7f3Be4299aE68af89a79233190",
      "txHash": "0x4c39591e0e0e8554047851ae35c293b260be45f376cb564c2d36087953febe2f",
      "kind": "transparent"
    },
    {
      "address": "0xa7E95cfADEdB996EBEd54D05e5028e55F18A5CC4",
      "txHash": "0xf1340c5930921b826a48b746963516fe2b7bd863d48f7b42c75d958bf5b5ab6f",
      "kind": "transparent"
    },
    {
      "address": "0xb142E7FE2C80C4582c10073b08F0384c6E04D0D1",
      "txHash": "0x7e404bfb52e613643ba443edb55025e2397875af8669341617f9f3e6b122ae30",
      "kind": "transparent"
    },
    {
      "address": "0x3F9951F1E8BBb64ae13B61b29d38b9096B80A811",
      "txHash": "0x663760ade6e3732a93f4ad8deb89fcd4d85fec1842246ed39e52d51b2ca9b129",
      "kind": "transparent"
    },
    {
      "address": "0x79E3642757c0806C3d0EA93871D9a035C74596C0",
      "txHash": "0x31bcbe735b47b067c67eb4d672bbf375da9603992d7be50b7bfa83a6d7fff858",
      "kind": "transparent"
    },
    {
      "address": "0x81B96069a602a3177d7123D6697E73388d171a10",
      "txHash": "0xa6b191bafa04035e1ae6298b33a1737947e36c3fa7054b534dd0ab223ac35365",
      "kind": "transparent"
    },
    {
      "address": "0xb2e1E90cd2D4E26aaae8A34eFf37ef8D91b39298",
      "txHash": "0x0e5d2dcd77a37248b669eb0f3b3f35114014eccd032cfda549c077ec12d07639",
      "kind": "transparent"
    },
    {
      "address": "0x3Af37BC79751055dB6315774845bE19Eb375C554",
      "txHash": "0xcb0793540de58e5f656b12fac437e1eb636081b4595a3595213d129d19c3a39e",
      "kind": "transparent"
    },
    {
      "address": "0x88c6F87d8D7253CDb5AA44B14dC34E214079f4b8",
      "txHash": "0xabff0ab036c80621482dd1ae3974ab364641e39083a3371f1c6f494e17ba64bb",
      "kind": "transparent"
    },
    {
      "address": "0xedcb4E13bD318b42B41D34D0c6dB56F07d68069B",
      "txHash": "0xd0467128e3ac42700f48cf9f682f9cdc19ec3e601cdc0216263077c9e4223077",
      "kind": "transparent"
    },
    {
      "address": "0x165dc9164fC6415a7E1155D9bC2CA33CF591B43d",
      "txHash": "0x1e39c1dcf48882e7ae7096b9d1ef29aebfd632407a8b857b0abd7209fa9f833c",
      "kind": "transparent"
    },
    {
      "address": "0xDbF5CC53AB8856B728bCCc6C2A8B7a325Ec4EC7a",
      "txHash": "0xcb5ddd5c912b114377dd5da0aceedb32e9039ccd3774c36fe72d51faebe34340",
      "kind": "transparent"
    },
    {
      "address": "0xfd3fE77F15f76dDa5cd1b53723bfb29c06fD12b8",
      "txHash": "0xd5ff283a289e58008124e35c77707f375608d9ed658fe326ff6c67c459b7d525",
      "kind": "transparent"
    },
    {
      "address": "0xAF24869C47Ef3E0c68C3FC6d0072091DdaA90FD6",
      "txHash": "0x0ba14314753029a4a4bfb349e61e0e43a64438d71c63b6871f7c577d5b0a10bd",
      "kind": "transparent"
    },
    {
      "address": "0x13C177f1B387F93c86CeBf8f29F6F60726d870BE",
      "txHash": "0xd6bf455f2a8a721461cc969bb390019542ad9df8d6a8eb46030e9d46f0d28855",
      "kind": "transparent"
    },
    {
      "address": "0xE91805054dFC8C25b8633B84F72B40Ae8DFC316C",
      "txHash": "0x27b69077e43c90146347f262714a51c51905faad10ce1e1f5bab52cf147f5ec9",
      "kind": "transparent"
    },
    {
      "address": "0xb475ee1818494Ac454f9c46d26B2EB9649c4b970",
      "txHash": "0xf65453bdb975e09358f3a9eb83677a14401bbc3b77ec0ad7d5f3c05681729c44",
      "kind": "transparent"
    },
    {
      "address": "0xA774f0D68f0DB60c5cC2E0a06b6f17Ce6a8cd541",
      "txHash": "0x89d9dc838f331824674ba80abbd1790dbd8947c9b893b214b4c46276bbe2998e",
      "kind": "transparent"
    },
    {
      "address": "0x4C36b7d119697A54419a01Ab90C8e5C1c86E928c",
      "txHash": "0x39e02d1eaea9eb50bdd9eff8214afbcc8c6f97d5008399c1c11135560388f69a",
      "kind": "transparent"
    },
    {
      "address": "0xECA7c7D88E6B836a27dA60Ec65955Be0615a2E28",
      "txHash": "0x733812819506ae0c638c97ec99a484b41aafe766f78fd4f5c86598530ba7b54b",
      "kind": "transparent"
    },
    {
      "address": "0x9EF2A493cf8efca8870437E00c6D601072cfD42f",
      "txHash": "0x00024ebc72b4490fc3e1aa9e0259ea8038f912fd5d89f5d59afe2b47dc9307d5",
      "kind": "transparent"
    },
    {
      "address": "0xc9d4D8B6693fDDBF53fe94B6bc17BB1Ee12840b1",
      "txHash": "0x0f3d4f52ae1c23389a05cdbd36cb8ee45f9e0b1325576c7b9c3527de0f586935",
      "kind": "transparent"
    },
    {
      "address": "0x1250314C2035C0Dac338c6093fB6f5F530D9c19e",
      "txHash": "0x82757b8de801d1d65cfb5b7641cdd2eb7ba7860e0b8d0b00c26bc8116210e470",
      "kind": "transparent"
    },
    {
      "address": "0x819DC56ACF360F89B46690Bd7A594A5d58aA1bc9",
      "txHash": "0xa29e13f61f6b0f4f49013623fe2e803152f722f6ef967cb55b2ba3b602866be5",
      "kind": "transparent"
    },
    {
      "address": "0x391061918f8018D49ad2bD1f1b9db0bA8ffca0EB",
      "txHash": "0x48c1c620236727e493a98f7283e739bb9c1d051c3e491449a166184caac9a7ec",
      "kind": "transparent"
    },
    {
      "address": "0xF040ca51670040ef6A83996ADA1303850AC7a36D",
      "txHash": "0xc90ac7da2844a0e0a1b8e8df11e34c6c0ff6d979d08a5fad0932c2463fcb9466",
      "kind": "transparent"
    },
    {
      "address": "0x4E48E42d5d99f11d1957cEF86675D21d56C6Db37",
      "txHash": "0x738d2193aefffc3e4c1b5e77b62690761ec3580eb78f65c540ecb37fb5afbc2f",
      "kind": "transparent"
    },
    {
      "address": "0x99032eC592650179B3Ae9a55c97e36F7A119B1ff",
      "txHash": "0x99155239fccc5c6033de30c68edb28c37f2eb2d2789d106ebc2f2de37588ef53",
      "kind": "transparent"
    },
    {
      "address": "0x964dBc7EEC54FF63404049E1c105E7c1a7Eeedd0",
      "txHash": "0x5bf989659132aeaf919d625093a18ce14eab2d590b2bb685a78dd0bbfa708748",
      "kind": "transparent"
    },
    {
      "address": "0x505c6D7f8B019CC39d785311921f9c7769f19e42",
      "txHash": "0xb60e36fc4fccddfeade49bafbf3b7304b424899140120ad1ede1ffc6beb6b10d",
      "kind": "transparent"
    },
    {
      "address": "0x2A7d5CA9115CF286a88C1715EAD160FdD048A149",
      "txHash": "0xc5d8bba473d99650fd60b93fe56ac447d265619ffee204a627057320d1e9f86c",
      "kind": "transparent"
    },
    {
      "address": "0x773AB18a347C63F1876045225065c21f8868A839",
      "txHash": "0x373efbb28f744edaadcda6f606381db1d10db9ed1438c7e1298e3cf72fa50d85",
      "kind": "transparent"
    },
    {
      "address": "0x3dD561D5DC77BC9ED697C3a70A64Dc1831fD3f7D",
      "txHash": "0x4cd089450aecd33e3aee5fe3914650ec479bc7ca537f93703a10f7301f98f40b",
      "kind": "transparent"
    },
    {
      "address": "0x5a67eD65Ef7A08D7B480001F97Fa0C5f494b1459",
      "txHash": "0x922fc0ad456ee99718b4198c429fa470337886df40065d332c06a14fcf7fd586",
      "kind": "transparent"
    },
    {
      "address": "0x4EA1DF87Aa2F362781392D5cA2dD64AA0F966394",
      "txHash": "0xaa997894baba8b6af1477221ff7051966be0775a2e27dc21ac90fac34956214e",
      "kind": "transparent"
    },
    {
      "address": "0xFEcA3fbd493d800784e2dc47a6fC80Ac8925B928",
      "txHash": "0x453e540961ea6e1fcd840dcc6aae574726d3da0fff4c6204aebd52c7f6178de7",
      "kind": "transparent"
    },
    {
      "address": "0x950b1C98b5d85f70e52b4D88cC3f0bb34DaBB28D",
      "txHash": "0x3818a8ae6974059c3b90a5aa7150082eecb4b74790054a73b79f486f034c33a1",
      "kind": "transparent"
    },
    {
      "address": "0x6533d87719E758B0303160494fC5f353Dce2bF43",
      "txHash": "0xf64d774a6ec86e66d2f3974ab34ab3e20767e6b4aa951ef303c7e08998f09c1c",
      "kind": "transparent"
    },
    {
      "address": "0x0980a0E679dCa8b11A72bC7e5e0c94159B7B6323",
      "txHash": "0x01848b038ccc858adf9b482ff4b06f9bb46fee82f9faf4656bd7c06a2289313a",
      "kind": "transparent"
    },
    {
      "address": "0xA75262Ac0d7D834B889906e36171250570b899CE",
      "txHash": "0x3d6152c7ea12b3d16d5da8263e7ddb611435b13b6be2ad5c7950ac332386bf69",
      "kind": "transparent"
    },
    {
      "address": "0x54D48278A995eD60Ef072D7684373ae3418D6a67",
      "txHash": "0x16bba750e8a41ff588646f45eafc604a15e40e5dedee93fad8b7c2aa154f3c5f",
      "kind": "transparent"
    },
    {
      "address": "0xD1a063d03921C89f07FC04C483fEb174D0be5Ac8",
      "txHash": "0x8c27a57863abeb4a8572376878c44546c626d9389d595a29ba5992b89192c9f3",
      "kind": "transparent"
    },
    {
      "address": "0x7a00e5Ce2A8fa3b7cfCc172988a580a6A0028834",
      "txHash": "0xe478d2a82e676be2c1834fdcc95710c3988c3ae359e6f7bdd5f656b6f204d880",
      "kind": "transparent"
    },
    {
      "address": "0x0373b73C92832e9a0Ad58914B16729716d9406c7",
      "txHash": "0xfa1f008ebe5b6219a25542b2c9b72823c517ad5df5d4ea80696aebf6e682b20d",
      "kind": "transparent"
    },
    {
      "address": "0x3a985468AF141Bd2814DC2fD197cDF0Ddd7Cd5Ee",
      "txHash": "0xe254a00e58ee56fc495794f12d7955340ddf28d8ac619f0c5b1fe9e1e39e16fa",
      "kind": "transparent"
    },
    {
      "address": "0x320A4265b98f3Fd1081f2728DCd78082E4d53265",
      "txHash": "0xed961616278381a16e0198b2bea807865aae53191166f2008b9ec0378df17f57",
      "kind": "transparent"
    },
    {
      "address": "0x9E2929Be49954f9fDF53868434376b89506983Ab",
      "txHash": "0xff2e8bc258e322c0b5e13523798ce8e83fbb0f24a887530614a0f5d4b1f05481",
      "kind": "transparent"
    },
    {
      "address": "0x0e550425f17cB5b91a390C83008bE101A89eb296",
      "txHash": "0xde858029029d620e5113edb88d199204b72244974ef16e11873d157a8b00a67e",
      "kind": "transparent"
    },
    {
      "address": "0xE06DCF727CEC3a2285c3712177ba1f70f813761f",
      "txHash": "0x86441caae08387f9e3a90e9fa8501c9477ce43ba2799becde17d3be8fd8cf5ca",
      "kind": "transparent"
    },
    {
      "address": "0x87dBAA04245E336807AC62A8F7074aaDe918f645",
      "txHash": "0xace239f76d4fbea78e9c186ab976289d34c430fe7572bb5f22945edf0f8e3708",
      "kind": "transparent"
    },
    {
      "address": "0x3971E4Bd5c141d57e0399684E46B6bB0113d44ab",
      "txHash": "0xfdd6b046fa95be2650c10e6803c9099007a06d5a830b94257534635674ac901d",
      "kind": "transparent"
    },
    {
      "address": "0x4c2b1946e1def55f618f929241bB80d6d384efB8",
      "txHash": "0xffe66fb94b612fd012e8aba80ec2152dee87cf5373a1fcee1d631a82ccef9b62",
      "kind": "transparent"
    },
    {
      "address": "0x3f00342c3cf4C1044673E53a0317E6772379b42D",
      "txHash": "0x8095c325f50013009c3772485e39047a173368880ade77635649ac0298e7c44c",
      "kind": "transparent"
    },
    {
      "address": "0xDf4359111B89ecD9735A96E4c6553BB45177Fd28",
      "txHash": "0x2adbbc72d3553e1fcda2b500cafc49ce8f9170c7cb4f259d9ccd32a587d1869a",
      "kind": "transparent"
    },
    {
      "address": "0x2C371cb2d7F0AE3327301AB878c712E29F87AEA5",
      "txHash": "0x37ad9413179a4a3b19ab867c0a42f3048979c6b06dc47c535a44a9a672c26570",
      "kind": "transparent"
    },
    {
      "address": "0x3543F7afAfa22cdB12933211B901Ced7EB623F45",
      "txHash": "0xaab6d62a949a815f7fdeb2ac145b48babfdc9e0d8b09fbbbab4198abcac34919",
      "kind": "transparent"
    },
    {
      "address": "0xDec1EeC879f7B0C8100eA5a3F8733dF9Fc22fAF4",
      "txHash": "0xa4a8a05ebac97daa0d399be75bc7f52d9d408bf8ef13476e6b548ffb7c31dccc",
      "kind": "transparent"
    },
    {
      "address": "0x4d9b5E5FB11f09F401D7c771a93D3426fD7Cb4a0",
      "txHash": "0x3c113e022dab7a1c8be5e691bef17211833280359ba985eba3bc1f21b50d608c",
      "kind": "transparent"
    },
    {
      "address": "0x7A4D48b6d0330ceD0FAa073Ddb362352396187A8",
      "txHash": "0xca4bce6679af846bebea536e778fc292dd0e6e86071425c2d2a889528837349d",
      "kind": "transparent"
    },
    {
      "address": "0x67cCe98B771a368EA90fdeAd3535e219c7f28487",
      "txHash": "0x92aadf4ce00909c6760707b974e40a8fe8f1ce9a5e755260c1cd0fd1dab760fd",
      "kind": "transparent"
    },
    {
      "address": "0x3eDe9236ED97046a0f61aB06edDe5C26B0Ec73e5",
      "txHash": "0xee56b8a0173c390deb683c95287e38b134fd062faf0e22d20cabe129c55c0b8e",
      "kind": "transparent"
    },
    {
      "address": "0x57D8d507A0F771c3a2A3233Df28A31f50045A50F",
      "txHash": "0x783ee9beb843650cfbb06d762733c8a7a0a6efaa08b58c1bb94b7f60f3506262",
      "kind": "transparent"
    },
    {
      "address": "0xCDfB670AC1CccA4f72664F9700b780eBE1141480",
      "txHash": "0x233d4acda738d00477b6d6cf9ee07b38d01172d3c273e31d7d7314abf4c6405f",
      "kind": "transparent"
    },
    {
      "address": "0x85C3989A7f03351aBBa50F93e75253688b57B439",
      "txHash": "0xad0012a723522786fd41c306259da633f5f0018e7758b261c8e1ff3cafc66817",
      "kind": "transparent"
    },
    {
      "address": "0x7870274BA50546074680DE293276554b62F669FE",
      "txHash": "0x61a04d96f676167a43a2549b024990b6250dd75834a95a876a6c7feb883dd9de",
      "kind": "transparent"
    },
    {
      "address": "0xD1e2147Da64DDdb5A9db156E399474d17a589d0D",
      "txHash": "0x8e3076eca0e82d83567c5821b1e5f8e3ffccca1896cad06b6dfe218b464a1de9",
      "kind": "transparent"
    },
    {
      "address": "0x6eb9c4E9E5CDdEA6b771860962135273a758f89C",
      "txHash": "0x72c184d1fe74ae2b4812bd91c11c1a1c1ebd3e59b85feae408afc7e2906e7a26",
      "kind": "transparent"
    },
    {
      "address": "0x9176C08fe38db2fc6dA1B3d0CbF8a8be04A871FD",
      "txHash": "0xa91015d19e8a34bd796c20c221fa8ba84cd0cf9b7fc7466562209e40de24e9b8",
      "kind": "transparent"
    },
    {
      "address": "0x24b17C6a2568305419477F9eF13de35daaeD8179",
      "txHash": "0x5e4c59e7211f7aacd6acbf7286f0c2d9d8f142cae2c4a32b1aabd079fd9ec441",
      "kind": "transparent"
    },
    {
      "address": "0xD7B2a9168595393F2B797F778f79d56DD8481c99",
      "txHash": "0x44ad375c708195bbdfd9a4f2eaca733ae80317b3ae6ec3bdfa305c6c2c6bdd5b",
      "kind": "transparent"
    },
    {
      "address": "0x001D960673966B1A22C1b5Be8Dc34A5906B39533",
      "txHash": "0xb6f2bd72173060692fc12e1f13e34e5ee0f08df4fe15d26c98937f255b52434b",
      "kind": "transparent"
    },
    {
      "address": "0xa59FDA3df6A6eaA1680746564f997e34f27A1f14",
      "txHash": "0x9e181be6f9014cfd00e58125ada799df356c0f708c047aee950e895daef8c4ef",
      "kind": "transparent"
    },
    {
      "address": "0x147CcE1f4bbBD1975C6a97b536E3c16E4651E32F",
      "txHash": "0xf0b042ddd8011875e47becc0da7500beb3ebd1676bc8d97090fccba847c6666a",
      "kind": "transparent"
    },
    {
      "address": "0xD7ab89F161c933322CC103C4F903fBC95bb1F255",
      "txHash": "0x23452ecdf0bc4a7b388a76543274c91e4a4485f117be48b2bbf0abee18042220",
      "kind": "transparent"
    },
    {
      "address": "0xEA68B2CBe2b182c4ED8D94B4f3a04A9A5E43eeAe",
      "txHash": "0xb5f6fd34f7376a1246dad9dc99a627fd140010b2a9ea6171a7443d0bc6da18af",
      "kind": "transparent"
    },
    {
      "address": "0xf5C8aa99786Fbb9e1aBEcCD71A20CF2ffeA61530",
      "txHash": "0xa5f2716861e6de38c53d9f558060f4b869cefd5e330604766d54c59b99c24896",
      "kind": "transparent"
    },
    {
      "address": "0x409EFcDf4B27E8743dE1161937Be13526b7E1c8c",
      "txHash": "0x94fb8667c48dbde5c7977c2501a3c65c4d143e100a8306f7dc0330026c0d8442",
      "kind": "transparent"
    },
    {
      "address": "0xc8b131dfFe07375111eB2062B0F0f4a36F8653E4",
      "txHash": "0x7d6bedf0a89bce36831b9279988c1ec1b8d4ea33f09e3d509b461ff7473bc78c",
      "kind": "transparent"
    },
    {
      "address": "0x9A8d12bcE6dF97e3c0C1B2df0D3B6202197c11B1",
      "txHash": "0xff230cb43869b147051b2c4e76e571c8ccfe03b0aaf9116410e84c19f77417e4",
      "kind": "transparent"
    },
    {
      "address": "0x1D89F3CA6Ab08fe4930Bf7dA530D0E882e2054A2",
      "txHash": "0xf1ae72f474f1b79a38b72fd74410cc7e4d609a582c5e18ab81dcd1d86a174427",
      "kind": "transparent"
    },
    {
      "address": "0x2543B03eb68aF7836090F140d70f9A10d365f59E",
      "txHash": "0x3cd70b26e03521012ec5391f3efb3a5f89f533e3ce156ea498da04f7689f8e88",
      "kind": "transparent"
    },
    {
      "address": "0x91F903E63CF77c5E23E16bcF4F3257cdfb818bA2",
      "txHash": "0xd1ae337c5c64efa0b5dc31eff35687c5b86cb997aeeb86f4caaa1f1e8b128fb5",
      "kind": "transparent"
    },
    {
      "address": "0x9c880d4eF3c00Ed4e7eFD25b419dd5F55e49a7BC",
      "txHash": "0xb5f0cadaacbbe97fb38f84897daaf1e4fd9771e8b7b6f0c6416d26071224f63d",
      "kind": "transparent"
    },
    {
      "address": "0x6Ba5D67ee4548bAd7758C73e8CCcf949Bd471833",
      "txHash": "0xf03325caa6a5c0275788e23fb7eb369376dd1fb5c5dfbbe1ba1efc23fce2cff0",
      "kind": "transparent"
    },
    {
      "address": "0x26A210588CCbD4355822b09b50B1915E65E58Ef9",
      "txHash": "0x5b14132dde4a68f694db7d4906306da91f0d790410bffdabbd6da2a1ae64710b",
      "kind": "transparent"
    },
    {
      "address": "0x61fd5A7c6ecC0312057D0a4566759dB122C4Cc32",
      "txHash": "0x474ab79e673f062a9df904b43e2ff46f0c743a7a974764121097647cc8e5b337",
      "kind": "transparent"
    },
    {
      "address": "0x0d637a8490baf564807aC837D5AAEdD5992f7B49",
      "txHash": "0x2a0d8a862ac83ebfdde9b86cae9d0c456b41ef6140220ddcae8ac0528d0b78eb",
      "kind": "transparent"
    },
    {
      "address": "0x2A7386d563Be7a9dd0c66e1cc6456DF523e0F87e",
      "txHash": "0xa9bad3b374169c9e8d806bf786bff4adc9aad26f768558a7195a7e6be67c277f",
      "kind": "transparent"
    },
    {
      "address": "0x92A172F3D75391fB3070dB863CeBf32E46b7466f",
      "txHash": "0x1aa28777fe35cc812dc28823e7df53ade63af07a5c13c8dc465a892595916cce",
      "kind": "transparent"
    },
    {
      "address": "0x6BE25dEFf3aA9B47ad7026008283476379Da09a8",
      "txHash": "0x61ac65c0440668c53fedc629e81812ec7f4c223849082935335f3a13b56558ba",
      "kind": "transparent"
    },
    {
      "address": "0x1855767277761b82f445222d29EAfa25b64d065f",
      "txHash": "0x4d134c1b616e57c388300c7ccd3b6792d9b89f0e6b29fb169b1597c863845d26",
      "kind": "transparent"
    },
    {
      "address": "0x8d2f528Df1Ae842A5649b80c67b3B562198C5acD",
      "txHash": "0x7c56ca2caeb2b532a6b39728bc662cbd7abd9e513f8a4b378e758710623216ea",
      "kind": "transparent"
    },
    {
      "address": "0x6cc9446D0e503567dD8bcE360d1746A3E3dA66A5",
      "txHash": "0x3a412a2e77a294221e55e7c1b09f2ae3b8ed0e10f01958e5a8a9ce765c3ce279",
      "kind": "transparent"
    },
    {
      "address": "0x385891e602a608D7ddaBbC01700F002bF75565a3",
      "txHash": "0x188d43a9def60d35b9d528f968a681741cfc1a025753d6895b91d7a111403e99",
      "kind": "transparent"
    },
    {
      "address": "0x87c5ac82e359594143AFe0fB6E0B8BD097246f31",
      "txHash": "0xc64540fe0afe71f5399c36743e92f9f19da340acebf5b120296ad6d7e09719ed",
      "kind": "transparent"
    },
    {
      "address": "0x2E335DC390eB2b51C57CF43bC44f2DbB5828f171",
      "txHash": "0x93132a961702566651cd17aadbd3c568d242e0360b202c5cdc1435b383d95d46",
      "kind": "transparent"
    },
    {
      "address": "0xAA11e9F0096C9dcb5a268aC96fda61EEeB101b0F",
      "txHash": "0x21ab2ba3cb47dcf343542787d494c6ea75023e6f2f0e99479351447d5cea856e",
      "kind": "transparent"
    },
    {
      "address": "0x12D32831caa7a107053FCDF297E60161e5a7882E",
      "txHash": "0x61fad2b77d723616647e6996a0fae96c4d062a25454d8896587b61e0e2fa7c41",
      "kind": "transparent"
    },
    {
      "address": "0x69Dfc8a69b0bEF5cDc8CA2CaDa5D1A7C2a959Ea1",
      "txHash": "0x206dc0e6f5fd8b11b13f88374d2e5c2946b34dec23a55eaf0e5bc67ad85b3aa5",
      "kind": "transparent"
    },
    {
      "address": "0xbAa9192949802Fb35c7ab5D526B854C285b0281a",
      "txHash": "0x7f64cfdc98dd72ce4cc874f190b3a0e89b93d6c21937041a7a2cdeeaafe59610",
      "kind": "transparent"
    },
    {
      "address": "0x6A4C29c2a30698DD9c7d3a7d39689c1805FfF6c5",
      "txHash": "0x212f152a4575f524b445bb4dae771cf2d07852abbffdd3011b4aefd9d4de9cf5",
      "kind": "transparent"
    },
    {
      "address": "0x94C5a04ff66D0CB21060f2742ca4784b81d04C20",
      "txHash": "0x79b4f30edb676498e3711a1c2b8a48461e5da7c4b45a30a2ef546c9833a9fb7c",
      "kind": "transparent"
    },
    {
      "address": "0x3a47Cc9e7cb5972F9C8660359742Db5994c95d70",
      "txHash": "0x95f95c25532b036a7480925d7aa36a3bb7cc30614c6f2fd9df60bace771735c6",
      "kind": "transparent"
    },
    {
      "address": "0x0487DeA6eC5780320bA986FaF9b5780945B54084",
      "txHash": "0x3e912e3bbd4a67e639055730c979089f33939f73eab1989a0c520775d8fff0ea",
      "kind": "transparent"
    },
    {
      "address": "0x6E62e634261083C8F14c3C155179aa7550f7E1c8",
      "txHash": "0xf9344c0e7afdc95e6f972aa6bccd6e1167e994a84fa7a1b4b9b5de83655071f4",
      "kind": "transparent"
    },
    {
      "address": "0x2c39313acF03BB89A1d29e43825DdA6dd3a6B78f",
      "txHash": "0x6ee058028cd883de4bbf78e84d406765caf3be13611a8698dfb6ef77a2b6d29c",
      "kind": "transparent"
    },
    {
      "address": "0x239D109688f6A04bD29331B5406E5BD58Ea6e854",
      "txHash": "0xd856605b342c35976a255381b24c737032569e39abb23938376b1d89fa8b16c9",
      "kind": "transparent"
    },
    {
      "address": "0xCD54A685082B6A3Bb74ae217bc83bE3fD3adc7af",
      "txHash": "0xb8b38a662ffb7ea56825fb5bd2f4ba7651ff7412296b77125c1f5344852f3745",
      "kind": "transparent"
    },
    {
      "address": "0xbD569E6165D7610842449817AeDc00385C70bb17",
      "txHash": "0xc625c68cb3094c262b09f81f0bf837fdae419018d8add0a4f3a10ade03700407",
      "kind": "transparent"
    },
    {
      "address": "0x62CA308614a67485C1FE5c141766086daD1952cd",
      "txHash": "0x282347cca476a7509dd64ac5a3adf0b520c6b4dac1152184788417c27d9afa11",
      "kind": "transparent"
    },
    {
      "address": "0xc400dF04B81CF04B3B3b450E8a68D743A03DF935",
      "txHash": "0xe5f8c9ee7f01ed8dbade0524cf39bd6bd27384ecc34a3bc14579f371aa176fbd",
      "kind": "transparent"
    },
    {
      "address": "0x57b62D6DE22A6bb6B9B41E2eC78b7De5C0766A59",
      "txHash": "0x341e0263b8c9def0df063bfb29121804af864ae326e5eebe0b9c44cdda310116",
      "kind": "transparent"
    },
    {
      "address": "0xCdbf60C22f8E379252ef39A8BaB19275764130a4",
      "txHash": "0x8fa891f557dc82369b53798b94c5991fc684494b5a530c4b8a6f9605f1357267",
      "kind": "transparent"
    },
    {
      "address": "0x9040481767bC5a2421caaC692fA17b97936822Bb",
      "txHash": "0xb65622bb6b0c1ca02cc9e3179fd7523159ecbfba293c0d63d053c0c10b033257",
      "kind": "transparent"
    },
    {
      "address": "0x9907c951b74Cf8Bd8fe1476fa5C29Fc514eB4cE2",
      "txHash": "0x060ae55c190f7c66c7f9dea7539e151b8edb7522f0f8a1518f3e8e7b257306f4",
      "kind": "transparent"
    },
    {
      "address": "0x1570371FF79839D1852C4E4269c1bF46c3D31DE8",
      "txHash": "0x23d751516b0eb1317ec8c0fd610d95ffecf7d21c431db1bdfa48a83b0236f16f",
      "kind": "transparent"
    },
    {
      "address": "0x02C30A7972285C8976180fC71AA9a4b4A540386B",
      "txHash": "0x4f78ea71161e7634e83c22ee561d4ca4a536bcbcb58163fce89fce58b0146b51",
      "kind": "transparent"
    },
    {
      "address": "0x08EDB41DF0E2D59D82eee48a92F9216BD63857fc",
      "txHash": "0x925de6d264d59ac0d1f04ff6f662433e1ca6dd494622874184720142b51cb670",
      "kind": "transparent"
    },
    {
      "address": "0x7e0023566E80Dd38626707838c6fB81Cb5F741B4",
      "txHash": "0x12413e63ed19b992160068ca48adb4f69bfcb578534d0444a3010fe76ae554e5",
      "kind": "transparent"
    },
    {
      "address": "0x509411bB8D4B9bf3f4bD62328BfaC655fB291483",
      "txHash": "0x9f8523e05a9e443ecbe9ebbe3ff8c898c86bf030012fa4a9b4d6309fc0c5e68c",
      "kind": "transparent"
    },
    {
      "address": "0x353422Be9510A8342cDd60328d36Bc572cE193aB",
      "txHash": "0x076de93a3b7e1a740c0e752e2421908b848afeca18418bab4c3b7063a10aebea",
      "kind": "transparent"
    },
    {
      "address": "0xf37B33d67Ab25440b6491fCfa9Efc81E5aa34937",
      "txHash": "0x5e5fdb7f2eb1881021f0ab807f912f154c0863343f449d3fefac96a0b252f386",
      "kind": "transparent"
    },
    {
      "address": "0xC1ACf23Cd3De41193A3Eb22872048a14EE3B9D84",
      "txHash": "0x4c124798b3b8f9a5b8c4eadaf30a584c27ad8a6b66fe8e57b7601c8a51c3994a",
      "kind": "transparent"
    },
    {
      "address": "0x9D3e45F375fD460148Dc40dAe077B7115B5eC0f6",
      "txHash": "0x3637e82f1b030ab94d6ffda63226e2256774a576f98655b49c7f329ef8b4ce5f",
      "kind": "transparent"
    },
    {
      "address": "0xEC79b032cfFc48f7dC201AA1818938937a16BEEf",
      "txHash": "0xf9b3a39920851da22615100b4ef49f5310266c92f1192c472e9c20f1def292b6",
      "kind": "transparent"
    },
    {
      "address": "0x5b24d7C87d59291D689ed5C1121BaFbCa9B79D1F",
      "txHash": "0x937ca509ca88c7f3a2d825c0ed6fc527d726469df91f6037251f75072f35d751",
      "kind": "transparent"
    },
    {
      "address": "0xD0Ee6a60f25D364A8d912E398f85C134eD53D149",
      "txHash": "0xc2962fba94f51a0f86b45f2f01f26ce2a480639a56188982245bd596dfd34737",
      "kind": "transparent"
    },
    {
      "address": "0x79a0BbC634d940cc02DC1C5B4F722f304dB9b553",
      "txHash": "0x3e0d996a49864a077616306a9d42c8fd2b7bf268faf1d5ec620895b338e09e3d",
      "kind": "transparent"
    },
    {
      "address": "0xB0D045f14DF90910e823d3d32beF93E4f6cC71D8",
      "txHash": "0x2b9b26f1a83bcc79fef21ca9959020cef2ea0459498ddc76c3c3998f2421453a",
      "kind": "transparent"
    },
    {
      "address": "0xD145F97e815F8EE08461A366FB9C2F5559CC0607",
      "txHash": "0x75e75e6ef0392031950aef76daec5bf47e8f08162a8f48df63f33d854163a9fe",
      "kind": "transparent"
    },
    {
      "address": "0x2d93736Aa646142414D8261022a7BbF349e9e65B",
      "txHash": "0x249848023077b1bfb3a7ca892616ca206faf9cba98914ebacd1ae20d4d210434",
      "kind": "transparent"
    },
    {
      "address": "0x42E21E92Eefc589bD29750C217D6a255a984f902",
      "txHash": "0x08223a70d5f70f7708118a5d660f60bd97339dacc5fcfa28ddd0745df5ea6bbf",
      "kind": "transparent"
    },
    {
      "address": "0xB7000bFDf4475Cf7b1B5c7Ac414d89554176D63c",
      "txHash": "0xea0e59d3315444197361304b2be5ad8d56903eb0bff7891f8123d13827760939",
      "kind": "transparent"
    },
    {
      "address": "0xc41F72de9957b76f39C564A514E9644b9A764D7F",
      "txHash": "0xe8134efe3b7ec6dad7194b3e23c29bca46a31c1e3b9b5d8aeb5d3e38635cf7fd",
      "kind": "transparent"
    },
    {
      "address": "0x5AEFDa4A72D61316Fb956c698aEcC1Bae1030450",
      "txHash": "0xf4375cab1e97d7a7fadf687cb7082a855be0066153af00e7f70a9a55baaa6d9e",
      "kind": "transparent"
    },
    {
      "address": "0x2AAd5cD02f8D0bB8b1737FD6d4Fcc4f976609279",
      "txHash": "0x49ffab47158f132d032b9d3f6475506525f230d17f87ee2169fc423e498c0dfd",
      "kind": "transparent"
    },
    {
      "address": "0x60497B61014227d61d3AE2161F59a41f38075d70",
      "txHash": "0xe7e54aa7775e21c69669d86c05c01df6bb3adbc46c19d162a50fe521e2d2d9a0",
      "kind": "transparent"
    },
    {
      "address": "0x9F8258f6548E333915a5f515d848D17BfC27144E",
      "txHash": "0xb87fe331b03fdf0cc247b4b210beebfc0d0e9307cc7e9e6e9cb9b7a5ababa06d",
      "kind": "transparent"
    },
    {
      "address": "0x7964d77Da720597206051F20c7fCe637C3b6775F",
      "txHash": "0x0572f7dad5e59fdc2234b4a99f588978ebf4dbb6dd6dd6c214e69cdad1aefe1c",
      "kind": "transparent"
    },
    {
      "address": "0xa047Dc268377Ed0C5ff44F669C009950B4E96Ce1",
      "txHash": "0xee753d9a163a5223a4fda90a3d92dc66481ccf6a7b54915c5560ed4ffba4e752",
      "kind": "transparent"
    },
    {
      "address": "0x26E8ed8d63f6f546EB675e2a2BFF5C16eFC2ad39",
      "txHash": "0xb3b28128fc79068de25edd7b64eff69725d6a3731af38bf580fb54c4cf1e16d2",
      "kind": "transparent"
    },
    {
      "address": "0xE0ab31634F289C96d570a9B92D1997398b3bf7DA",
      "txHash": "0xe4973a8d2287f6847794e76d68f8f632a4f8beedfcebdcf754a033fab624db0d",
      "kind": "transparent"
    },
    {
      "address": "0xcEF4dA8C6b3BD5721c8Aab144aA2964B94A4cd4f",
      "txHash": "0x1d4383d65c8194fff0ab8e35858ff63ae52577239d3f7b31313acb2056e0ef14",
      "kind": "transparent"
    },
    {
      "address": "0xb315C365DBE91ef551F950181A89C8a7496b5038",
      "txHash": "0x5c786180d639e558e11e0878f697c36ff94d1231ba83eb7ed54b3e152000a0b0",
      "kind": "transparent"
    },
    {
      "address": "0xbf3CFC309202b22530a2E1414e99a1D70B316bc5",
      "txHash": "0x65c3b6e5f6e919d0ac7d781a14215071125f8e646655611f093ef9c2042193ab",
      "kind": "transparent"
    },
    {
      "address": "0xa8C118214fc1520B3a5925761765C21455A5B2e6",
      "txHash": "0xc8c8bf3bb24477e214ea4328deb030bf8843fd7e612eb4d3373fa0a1b1c311f9",
      "kind": "transparent"
    },
    {
      "address": "0x4Fda602f53Af954Df96CA7395fF07022aFD71B89",
      "txHash": "0x7a852f572a01e5400cfcb44139dd180a0b16113de4e63735e64d6eff5ad937a5",
      "kind": "transparent"
    },
    {
      "address": "0x7EC8b3E8A781d4b728997f135D66F7Ea965b0852",
      "txHash": "0xabeb617f9a0f0ed82d6e7fa7d489c1841f43ac5df61c0179b50696cac42f062e",
      "kind": "transparent"
    },
    {
      "address": "0x91e8Bb39EB2Fff3315C1F31265a93d25Bf7A2D15",
      "txHash": "0x294ac5111201c92fce82ae9b82101a8864578f6b41b94ada7d183f32b9b2d792",
      "kind": "transparent"
    },
    {
      "address": "0x491eaff5F087829081F30F54202Cc1DaD1d9DD81",
      "txHash": "0x4d3c20c41eeae6b2fd9ebfca0bbf1fdb3330760adb056b4db14a5b5a7c48fd8e",
      "kind": "transparent"
    },
    {
      "address": "0x029A011D3094B2CfA115A4403f0061B531Cbfb23",
      "txHash": "0x83d64f7af552a39b2d0555acedbe2cf198fef145077eb6c038953e7678d564a5",
      "kind": "transparent"
    },
    {
      "address": "0x25d2819766A0647a9f31F45C0fC63411987b4d60",
      "txHash": "0xefaf9b800124414680f8bdcab35d8f7e8e790bb8ba89ba2dad731e10a0230e7c",
      "kind": "transparent"
    },
    {
      "address": "0xc6af373DE65101407fc438EDecae2C8205a95aDA",
      "txHash": "0xe8d8bebc8160b3a94e8cfc006ec35fd0284d5b4797d4ae2e01b21150bb45a78c",
      "kind": "transparent"
    },
    {
      "address": "0x76c8Cb441FE6B4FeCb92386F9fa61851043a2F7B",
      "txHash": "0xdacec04e069957b8d26142e77c2a2713c0980e1478f33eccc33d5c1b308f1f8c",
      "kind": "transparent"
    },
    {
      "address": "0xFdF7d86Fe5ED4CfaE5591aa415589eCC77520a41",
      "txHash": "0x2acc3bb3238820cb7877b9386af85e470afc21d091c9d4a13da1fe7f10b642fe",
      "kind": "transparent"
    },
    {
      "address": "0x61b5c2B4B034a9eE2FC54Db77dD1C6185b08DF01",
      "txHash": "0x6e4108de52855cea2dc8d91b4eb2ee50c7310a9b9e8f7a6be278267b24f88eda",
      "kind": "transparent"
    },
    {
      "address": "0x3Ba4E55eF7383e23593D106367F6684E80d029C6",
      "txHash": "0x12edde199a60e975d2b4a54185299650f346be98a9fd26f213647277cfe2fe56",
      "kind": "transparent"
    },
    {
      "address": "0x7aB65cf31161F948196d3fC1c4C4368E888C9258",
      "txHash": "0x5dd38ed737111e40e6b8f751073cf603d5ecaa57d3184c96264c826555a136be",
      "kind": "transparent"
    },
    {
      "address": "0xDDb13004f7d7730434836F5fCdBb742a5f3efBAd",
      "txHash": "0xfa90c5699d65fa6f5125ac17392a4c68ec513cb7e3cd7fa09216b1f74dfdddd6",
      "kind": "transparent"
    },
    {
      "address": "0x632604F0f53A51f38f8a3F9D26A793D0609b039d",
      "txHash": "0x9c6750fb5407980c65076f1a12da7572a4c78057fd25f770c411f615537ba549",
      "kind": "transparent"
    },
    {
      "address": "0x818f3db3e165c2D60f25FD2d85C86836F1E693a6",
      "txHash": "0xde563b2989a1aa55903da1ccb971cd20d4cca9b454b61145fd1d6f023534a03a",
      "kind": "transparent"
    },
    {
      "address": "0x4eF3575731141439c49A8FF612b642618F855771",
      "txHash": "0xe2be1f3f87c89145cc4faf48f5ea7d0a1c81716bd6cbb42feac6e376aea91731",
      "kind": "transparent"
    },
    {
      "address": "0xa1AA80F4325C182C944c044da65D0B0FB3680F6a",
      "txHash": "0xab094bfaaa045d89fbfc2615609397fc4efb38ba89a743848deea0696f64268a",
      "kind": "transparent"
    },
    {
      "address": "0xa6B410C4860cb1D1661924F7f2c2E5aebf0F46cC",
      "txHash": "0xab4d939678b1991b3a2f648ce38b2c60711266d477be8c6292efa118de09c85b",
      "kind": "transparent"
    },
    {
      "address": "0x30Eb9e1330E5197861d77f3f3404B3698BD8E886",
      "txHash": "0x9e427499eeb9731b6690d6e439e8e9ee3ad411ae32969c37b5f07d6496dee398",
      "kind": "transparent"
    },
    {
      "address": "0xb5580Ec123B1477698E8B695b24E068c28FC3b0b",
      "txHash": "0xe56a3500b967dcd5575f6e2e1501c5401dcc67a30de5bc30cb8b9dfca6886501",
      "kind": "transparent"
    },
    {
      "address": "0xFb3BfB3410479F22a782ceb0A943D7c7C1E103E1",
      "txHash": "0x09968f8641bba10e4e88ca0376639f9195259331288de232498c99e6bcf24595",
      "kind": "transparent"
    },
    {
      "address": "0x1E7e1638677919b140bbC8E6927a192FE765e53A",
      "txHash": "0x3c04a7f34d479b188f26881a5464a7bf66706b347d57f06ad676b22105617786",
      "kind": "transparent"
    },
    {
      "address": "0x634baF2c5Ec96Bee0E68a54aE7B89654eDDB8eA4",
      "txHash": "0x0606658a6b036218f243861c39591d31ebd434c6f3936d3e3d3522a34920b2ba",
      "kind": "transparent"
    },
    {
      "address": "0x1DD31FaB89A52E9BD96789c9465dC1bB43F5eB1a",
      "txHash": "0xfbe95b04d1c38f673889ff03c0b5a9c5cbcd0eb1fcfeda1f1e59129dd36e190d",
      "kind": "transparent"
    },
    {
      "address": "0xDDC34dFd1e73f6E251849320013095114ef55c77",
      "txHash": "0x1f2b73d3fd602eceebefe83d6d1c97150487e806e460ee00df095993e8bb71db",
      "kind": "transparent"
    },
    {
      "address": "0x91671f351536feeAC74f1546b7A0208ff8d6D161",
      "txHash": "0x49e3083148dcec99598609f55724bf6cd69e55823744f3cdefca526ac990585c",
      "kind": "transparent"
    },
    {
      "address": "0x12Bc9B122ed2A9B182033De1F07d0a442fb618aC",
      "txHash": "0xe951f184fc5d46d84cb7ee0d563c1da390c99f9c6f6122113803a25bfc8c2c4b",
      "kind": "transparent"
    },
    {
      "address": "0x448b47cacc18cA0A983C7f1eFB98BB3a30205b2F",
      "txHash": "0x084756a4f193322aa3b45a386f25486785106c2a17b0b73c80397b735afaf7ab",
      "kind": "transparent"
    },
    {
      "address": "0x39d4De5D6dEB24629AF8743793e6c034C3067b9D",
      "txHash": "0x91d9bc709c8c9af8864e99a16e64e2e888bd20348c9885fb70658617e4827817",
      "kind": "transparent"
    },
    {
      "address": "0x82EC515a0675f40B01dC2fF4cE4A2C8fd79cFc16",
      "txHash": "0x3a08264c8d0fe7f2c6adf550021963228dc0908136408c9b813a3c59e7d24f0f",
      "kind": "transparent"
    },
    {
      "address": "0x17829B2A246703D1cE84b52a65d8a00624940F2e",
      "txHash": "0x766018c45adbac97e06fe4cf93aa10d9ba7f22cfa08f24c7ea3d9b6ec94a9f12",
      "kind": "transparent"
    },
    {
      "address": "0xabA8ab6B293CBf05a0Af00642F5881CF8D029dAB",
      "txHash": "0xd4b5f02582b9c1a5b8ab406b9ebc5d27e1d0d18770306752bdb3bb95ad95a5f2",
      "kind": "transparent"
    },
    {
      "address": "0xf9b57375bd7586942358f873e302A1edeA5cC8DD",
      "txHash": "0xa6332bd7603d4fba3a04eae3a81f40509761c9a811c5b61d2866624408c2526a",
      "kind": "transparent"
    },
    {
      "address": "0x9F91d8333A5Bd4ADF426e4204afe4B0ba00fE6DB",
      "txHash": "0xadada95a65eb74b58e83e49e29187990252ee6a0960440009461ee74d9dc1442",
      "kind": "transparent"
    },
    {
      "address": "0x7aBd4DaE3c328fd29ff9bDeC0C099362299544c9",
      "txHash": "0xc54a0b5dd24b6ee1fa41898ecbad411bfce4002032f22027f68ee8e231b71797",
      "kind": "transparent"
    },
    {
      "address": "0x4a54648Ea5342D2e8Cd80512Fc5fEe18B4D7277E",
      "txHash": "0x4b2d1170f5cbbb6050134141df8e4e6bc6841fa74ac8ca78da37c3360f9c48e5",
      "kind": "transparent"
    },
    {
      "address": "0x1B90Db712eE76Bdb2A5fB12D5EBFdFAb431131d8",
      "txHash": "0x080428202f4726a087dde21055c965417c4411868bb93558eabbf81d56b9632f",
      "kind": "transparent"
    },
    {
      "address": "0xD09e37861Ce4010438c3b2D8F09749d53af8E682",
      "txHash": "0x6ff4731ccc61a6198835225778694cc951128218a1cfd1ffb3dad94eb528e1cd",
      "kind": "transparent"
    },
    {
      "address": "0x9f590E72D3b15832E6Fe003f46d6317b7039be6D",
      "txHash": "0x9a84b11cc44ccd3d2361c970c767a86f6c0583403fc96febe1fb503e70548571",
      "kind": "transparent"
    },
    {
      "address": "0x8Bc7386d02E9f336F45FC7C78521Cb7307fEB65D",
      "txHash": "0x354012cdd6ee0ba1cc0a100bb865ce0462c80bcc0c3040f49c7592bde9396f5a",
      "kind": "transparent"
    },
    {
      "address": "0x0FEd2eA79C1621353f4B99F7b4b50AfE3A484aBf",
      "txHash": "0x5e452581cdb44879e3ee1c5b3e2954e03c512d2f3c05709bb0297d45d9113bde",
      "kind": "transparent"
    },
    {
      "address": "0x344f0a9184B830E7aBD29697Bf51e34c134c35F2",
      "txHash": "0xfbc51935a710a76787d3ab39e3eda6995fff1fe3fa2a76fe65a6163f6bf4a793",
      "kind": "transparent"
    },
    {
      "address": "0xFD260928efC59456F4A9CeDf3aE1F024160CC8e9",
      "txHash": "0x5e1151fab66b771a03c4ad4352d72551d74705a2d67c57fc5df49d29c4038a02",
      "kind": "transparent"
    },
    {
      "address": "0x2B4F50d099A5BF9c5A347B6af55eB92Bd365cd78",
      "txHash": "0x02c90aafffacefec452d3139e8588f6c3ee48d5ffa3825a2dae77783c9859dc9",
      "kind": "transparent"
    },
    {
      "address": "0x2a822C7892f840564c27E407c6A64fce14178a45",
      "txHash": "0xe5a8826182b57413f4e9774f37c69f826d22abd681f3a43cf55f3ec143d483f0",
      "kind": "transparent"
    },
    {
      "address": "0x55a1C77C873624725b710542c6DB200b08B4bb1F",
      "txHash": "0x53cee3c5278b2bd68dd85729768f988504f623d09ef7bd229f127806a0916fd9",
      "kind": "transparent"
    },
    {
      "address": "0x839151dEfD8972e112798E9ddfFCCc3c4A4Bdc05",
      "txHash": "0x821f5a53029d4340c15aa36528e3d37cac87a3819a465b0da0dc7900e6be435f",
      "kind": "transparent"
    },
    {
      "address": "0xAf2Dc0b25c466A30D3c3DB53913E46046D752A34",
      "txHash": "0x0d24135b828d3d1bed9c01122c795b771d719096c095979491c0b12c758c0268",
      "kind": "transparent"
    },
    {
      "address": "0x7c1e89bE453627552f9370a30F4B01851a7dD8A4",
      "txHash": "0x356725580c889852a54f4ca0ec1e7b70fa172718b382aef01a24a04d508f3dea",
      "kind": "transparent"
    },
    {
      "address": "0x6CE66DeC0cA571B849b913Aa793cC6302B3F95bC",
      "txHash": "0xeffe6edf0613785f2cd20a4bbf0953d81e39b1e6d8dcb12357efc16a73a48875",
      "kind": "transparent"
    },
    {
      "address": "0x1B762743dC0B48c4361579E38F084969EBce201E",
      "txHash": "0x19612277856157a34b824eb9dedd90cf987ba75d92c16d72d03df99e9b6d8900",
      "kind": "transparent"
    },
    {
      "address": "0x35B4A3327a539a053E1b86e66a01A450EC6e7F5c",
      "txHash": "0x2d62a10e542ccf3556f17bf93f8ec01f388a58b0bee9b8a255a12c010a38d99c",
      "kind": "transparent"
    },
    {
      "address": "0xE29c019918d73565F960D2477cAc28123038C34f",
      "txHash": "0xa30609d0de5f8ac501bfd7cfe1a37d56af16ff65e275dcd299e06098f66263ae",
      "kind": "transparent"
    },
    {
      "address": "0xE1C19a7424D8bC5A247a2CBE450fC1a1A675058C",
      "txHash": "0x29f755ac18114eb43311e6a0f21d01ff79463d4a0d5a49970c88f99140beb47b",
      "kind": "transparent"
    },
    {
      "address": "0x8A48d44F9Ca64152587a051d683A78D8B4a8A58A",
      "txHash": "0x7bcbb7e998e34af29d8114329fc29cb776e95ee2d10386d7f13d075fe1f4f88d",
      "kind": "transparent"
    },
    {
      "address": "0x69f26F33210b8e42Ff8dCCbCE21981e21b0BE237",
      "txHash": "0x43d4b2c5ce8917442211c76b1b64e3b3fea50f83c66facc1cd03319da60b18af",
      "kind": "transparent"
    },
    {
      "address": "0x3B7ca4Ab158ff2e4893c7846034B6ac678c15068",
      "txHash": "0xda422c159297f6df97744de9ddcbbb800d80b7ff1999d5213ca7f03736beaf01",
      "kind": "transparent"
    },
    {
      "address": "0xEa75d358d79b53Cf4f69b73b9e743a9f09B468ce",
      "txHash": "0xa42a6b2f183ca3363d43b02c23ebe998158e3eb0f9603f7afa6dac97958d15c2",
      "kind": "transparent"
    },
    {
      "address": "0x0FFD13F08e17693e172d6bc465aAf72c2AB73B20",
      "txHash": "0x23bd74b27d4af4ccee2ce1706fed81ae00e64e4a5f8b17b7f419e8bd8813a86a",
      "kind": "transparent"
    },
    {
      "address": "0x0BB995d1187aeE7a3491fb1AD55b4DA644570a3F",
      "txHash": "0x65e941a6cbb2b4d2208733e6d245f8c9f67380add2986863281479d2c2cece06",
      "kind": "transparent"
    },
    {
      "address": "0x673a988736b2248413246Cd8c47488d0EC120795",
      "txHash": "0xf7667eb662443d2561fdfe8ff7f852e98187d602c937c0a743ce95316bafae3a",
      "kind": "transparent"
    },
    {
      "address": "0x87B25601cEd5163Fe04A5710258502fE16363166",
      "txHash": "0x05912405fa6536205c7c2f75fbebfbf3facb34bdad3180140bbdbdb1d688f4d9",
      "kind": "transparent"
    },
    {
      "address": "0xA249aF25517E579b150Ad1302f1Bc3b93b6f2389",
      "txHash": "0xca4245af60d43fe991cb45ae1ca0f7ec616ce022109aca6b33d0aac52d41f929",
      "kind": "transparent"
    },
    {
      "address": "0xF1cbb99c957364138ACf17f2C456951C55ae37c3",
      "txHash": "0x91b7fe424dc24e92bbb3ff9e08509bc4006189a0e948659fca87938089746a86",
      "kind": "transparent"
    },
    {
      "address": "0xa0Cf8B7099413d9E3086C764A5a460faEE5d1adB",
      "txHash": "0xd82a9fb8fb034f4e6e8f3ac1aa5dd4086e965fb941bc19cc2b4b8594d3286ad3",
      "kind": "transparent"
    },
    {
      "address": "0x57595179306BdaF24bcD295d515664e4f791d121",
      "txHash": "0x7910c7c066352c18bdeba1f931fb5ee5b33e73fda5ca15c91e88eb14ddad0084",
      "kind": "transparent"
    },
    {
      "address": "0x64D45795F854Abd7869240274d3004C95d245738",
      "txHash": "0x5b931f14c920e554f2406a01eabb32eed220c3f7cba12614b66f3e49104908ba",
      "kind": "transparent"
    },
    {
      "address": "0x854B6e9F16eB7457fA11B9813d9eE197F28Ab901",
      "txHash": "0xe134f2f5fdcecaf4e60d27f966f4fa222e2aeef0d03a2d99dcf4da39eec4468e",
      "kind": "transparent"
    },
    {
      "address": "0x60f4F6306Bc98B6F7A0BBa5042E243eFBae70b1a",
      "txHash": "0x5d3ab63add85471082244e612520f1d8a29741368b580d05ae2b5ac4d9730087",
      "kind": "transparent"
    },
    {
      "address": "0x20389cbbE31fA2E393757aB4e3f72d2e37d14D41",
      "txHash": "0x7e1568fd9dac40bc55fca9520f09245347ec3a863a21ac0717d5a57bf3a0943a",
      "kind": "transparent"
    },
    {
      "address": "0xE00066F68f407EE305b2f7de692A4085653944c4",
      "txHash": "0xa503a69c54644ededd8f4ba54b0b95d6500ead2451ee2475985a307670e25b88",
      "kind": "transparent"
    },
    {
      "address": "0x5Cd1B0B03e8E9992fb8b3b2Dd29d9E601DE7Bf3e",
      "txHash": "0x5f762b90fd3ca4a9db549b1556c4ae9622fd3a4fe5bc2528faed367b8c7149f1",
      "kind": "transparent"
    },
    {
      "address": "0x960F6AAa3880223337cB8CfE3FC628C5388E78cf",
      "txHash": "0x768386ffd368ca37f255ff4e5b9a0f34f31c4b798b7bc02cbb9359c28d749378",
      "kind": "transparent"
    },
    {
      "address": "0x6a2c905D65b7BE9e5284e067a04c2124B757Dc33",
      "txHash": "0xddb1f36b933a1108972b8b07efa1b4d542c07216f7d00ede5c927d6f1482b821",
      "kind": "transparent"
    },
    {
      "address": "0x3f8bB11dEA79fB15615B06E2Db132c0de7515354",
      "txHash": "0xb9786cc742b1d1bb81a7f547679c1b3740326ba990d854061338a07c742b2664",
      "kind": "transparent"
    },
    {
      "address": "0x212dc24b1A5cf6562516D160c4139f68BB858Eb9",
      "txHash": "0x5a2e6f65d69ef9d8279280624ca47f97b9a4262fd9a54312f1470968383a5909",
      "kind": "transparent"
    },
    {
      "address": "0x128d35655Cdcad9a87652884330894C823346b8d",
      "txHash": "0x2e1cb4f8ff4c1642d641d48ae231d80499f212379ae2af65a6cb196ecd6b2c51",
      "kind": "transparent"
    },
    {
      "address": "0x52Cc50E16021C544920361ce9E0145868A742fCF",
      "txHash": "0xd439ee659cb5385a5fe18f2ef7fe23ed7c51b94daf2c07be55b49930cf92e427",
      "kind": "transparent"
    },
    {
      "address": "0xED8aCE7F7E5f596Cdd69D4aaf7F0dF2E983968c0",
      "txHash": "0x1def4d8a8b8cd17f835446e9abfacae6444adc69b345b27df76d00d28667f261",
      "kind": "transparent"
    },
    {
      "address": "0x2537182b27881F456EdC8cAF9abA3154f644f4ff",
      "txHash": "0x9add09951d0bc60920697a813c0c0d7c3029bb826665db642511a07ddce41cf4",
      "kind": "transparent"
    },
    {
      "address": "0x630eE3e3A3087A813d12bC5D2A1F059199908E9B",
      "txHash": "0x016f5f500706bc89c0ef6914bb338d290b30adbfc1636302d02cf13db719cbff",
      "kind": "transparent"
    },
    {
      "address": "0x9Ecfbbc7b37651E42bFb637A696F2B2Bd48544A4",
      "txHash": "0xa123ff9e075c10869fd2d00e725d7e09ed4edff204a7c28ee1f79402089873d5",
      "kind": "transparent"
    },
    {
      "address": "0x1D90b9064a40ddCDAAc735f530C754dd65cbd18D",
      "txHash": "0x11e7f9719ab253daae01e8d5a8757145e590db165b5bd85d6a2e8bfa60523228",
      "kind": "transparent"
    },
    {
      "address": "0x7D4901a24911A0385D4D73E118113e7DEd880424",
      "txHash": "0x717a5b0fb6629004aa17e2b1a05a7ed1d50e4470687088a151904c6f80fd92dc",
      "kind": "transparent"
    },
    {
      "address": "0xabeb10402c06f18a3b54b118C130f6aB0bE969c4",
      "txHash": "0x54f9f39acf4795369f97ffad59be2ec2e414cb1ec5b303c88835d18bb895262a",
      "kind": "transparent"
    },
    {
      "address": "0x4e2E4C828e69Aa0606f34bc38d1B4606f612f158",
      "txHash": "0x3e1d48ed4ccca2170d9b194fd0d3fd4e789d876fce559ebce52a486ecb90c41a",
      "kind": "transparent"
    },
    {
      "address": "0x791504cb28a18c472d87119901702aE65A9e6753",
      "txHash": "0x5eae29277390a31478edbd912c5a6106badb641a457ef3e93e402785af974bc0",
      "kind": "transparent"
    },
    {
      "address": "0xa9fB0B631926F7d9dDf9942E263cfe4e5429Cb19",
      "txHash": "0x322c70ad908c48aef5bd3d9207ddfd6b047565c88e0c9ae54c5e859485c6ce9b",
      "kind": "transparent"
    },
    {
      "address": "0x105fbc3b3b360C8f3f31f04f9003CfF957f5520f",
      "txHash": "0x94a36cc82e106756b94c9bed52e74458efea958fba97c3502d25f71b0269c1ed",
      "kind": "transparent"
    },
    {
      "address": "0xd815583Ee0F9158Ea120cfe1052f36C006731D94",
      "txHash": "0x4fccb27bfc0c4236e58fe0caf3d59b7a16de4cd19dc69b96786fd772bd8a0b63",
      "kind": "transparent"
    },
    {
      "address": "0x583A78A044806A0221510532674b34e3a0aF6a73",
      "txHash": "0x7a2105bd8f1dac4528066a6f93afa92e9cc08147886fb06d7ece42ae061ba255",
      "kind": "transparent"
    },
    {
      "address": "0x8Df057Fe0C9754722F408D4e0100a4250826CAb1",
      "txHash": "0xb583e719893819bf8ac5c05bba5757af0403d2ac8a41c444875241bfd216a139",
      "kind": "transparent"
    },
    {
      "address": "0x2eD8d7F5BBc729a1754855692e324b570469f844",
      "txHash": "0x7c301da6aa7957fa14869aedc33a3bc45faff13b9267f2a1dae1b6248cf986bc",
      "kind": "transparent"
    },
    {
      "address": "0x99C1A1943cDCFf50EBbfb1088E41BbC0e2133f1c",
      "txHash": "0xd3fc62bb321b6c2ac3cd452a410c96a10c315e385921b13ee3b8e4ddcdc2b95b",
      "kind": "transparent"
    },
    {
      "address": "0x68deE84FDA5B8F768F45306Dd9E51e8FA8EAA5cd",
      "txHash": "0x4e502d932f9d7272432c2792a1e0828c95fe899859e6954f6cea640bf15f6cc8",
      "kind": "transparent"
    },
    {
      "address": "0xD3a806A1bCE3971dE26dFce348Db08E03023A4eE",
      "txHash": "0xfd7735510ea5438aba58cef5f74f1a527ec539008657b6bb1e6ffb4d2c64f741",
      "kind": "transparent"
    },
    {
      "address": "0xe9ceD0a0285f74c2A53D397D6C8B22e93E4F3C66",
      "txHash": "0x38dbb3c91a9ed8933e2d5f0742cfd51786eab202b9dc4cecf004993780558139",
      "kind": "transparent"
    },
    {
      "address": "0x1aAFcB21B8F0Fdf6A8bCfe442147B70eB9C7f2f3",
      "txHash": "0xd7618516d43281ef46104efe9627188359ed18eecc404a45f47ddf856da5db67",
      "kind": "transparent"
    },
    {
      "address": "0x662d74Cc1Ec6bf6076ed5B6Cc57f87E37F49254d",
      "txHash": "0x732ae17e24ab6b18aa0c2060ced68322184877654935856d635f8901f97305e8",
      "kind": "transparent"
    },
    {
      "address": "0x6dC4738CA2fC6cD0A70378D98b70A5f5d99127fF",
      "txHash": "0x73fe890a91b03b3cfb5c976b958d786f6c2a0dbc907211e8f18c997963a69baf",
      "kind": "transparent"
    },
    {
      "address": "0x563D98060EEC0a6D3DD977aF6edadD695c3F5c57",
      "txHash": "0xa8ab9d0ff2dac5d278abd11816906617c12110ed8ca4f05c78c255730d3372bd",
      "kind": "transparent"
    },
    {
      "address": "0xED4e10b979adf77767b7f80A205733c59A45f9F2",
      "txHash": "0xf3f1099e3f5a5c1afb0b48fe3e3a8b3e3aad5fda137fdfc7dc68cf40f6847d88",
      "kind": "transparent"
    },
    {
      "address": "0xa1D83bDbB4B88Da160343F439bA141460B25d91E",
      "txHash": "0x9822db0c7cd3b932358657d9fe9153372ced795d5df9b308209db1bf1a74e00c",
      "kind": "transparent"
    },
    {
      "address": "0x510b2089fb1992Fa831D3515199c356000D19474",
      "txHash": "0x4fe25d801d61a0003b414ab82a8a8023d734c9cea1cbd1e040e0a834600bb3f1",
      "kind": "transparent"
    },
    {
      "address": "0xFdd8009525d5b81da5b13564105C7D750449f982",
      "txHash": "0xbe166b3985d798222032258dd07538ae2f849c11c3a1030d4b846b07554d955c",
      "kind": "transparent"
    },
    {
      "address": "0xd53F2786cE9B31d00133de7d4C858629a82fa2De",
      "txHash": "0x254a95109111831bfe600325dbbb243dfba6ca288d3d70ee3278f423497c3d6a",
      "kind": "transparent"
    },
    {
      "address": "0xd1c83b934a7a2FF568Bdc273F068c556eA09F210",
      "txHash": "0x413b01d2d8e0bfb559e66cae3b4bb58fba3b0fbbe706cd1e79442bc8e88d6c4d",
      "kind": "transparent"
    },
    {
      "address": "0x81F49B48B0e0bB77f601a5296ddFD2C164b2C0d1",
      "txHash": "0x9664b27f6087300ffd1a400dcaf53bf09abc3c0f1ff1c0053a83d06fedd143af",
      "kind": "transparent"
    },
    {
      "address": "0x41c526490D77F4D6aB28F32a389BC5091B9c2F23",
      "txHash": "0x22f7c57e86d0b6ca5a4458af603cc3dd0865447f049ff986bbdd040fe1414740",
      "kind": "transparent"
    },
    {
      "address": "0xa51703C8f4aDCa11510713b0821cbCB1f51fcF5C",
      "txHash": "0x1fc3f29c68a84c1759b8f15a579c593de1ccfb54fdda4fb17ee417b65397d277",
      "kind": "transparent"
    },
    {
      "address": "0x663DbeB10cCcDCf88E93712b9994a05E16F221FE",
      "txHash": "0x34629aa06cfd6a6d32e42426edc0b1ae4e8b43d5786d5bb248d8ff62051772f5",
      "kind": "transparent"
    },
    {
      "address": "0x2e8c4c6513EEf4438968a61dEcc7d0E30172a89D",
      "txHash": "0x6d2eb744dc03727af3eb8417c6738c9e01518086ec1f3762822da5559455942b",
      "kind": "transparent"
    },
    {
      "address": "0x6b4A9E1bfC15fBfDA5f65a3f9625DFebC3C8c550",
      "txHash": "0xd16cc9e35f437fcc78fd998006a43b067a7159a423161b83f408da21b7689465",
      "kind": "transparent"
    },
    {
      "address": "0x0C95cBb703712Af1d1cD3C459E7cF0189CcCe072",
      "txHash": "0xb07a53a8dc73cb9644700c18ea30fc74facaee8b8ae7f5364bd6c4a820e3adb4",
      "kind": "transparent"
    },
    {
      "address": "0xEe825293209f003c9a3b27026316f01B27CBE7B8",
      "txHash": "0x138bff5c310f27348a03edd8171ae58c9ca71b98a77342c08921a7ec53c20c96",
      "kind": "transparent"
    },
    {
      "address": "0x48d665C04ACAc01a1FeC417f83FfF9cF69690BE2",
      "txHash": "0x7bc39d50b3f6f459c13c079abc2b547f7f3167c14b42d413a1a2c9e328407e19",
      "kind": "transparent"
    },
    {
      "address": "0x2d2605aa7e1D1c2988CAFE71a8F3D404BE24EBF9",
      "txHash": "0x9978146138c3fa70aa4a2602d1f47539aa1c76edf03296be13546383edb8aa2c",
      "kind": "transparent"
    },
    {
      "address": "0x8A2dc2283cC3b21E2afd58ebd70A3048c3e0A92A",
      "txHash": "0x577aacdeec2433fdb1a61eb5b4a214b3b4581a7d3e264d3f53876b38475c78fb",
      "kind": "transparent"
    },
    {
      "address": "0x8a8F487141481b37BeAA1110D28dD2981B5591a5",
      "txHash": "0xb50aa68ccf8d825f31e4694fea979db0dccdb350d7d6edf4442b9592bfd7b753",
      "kind": "transparent"
    },
    {
      "address": "0x5e4b6792bd3b52db5125A7AFef9487e6A468a5E7",
      "txHash": "0xaa1687452d4fd985f7f4f41aa2ad23ff38f0d06fb30c12e502d7a129edefa985",
      "kind": "transparent"
    },
    {
      "address": "0x93Abb3bAE0C39C909ED60979e9Cb3cFFDDac5a90",
      "txHash": "0x6d2c6ff9ebf8de05743e6b894d0bdefeddf98788c8b6b23d91828fbaed6d21cf",
      "kind": "transparent"
    },
    {
      "address": "0x7eD32e677fD1F6941158238AcFdbF40d3d165332",
      "txHash": "0x1afb6816d07e803ff5e0dfeb02af36c9c724f7500964dfb7945c4004c767b487",
      "kind": "transparent"
    },
    {
      "address": "0xf6A2Cbacc7C8A38A5a639Af5514C6954177FAf20",
      "txHash": "0xe982bd27ed2a08a3a4131a7e52e5fe68ffa37c32089013732f28df589aa40298",
      "kind": "transparent"
    },
    {
      "address": "0xF076Ef2d391C4c023f76edBdC4a444F41bF78893",
      "txHash": "0x19794004e9fd45a1602fba6ad3010d4de80d8323689eb97de024c26c57031b4d",
      "kind": "transparent"
    },
    {
      "address": "0xe6e047808f61eEC8AB6d0273573D10e42F818029",
      "txHash": "0x0e8ac4e85156fdf82447b6b4d5c616cdd880de69b5a7ac09903fda7b529154be",
      "kind": "transparent"
    },
    {
      "address": "0xFdCe06C1c560931DA761146FD5C9E77501492771",
      "txHash": "0x69d933e370b91acaa0f63c5eb2e0f8c101f54eba8a0a1d9cae718fc1bba7a3e5",
      "kind": "transparent"
    },
    {
      "address": "0xFE0b03881Fd7f07A7A74D9050810bFCDDc5058E3",
      "txHash": "0xe5b70e3781b625b4b76dd58c0601f841079e52b8a25689ef746109ea7e4b3552",
      "kind": "transparent"
    },
    {
      "address": "0xFe1AeF5Efd9FA62510a6dA1B435170742e7c8160",
      "txHash": "0x3d5e294db18115358b7117465c73439e0226b3fd369a8fb5e65fdc0c227a990f",
      "kind": "transparent"
    },
    {
      "address": "0xc73C07360d5e14AC125Aed14E2f52daCE3feCEe6",
      "txHash": "0x8824e1faa4e90d6bb4f9b8e0634a5225d287b9119643f39f7b03141879638425",
      "kind": "transparent"
    },
    {
      "address": "0xA25aBE9F40FBCde5Da7A695dD91E892dB0DfE5C9",
      "txHash": "0x53941fbc7a7a7d8fee1ac1f949f2b4f225c6e0571b3653237d26c4f8c1d58332",
      "kind": "transparent"
    },
    {
      "address": "0x2125C3155F6bDA930a90Af19B5BE64521a1242C6",
      "txHash": "0x9cec2036786357c60036ef31519ab4e2506073f4f353a4630ef868227736ae98",
      "kind": "transparent"
    },
    {
      "address": "0x1a382Da2BF8cAE2ad3c6e1B621E30a26AA24acDE",
      "txHash": "0xc1c51cecf2f34e5d859b219fa601862b387b3d4053750499141dcfef7981c44f",
      "kind": "transparent"
    },
    {
      "address": "0x521b8CE663B818132521678D5bd8581bb7111D69",
      "txHash": "0xffdb17ec2e5830cecaf3c4552329b398f0a7620da2f0392ad8f40d7a1bb788af",
      "kind": "transparent"
    },
    {
      "address": "0x3a08f288237a937ACa0342C8461B0FB363ce3a64",
      "txHash": "0xcf6eb72b9719c2da34ca1411b62f61df19f4e596d69c2e1ba170548cc107f2d1",
      "kind": "transparent"
    },
    {
      "address": "0xBB5A5497a14A5c8Bddae4ee812585AC2Be7c96B4",
      "txHash": "0x0ed8721e49f6d783304ab9c0532080bfe84f9eb896d5f8b73e217f7862479138",
      "kind": "transparent"
    },
    {
      "address": "0x68e3acCEe0907C628424D1a7FC9DF93871E83240",
      "txHash": "0x8716871a6c8f20d35cc62558f9fe592098019e57fbbb299f37603f4d51d10bcb",
      "kind": "transparent"
    },
    {
      "address": "0x599F3a6ced2Db915eC2908D187130840938a34bb",
      "txHash": "0x89509b59d190867c6c30369d3d5e49b029f535a2c391992e837771ebdf679a7d",
      "kind": "transparent"
    },
    {
      "address": "0x9aB8E9bC26B87BD089BbB8E882B7aE8464C90096",
      "txHash": "0xed826712227b4f9ec24c911b5415c9fab6359d079677f72d1ac4530731ac79a1",
      "kind": "transparent"
    },
    {
      "address": "0x694407EEBF299C2A0CC99AA0A2240557eDB73EE2",
      "txHash": "0x5b85b4af866714eead7bf04df2b2df43ea4efe79b68c8366dd80d2a702bb0055",
      "kind": "transparent"
    },
    {
      "address": "0x65c05f15714C39731d81892a905aE502944414a7",
      "txHash": "0x04b7e7af2825b2a6d72dd417bda406e5cf936c2fe09e901a6f7295e7c4ec27a1",
      "kind": "transparent"
    },
    {
      "address": "0x0552d8B500B01a1C7f7BF138E9dFf4e2622978E3",
      "txHash": "0xd62468dcf789cb6196f945502f056fe8d73f070e98a0245a51114838f646b355",
      "kind": "transparent"
    },
    {
      "address": "0x22C18Ef4A10B4cFbaDf9b0B68320eB9b7A89bdd7",
      "txHash": "0x51c6813d81d437b396e924220e3a66d5eaba4ad3567cd4b671f39fd318dd43b2",
      "kind": "transparent"
    },
    {
      "address": "0xeEFf307A1363C02899dB98E3c7FA8700b136e1D8",
      "txHash": "0x91c6a08b38f1c05401db921a5978f98d9ed3b4d64c6a086c444afa792c61d249",
      "kind": "transparent"
    },
    {
      "address": "0xb205049843669aaA2244c0e44e50F0c239366902",
      "txHash": "0x47da300553c1e1a158714a444ec2b96e97e3afa0a9817df111c23635606e4fc8",
      "kind": "transparent"
    },
    {
      "address": "0x7A430BfbfA7F21E614047dA4B084518fBC8B62bd",
      "txHash": "0x2a6c1ae9418a36b6ed8d115aff62240a0cf463b6eeb0d3e09cca551093ae4a5e",
      "kind": "transparent"
    },
    {
      "address": "0xBccFE3b6b721540283E27f4ef360E0E6ff4a2b94",
      "txHash": "0x015291b51352d6199ac7897297d271f111685d6460aa20711ab33978537f4e83",
      "kind": "transparent"
    },
    {
      "address": "0xe2b5922e8cA51F9BB294DdA5e37A13B2B5b4951c",
      "txHash": "0x101fe13449342159a76a9f0710fdd82ed6fae5a71ab26c7bef77783b12fa27ae",
      "kind": "transparent"
    },
    {
      "address": "0x591e2b6D284883A2501Ac2a81e3A122d4917C978",
      "txHash": "0x704ab4078fa46152ee0a21c5857eab526dad2fea1cb5ca56bba802b2ddb62e66",
      "kind": "transparent"
    },
    {
      "address": "0x6951502951bF10302e84Dd5de4D656d97Fd029E6",
      "txHash": "0x204922f102efa66371faed188fad20b2677817d2ab7a00ec25d9d6822df8c027",
      "kind": "transparent"
    },
    {
      "address": "0xd5c8E77F4bEA11e9C277A4728D4502511B2FE695",
      "txHash": "0x87e7567aba8413749f72c939592a20a78c01871596f6e59d9e97e3eace28730a",
      "kind": "transparent"
    },
    {
      "address": "0x12f8690a333753F451Cab57FF7AfabCAeBCfF718",
      "txHash": "0xfb5fc43720557221de2deca168c92f82797b22bdc727b2347068c783f011565a",
      "kind": "transparent"
    },
    {
      "address": "0x0788111B907Db60674e65C84bF185D6622a004E0",
      "txHash": "0xa59a6a7fe0ab4956c76051ba71392de5ff00306872f93db3b66b245ea24b43f7",
      "kind": "transparent"
    },
    {
      "address": "0x4943F4294CCd5aAfa837De7c4d92e1c770dFa5A6",
      "txHash": "0x6b3f6e062e8f837968185d32ea26ce836bab0cc66814f55aa95ccf800b290c02",
      "kind": "transparent"
    },
    {
      "address": "0x8e0Ff4f785BA23c7A4c01EB0Af5FDa7514aA390e",
      "txHash": "0xa93cfe109574029e0f8e330408d889fb3702dfb94ccfe348b13ebeaf528d5c32",
      "kind": "transparent"
    },
    {
      "address": "0x48E410ee991c237259C3b47338cbBdecedf512EF",
      "txHash": "0x89a76dc5c890d1d5e3d310007f91f9fd49cb442b1500146ca5090c8bcb68a114",
      "kind": "transparent"
    },
    {
      "address": "0x471f7b0719A356f09713B96432608ED017EFa9D7",
      "txHash": "0x151ac63a7fa372984d64a5c8f2f03a730656bbbb410b90b5742441dfe13f11d1",
      "kind": "transparent"
    },
    {
      "address": "0x08078dF49693F26Fbc49f5e98202Ee0d67879B74",
      "txHash": "0xa62199ba957fa5172047c7c2f809f2e9015899cd4644d824ed99d22152e273a1",
      "kind": "transparent"
    },
    {
      "address": "0xC117FaA100ECC2188844670bc61B39B82696E058",
      "txHash": "0xb1c79882bcf7c210337fcf3c750f55429d903017178f3a700bd83e4e1a73cd13",
      "kind": "transparent"
    },
    {
      "address": "0x67c55C6739842499b80eBA008CaB139c6b83019b",
      "txHash": "0xe801d62545042c2a584eddbd6922a6bc29c5bddd32d3637fadc196a2e6de0cbb",
      "kind": "transparent"
    },
    {
      "address": "0x675e98A88f326150A8B533D4EB6E22682b8dF0A1",
      "txHash": "0x6fe06bf865ab851a09d9d5562cc2fff36ba52d4f49b09282f64711bfdfc72a3b",
      "kind": "transparent"
    },
    {
      "address": "0x11327e5e76f139d6fD798407551D101e87FE0bb1",
      "txHash": "0x749daf2da2a70f9302b6e6f6c1d010d39f36c8d68ad56ad7dfe4bd793591ebb3",
      "kind": "transparent"
    },
    {
      "address": "0x32038cB347684Cc30e5d11c4b92fDCB8870169F9",
      "txHash": "0x7abd5c326225bcade4464b9aaf40029d3b6e05fd88c89e003bc80488469a5620",
      "kind": "transparent"
    },
    {
      "address": "0xdbaEb25e58fB95bB1346A5443ba83Ec13F375b23",
      "txHash": "0xb34992268fe9b8e1302211ffab3c83ba013a0bec91c4911a5d00edd37dbe454c",
      "kind": "transparent"
    },
    {
      "address": "0xEBEE543fd587A61f4619834876f5Ef1660D4FFa5",
      "txHash": "0x4cb86c21ab6baa6cc0b282b1a962fcaea40a899685f85e8986afb753abbb12fe",
      "kind": "transparent"
    },
    {
      "address": "0x8e7153A7dE26Bd938a73b1F527A90904DDe56409",
      "txHash": "0xcd29111fec5f87ac6b89ef763739afd8fcb473464119879c1bc27f31df303810",
      "kind": "transparent"
    },
    {
      "address": "0x336B60E03B462Ff544c2b6800C3572B772e68120",
      "txHash": "0x7a1de8c61061575a58a26f79dc5f7fbe6da9baffabb89e7d3007b5a72b44f1be",
      "kind": "transparent"
    },
    {
      "address": "0x5e74F730041649e02fE98A60caB6Be23c1bF55aa",
      "txHash": "0x5e107a3fa457fda88dc6e6a0b93eadf42d7f9e89e2c723a8db9f37429e014628",
      "kind": "transparent"
    },
    {
      "address": "0xab7967542305FB707DF9E9d425483564881C98D1",
      "txHash": "0x7d8f8e464c2d81438ca430470da296bbd8858dfcbf0d4707dbd5d52c6c612547",
      "kind": "transparent"
    },
    {
      "address": "0x25D68208a88cF2a42f32fC040a2aEa19B40B486A",
      "txHash": "0x50ce1281909c186fec48ec5968cb589d1361529aea42d4d436c8f73805a5863b",
      "kind": "transparent"
    },
    {
      "address": "0x116d02e59E886C910D0b592C0717C0E56DBc369f",
      "txHash": "0xaa3ec086bbcc453e5ec7f6a8d36b29aecc97adeff9714de2a22a7fef1e7c2d09",
      "kind": "transparent"
    },
    {
      "address": "0x80C5792eEad4c0EB7955a45181EF5a7F15d26723",
      "txHash": "0xd52f5242a87261d50d068a8f610bb218ca30b2d9a021756362305d20b44143ea",
      "kind": "transparent"
    },
    {
      "address": "0x8F8ffCd61480686555b42dDA46928b31809Ac7E2",
      "txHash": "0x65f4c83ef8be29296bdc0e75be39ff84aaeee3eb6dd7945cc45cd61eb9078520",
      "kind": "transparent"
    },
    {
      "address": "0x65eae1615a9d3Bd8d80Cf998B39F908B0AE4d531",
      "txHash": "0x6b3fcf49a955b989344789b6e4d87ff63473b4d842728080a6ffb16019539457",
      "kind": "transparent"
    },
    {
      "address": "0xd46123049aC2DD32CC789De0Fe43D6aB051349E6",
      "txHash": "0x5d7965f7b8e342cb2d42efbf3b6de241fda661c81356326c46ba2484633746e6",
      "kind": "transparent"
    },
    {
      "address": "0x779E9BB65c6Fd73756274443bAeCeCAf46C263D0",
      "txHash": "0xaec9caf7770387f6e7bf1419b79f99d977af4fdff3fb5d035db3c2b0c4478ad6",
      "kind": "transparent"
    },
    {
      "address": "0xFd702aE44a462401683B1f98ff9f8f867D7998fd",
      "txHash": "0xa4fb5492b418a55fc8a4d6bccc596a40f60d7597c46f0fc60d1cc664c98a47e5",
      "kind": "transparent"
    },
    {
      "address": "0x413c7d92c8a1A0896E6C2deF0EeDfAE603e3A593",
      "txHash": "0xcb410e8adc664ac2f944a39821d27cb59d3167e16c9d8ba28489371895bf5244",
      "kind": "transparent"
    },
    {
      "address": "0x1E397a44BF57E50a2C7c5cED78f5CCd43095cD97",
      "txHash": "0x01ce8189dc822ca7bb3693bf1b5c3672be72d1590164da372bd48267dcce3886",
      "kind": "transparent"
    },
    {
      "address": "0x47A95Dd43212Ad79A5465e5A8e1e01B1A0E84D0D",
      "txHash": "0x77abda9be9813203f38fbae905ad832d5251e1a7ae12766e600470217be759e9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fdc932913443e2cea132eaf61b1e91ff95a1dec196546750857e12c3019f4154": {
      "address": "0x7a7A271591998292320c3c6Bb6C59BdF80D2Ac0B",
      "txHash": "0x70a65b33b6c6ed9f8c81acf52fffebf619b5b42c1e484f9e1412c407c68ca6e9",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92221cd9cb0f22b9ec855562d8b6703678fe0054a05dbc8565f4e805c225fe77": {
      "address": "0x6406C5e797b2F22a5B0ebaCA4300b253b736b2d9",
      "txHash": "0x8be5129a6e75673bfdc15c0aa4cc6179e05d068b02b57536752e569d48ab0971",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ae651040080750bb074733d84b1c8d33b9b130cebc25fcf76a246f044cf37b75": {
      "address": "0x10D98cbE379eA6E6F757bEcb5e85069Bf9123599",
      "txHash": "0x3c92798d39e6dd168952b401738b1325bcf4f038e125bd22a409c36c9ebe7259",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)6461_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)6431": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)6461_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)6461_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)6431",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4fd45dad18dc897cb28fc216a91fbb2c1dd372b3ec2dffee495c586d1c18065f": {
      "address": "0xdCe9C073763E28d1ddCCF1a53693Ea6730CCdF53",
      "txHash": "0x982a05dda5276fadb772acc969bd40fdfd4bed2680849a12bea1dbfced49fcf6",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6635",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6635": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cffd0219f4743aed7b080c82d9dedb3a9de5cae1d9ad9cd4d515f9e87c53c305": {
      "address": "0xEc3B95D1016e239Fb3Ed95AcB9AD6555Adc57aAa",
      "txHash": "0xee0cf9f6d82f3c568f27765508db05e42a86f172cc1d2226a85e85fa95370d30",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:17"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:18"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:19"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:20"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:21"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_rewardsFactor",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_rewardsPeriod",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_maxPeriods",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4675fdede14312f1dbc0dc4e6269f9993e9cce05e658f90d7f6acbfe17a0d5f1": {
      "address": "0x3c0ad82aC5bb91C844902C37Ef818347630Ad544",
      "txHash": "0x04581607e1c14b7ca6d79df988a5f7f0fdbf112af40924b07e9442a3fc7e101e",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37df3e2d8e81e511e26f90f9dfe2893f0fc4febcac6d0db644c802b1a3bf3e3f": {
      "address": "0x748633E5F5263c6925839b76Eb9220e7c4Efc832",
      "txHash": "0xecd6235e660e7c6d2cb2cf7bdfa2546600af2a4edad10bb9af493205711d0a11",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)6418_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)6418_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)6418_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ecf4b196841a7161c596e8a1e8040eb5f6437afee357fc9e3e8bf04ab92166ff": {
      "address": "0x44572F8cD7E1A15475F3A3858320A9F1D211E911",
      "txHash": "0x53878d4f4e9645fa706e6225ffecda551fd0ad1fcbd3b14b783e112d34f9cc71",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)2152",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:24"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:25"
          },
          {
            "label": "_mintCount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:26"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:27"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:28"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:29"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:30"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "258",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:31"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:32"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)2418_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2152": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)2418_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)2418_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f23e3bf4b34830efbc442b13a6acd3d2a4885003a81b9c9478e8009ae41f51c": {
      "address": "0x71862FB88575f1244F99Ceb6c0D238ADbC57b13D",
      "txHash": "0xae3d6569a56be9be2d48b0ea8274b28a598b7496252bfdf2fc3cd4cd187b3448",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b5f569f8ff984a8015e23060881530ea839579e8d904e39b053c751b3d9899ca": {
      "address": "0x7cf7CF1e2F6774337F72AEca9426019C5718d174",
      "txHash": "0x27414d50fdcd0e12c2a11fbf3bf8c86c0d760fc173349deb8df7097452b1b93f",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)6391_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)6391_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)6391_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87a8fa98041d2112e0b969b493c7b45a3a15469d09e5bfe2cc12653ae33c91ab": {
      "address": "0x9b845423c35Ce16F1dd3258225F63C5c097F87d7",
      "txHash": "0xeaa90c3be341111ff8805675122be7f405f58e30acb0b449707cb7d2c5c18a01",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c140b0a844fa43eaf3b0a683eb935840f789ec3e08b848e7c5891def976d28bb": {
      "address": "0xC50579255036904aA8d0674Cdfb72039d7af10a0",
      "txHash": "0x5e013fe4402a810b1cbb6d5e8d56c700c4966c11f96a6ca7f0b13cdf356d85d8",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23bc8d54fb399862c92c8d7dec6a17e52f99797e7a5fa4b0756aa51fb4784f17": {
      "address": "0xe45C456B348c767E32a1eD6ED587E43Ec7d18A6E",
      "txHash": "0xd254fe3de4996cff9613636ae057c288ba27888064c11ba2e6ce723a1eb641fe",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a2fc841b97d211c0b996807a56a10f88ef5d640330391c4aef2d88c7103818e": {
      "address": "0x2443ed8c75dE99989379f5b9a926c397E251B16c",
      "txHash": "0x791f36a30ad15fd4fa86c3b549a10e576e263fd5b29e4f7a9959595d53b9cfe9",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6242f21d5e03ff8ee48d0629c1b38f040f49f1bc81bff1e26729979c72460509": {
      "address": "0xb80Cea957B25384A2e2F12f604937332D20945cE",
      "txHash": "0xf4e7f03ef66b5831b26efce95c82db5a60fc1a729fdc850623a25fa08efc78fc",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eec2b2a22b82339d4f6aab1c6bf5174082403f35d2b730b0bffd2d6e3016d04b": {
      "address": "0x85e85bd3b8A3A5b56C1FCC20D940aCf061cDaE19",
      "txHash": "0xdccf6402224fac5838714368414437221d2c97267743ead727886b311b11ad78",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d5348064dbb4c10c39067d690fb39bbcfc5c4e4b237718f66f32922d9b2f5db": {
      "address": "0xdBFA8582Cb40fba7C6CA32607598652BE4eC369b",
      "txHash": "0xe45a6311b6ea87154683e41eb5a8e0c1e12b4cf13287187acff5e6f5516c4c38",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4e2a34d42c24ff69abc1f0b6006656b825ce185c7e78781f76a8b9e778e3fa06": {
      "address": "0x596c1DeA3fd081940977f544BA34cDE052B90FB4",
      "txHash": "0xfc03c3b954214cf7398ef731bd9eb2cf8b7237ea79fb96cd74b4f1345eaeaab5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eacf5bc12d284fe67fbe316350360ea71a0f493a65cddb44358e43ba254d3347": {
      "address": "0x28a14ff06c893478C4a9d4faAF5d1824f914B0cd",
      "txHash": "0xa652528c36beb6467856eae18adefa7e2f7b092d02ecb579462fa69dbbd1d3f3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1f955c42072c95851dcb93869f5d565bb7ee2652a502500ba6e6519b42a337a": {
      "address": "0x1428731C16fC1CB82B031A7ed6B1E3e1BF816B8e",
      "txHash": "0xf4d99227012c5e44be2aa349e94755160ff78290cd0021e24bc4c85004f7ed62",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)8212_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)8182": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)8212_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)8212_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)8182",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e32376e0059006e1280a4060c9da5a01895edd0a10e2834c440fb6acbb0b2db2": {
      "address": "0x3110560138D06DE63ec2e82CC8AB19b655bEd39b",
      "txHash": "0xaec0f515a02548d8b3976a9d2b5713424ae7710e37affb8c792e9d2a025b5c57",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6953",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6953": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a25a992dd298c4fd89acb6d0fd00199f12b8812dcac64cc66ad54c8ec34368bc": {
      "address": "0x7c7e2767B69e7D65f430721e5307aaE56961917C",
      "txHash": "0xabff49495438c622df4a5c1a902044ba1eda05671fdbd4febb2c44f1031b650f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6953",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:17"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:18"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:19"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:20"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:21"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_rewardsFactor",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_rewardsPeriod",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_maxPeriods",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6953": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ef3b0ed126d9d7a45c4de072a72b49e16cb17720f9e3fbfc921f23a63e2d4919": {
      "address": "0x50696E7F8CbCe95554c1269Db8C1CB855489CcE6",
      "txHash": "0x50b22a27ff2d66cc784a565391b92fab1718fa61543ee64539c1290748f79ade",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e1007a5f9eaa355a65c60e3c29dda805706535b0b87aa9cdaee1b2e419739669": {
      "address": "0x61D98B8734240f6066F86167D0D5d46B80ac2091",
      "txHash": "0xd29f7cb65bae821ba47d69c61578da4f798616be003bdfea5e9324f5ea32c9d9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:32"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:33"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(Counter)3155_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)8217_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)8217_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3155_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)8217_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f4d1c957d562cc006175880bcbbd0f6f16b39da728c2c58ccd15773a8707e6bf": {
      "address": "0xBb07C9aFc0B34624396D7688FB15c931ea07e2cc",
      "txHash": "0x6abf70a0cbfbf71009b04b5bd5bc5f9027edcda19562bccedf2dc261fb8d65e9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cd9313a235036a489f8f61ee839eece784ff15a962cab58cd853d4eb3af19f71": {
      "address": "0x17Af9b38772a0759F061765F0A737f4D7e6e0e9C",
      "txHash": "0x0d40c3a3bc46af07cdf98d11e9183915c4ffa5460b06ab81cc933c9276bb52d9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "131eee4944d3539afcbb46051968853b2f7ddf4c338ea720b6ca8b88dbac54a7": {
      "address": "0x1816e1C441468ADcD04E367503E12fDF6729196B",
      "txHash": "0x5c5ddf52d04ae777297c63903f2b0d42b6ef0f82ba4976b450b8838c1109b8b6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c95fe2544f3ab076794463df21403ab63506bc5fe870acd23ee362c35e04bab0": {
      "address": "0xbE4b0107B503fC2A1Aa44c711b87f11Dd9d5B794",
      "txHash": "0x201a4b1a248917ea0c71d9e539cfb2db4d53b1b029019050138c5260327db371",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a46f05973056568be68099bb14a1373b5c29ba2a39e8d9cf800f7d8b98bd918c": {
      "address": "0x0F4cDd8D4d74fb93E352f60342bf1180503b3e75",
      "txHash": "0x0d73ebd7c1ada34756d35b82372eb3cb0dde63e2245ba0d856a6d18568e2ef19",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a50e02ff92c4598d1fc63769e470f24777a6aac34b54b02cc4aa084c0c5b3a74": {
      "address": "0xa34b8886e1EDcc720deF29473244cC842267b14C",
      "txHash": "0xc103fd290d11e96feed2d7aa4c8d87b6d1e581e056aede13262e824211349434",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bbf3247fd1f740731d99ab765334725a02e1a9a315f51a9fe5ce6f90e935ea8b": {
      "address": "0xa66071ca10497AC46C108B934914Ec3882CA0357",
      "txHash": "0x19ae1686de44e067f3cf14ef324000a7e8559550be675499290b928dd6ebd5f1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4c2c10c8b5a040abdfa627677dac9d0f44428d6572aa2755ae2f89f0b31d5a09": {
      "address": "0x6731421E210aB0573c7677138aB9753BD61A6463",
      "txHash": "0x5ba44c4fa08e750e610716523ebb3fa8edb59aeef867136075706f4df5d75025",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf273c12e28066228981b8184d375066647fe65952eabb81142ae415c551adf2": {
      "address": "0x93a21181f0FA750b68AdC36CbA296691d0D6c963",
      "txHash": "0x70589dc9805a28b46d9ba11a2f29b454b86e67a7f9fa23b8831accc513fdf645",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "55e5942be634c97acd09c0acbe9ae942e6bf4d408833dccc12718c88104c800b": {
      "address": "0x954a4d8c273547d3Ad097d89Dd0B265851dF7137",
      "txHash": "0x4567a2302ac32ab5f67da6d65ddbd75cf055f26681e30e88ccd71ea637c377ad",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1bc82cf0e35e431d0062f2f7a6d721c77c713b864372a5b6af10a12e75f9c620": {
      "address": "0x42259A05c37700823116A41b6B444f1Ebca8EF00",
      "txHash": "0x1aa1230e250e0a9eb4a1a8cce0cc436e99f68dee21f1f8af327605a035583773",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2ce654ae8f7798b3cf09b2a96f76efdf73fbd3e67c9cb862a837550d7089e800": {
      "address": "0x00DCE1Fd5Ddafbf352eE740F06F43F1AEC248a46",
      "txHash": "0x333875daacf5af434981ad8b3d2458abe190fb8ac13559aa417fa614b35ddca7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b37cf2c21ad1f5ed69b395dd0c3c7b95f419132229af0f49185dd4337d79fc8": {
      "address": "0x24f3d95c89656C06A0dD979144F1b53A2C0ae6dB",
      "txHash": "0xae067b3df6f9fdc8c486106638448fb4c5fdbd7ae1191d3669e656b9b5dc42e5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4088f69ebedc84c44f47afd00d6d6a1ef1815e96960d2c8addabe9de770657e4": {
      "address": "0xd22e165E236F39fe6154Af8Ac2Afa840f7763D0F",
      "txHash": "0x853ddb831b0da780d465c5a82e5e0ceb1f27efe936091140977b17908a8f741a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05101e2e68f382d02f3508135ff3711dc67c93c5890dd8f8c294fcd053a7f977": {
      "address": "0xeD5ec30C7d9fEad84d1989FbC85d0b32336d2de3",
      "txHash": "0xb863d2e92874ce2d0bbb26af3fcf17a2aff765a7f3e579690f4ec7ec7a363fe9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "198c4055e72e302c5947a459eba70633c6ed7030c0baa6e80945d3e1f004a454": {
      "address": "0xBa28c0B6A71aA75Daa775c2B90B503Ee4D2081f0",
      "txHash": "0x5a7993747620f41c040a76992615f897d62927584d2dc3a18d13d51ba26f0b38",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f45ab327d9a72beb7b829956212a9e376bfdf4536136084f6242d54ec6dd33d8": {
      "address": "0x2a4eD6C5b5f1283Bc8f8BfD9e570818729349353",
      "txHash": "0xfdf7aa78f86eab7cc997a033c67189221e52a905c0fc3213ba6bae21f7f0daa7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b88c1ba8bd1c6a396e07607f95c4e84d5072669e53dca7a782c0abe0e6af13a9": {
      "address": "0x9E6d66a2DE018B59eD3C968509c4f113207C39aE",
      "txHash": "0x21f61cb233696ffb6aba217d203ce31f6cfd9405ea4151a1686585c370ce430f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a9966bb61da3a2fc6dccf6caebb71439f918e1a3c571a395dc96fe09e21458f0": {
      "address": "0x0E7131f85be97795E713D2293bf9c8d228774d9b",
      "txHash": "0x110002a2dc70eddb8477f65ad92eab51819262d9c403d205a0da5c92ff691ebb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6eb4a3ff05d5cae0da383669e5e6b2872c1aa98718ed373f288871209cdb9b9a": {
      "address": "0xE270B694ea980d7820deA8d314c852bFeBAbeE1c",
      "txHash": "0xad8730001106d4d8f38899d62801a44573c6f1eaede02fa94b35e79793b29ffa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "50b8c9ec0e730eb12c739d5ac061949c1d9cfb45fc79124e0f478652fce47b29": {
      "address": "0xbd5858EAAAd9e07E37f4e96AB8FB457Ab0A8144F",
      "txHash": "0xd787a2e83a2b9d092e909df804169d0c7fa0459355e106d9c242a8dda60d7938",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3524",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2983_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3796_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3524": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3796_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2983_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3796_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c2b47140f651f63735be7a7f3efc42e053a247522061cd9b9cbe3c26e3d11ddd": {
      "address": "0xD78140402077edd4cE760aa3C3C483aFf30F97C2",
      "txHash": "0xcc62adad668095a7c52508d60a541bda5c13bc975e15a217a4fb8375b6911e75",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2928c03d351826e109f3a39847007c8f4569be9558fb16a6843795458dd0e14a": {
      "address": "0xe49765C8fCb308E590AC18fD96D4695D4563D198",
      "txHash": "0x87338cb90c957106a37ad3a773cdb4d7b55a56950c8b0d446f0a645e4ab32fc2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8318_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8318_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawalRequest)8318_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6a657c5aca1faf0f6d1ee2fe98a92ec688a52993d3c0b4116509dac8edff8e04": {
      "address": "0xd2B74A801c3472a6c0E89094758df1Cd267eb265",
      "txHash": "0x034ba98c252b167c3c9338ecc00d5bc87eb2a646ccb00109741fa87dcfee9093",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "007f944e47fd6745b1332ed5636e6f7fb0b318ee174da8bff433c6c5bbc2aa0b": {
      "address": "0x07d3b01BC35c3F48FfD20E3b8600323676281b69",
      "txHash": "0x2fbdf15a525fad2b812626a6e30e8acc65f4229f4ca153d56ecabb3d67c41f2e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2fe055f35a2fc12a6cc05ad3a1b58e8807c847ca299d5c5d0c608da09869e624": {
      "address": "0x98E73847198F563D46f4f11bB01bcb56436cdFe8",
      "txHash": "0xbc140118b7a12b61b3ca31bb881dbc60dc7b16ef12f45b3ae8ebb735a286405a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "54c8c0778e58f9bb2c1b366ace1f00c0b7c455a485a0d843b6cf38ae6fd0180a": {
      "address": "0x476C23cfd1e2D5BC5fc11e844fB4eEb1cc2697B3",
      "txHash": "0xf7cb964aa85a1880e23710fcec27960552a302c75e1f47019bb81acb9a11c8ef",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db7ea868a7157dda4ae13f6ee94e7003639c20d1687a59dc13ffc8a5d8c039ea": {
      "address": "0x552c1cB7D2eB088f4BA19F9350a26Ae0662fddfc",
      "txHash": "0x726d387b3474dd318bb9d5a11609b2c865c340ceba852779885960bc90acd743",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)3300_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)8376_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)8376_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3300_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)8376_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0a6d89ec7c4788e6f1ace364febd8be4f788c697571a7c249fd934ca584ca0c7": {
      "address": "0x43e880A90702FE28DbAf5D930b2bf7C67b7b72a6",
      "txHash": "0x59df91e873544c6b5e505e8453ad1cb9d485814b15326f33e986dbc53d99c9ab",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5db1421dd00a499ee5ee286ac0a68e3aaaa451b644c3f9ceb2b9779061ed528a": {
      "address": "0xfef0954380122aCFA7c288363751bc8f413aC370",
      "txHash": "0xc167b4ba0475126e4201796701c040a63b6cf02471502aa317b37847ffadb106",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)1588",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)1588": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "661db384b76666e7f74a93b820dc0e34792a17c969fb4f64b6bd390e48ebb9b8": {
      "address": "0xD1C29003e9480463C517D7630e242b151502F77E",
      "txHash": "0xe51f75d76e52b4da6515864b0d3712ecf99c19187b8eb379253e027a0544f6a8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4cd501653944c0ee4d6bb0a2c60e88b7b1113a793a035ee246de72a6a2dcf07": {
      "address": "0x4bDa1909133A238EBDf7C747Dee80d404e19A7f9",
      "txHash": "0x9e7e0ca1f6f68da02a9a8f3672bfed802859a0d64a08c43aa0a0681de6a175e6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fb99efc95d66e5801d0f2d0281c0126311c821c8ea9e66146ce2833d6a55003d": {
      "address": "0x47603eD2F1A794B27B987Fb1F3Dba2A56fbfe4Bc",
      "txHash": "0xc769fd4cc3dd8376029688aee2c9c0a38953480f7e93822aa9121682fd1e1103",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3020",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3020": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "21c56ae28ccb783cbb8def6c6a6b5d4f805c017d8733c40c42765736c47fe82a": {
      "address": "0xe4D1cd17C934E963C4944cD3b5e4ab6d3160D979",
      "txHash": "0xdf37decb10c8eea739d9a2070373ae9ed99f0f97c08fbee837c338f7f49fd861",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3875375e077c17c2450a45ab806773742c44b6b9b6501f3be7b8c6720e8c2ec0": {
      "address": "0x5a4250a03dB59D3Da03c2b17FAdAD7d300C68679",
      "txHash": "0x9300f507cd9479b86d634f629f32e8c4ffeabf83e6be8ba0b3b5cff70beb6742",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "250b3a52164d5a15b08114572ad8009195514d761a30813c32e6033d20467b3b": {
      "address": "0x521dAf3F620288B4C1E5b6E163583aC3e2235750",
      "txHash": "0x01400e91d01b2e7a759b3c07602d4080c46e0a7f49738f6b4ee04c36bbf9d053",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "39c4c4dc4154880862fd16aac2d83573837cd851e67146012d08d505ce16b718": {
      "address": "0x271CbCd216C3539286B54A5f0c1eD0289869D8F3",
      "txHash": "0x7f054302fdea595ec320b7f8d1da90ce44988b750ddd99b2a88110f542e99118",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "53a2652fd6060bb5d11d90d6fd3696e69878285728f8cae703eca6e472e7466c": {
      "address": "0xb5eF6a7f2AC8A96c6EcaA0082F60d22AADe594C3",
      "txHash": "0x3e7aa4d06ee5e8b0cb9e6e8d62cccaf71458ba479bcb0a7c5ecde6e4d29551e9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9be75afd7b53cc8a6f6416e79b4707ad77dd685204c14ab667d49b9c2a75a002": {
      "address": "0x544cECD12b70c5076EDDA8E313adc6e86A552410",
      "txHash": "0xe7e76bee2c4e31b0d9e5b5133f42e349e05b3dd65cae8a01b9cca73fde8306fd",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "73b1252df37bc112e966a378968027b944fb424238cae120e0fbce7cf6972fd9": {
      "address": "0xB0C40e7c9c711b0AE44e406b96CEA4872dF62dA1",
      "txHash": "0xd7d64d791f3b9d59b4277e698d14697fa324665cd8ee4479cf6c9f288117b730",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)1453",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          },
          {
            "label": "mintedAirdrop",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)1453": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0e5dc3bc507c7a3f2ed18a085a01fdad0397a49b05d76694d92b7c450ba19a59": {
      "address": "0x9C9E2dbaA7c87c078C49F882dAB6A8acd7c20e04",
      "txHash": "0x61d746c5272a1f136fedb93643caca72a2e5d40e3c0ce1c901863b93517f2d06",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd9e936598acc65c0e943603ebc51d2d657f5b9256ed1901fb60f58f6e24c624": {
      "address": "0xD6e4D6b23CF2f5C05E500CE9119A9C3805b0704C",
      "txHash": "0x9c4f7b8e9ec9cf1f9ab8ee22d770f98606cb8b48c524be1f7b8dcf9ae6c7b335",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3274f42d2efd1b83a0bd4ab9c0a7c3d257bfff44f1cf327b2e79ee65ca9e306d": {
      "address": "0xD0952C21936B5653580ad5c7AA960c9D389Ae2D7",
      "txHash": "0xcb70755f247c90df94a5a02b5bc4f8d3ab164d8392f95e7956d9c9754877aaab",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)11894_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)11894_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cacccffa6b92657590f60d8423b753706eb8c6822253b0b50f7d730eb0ca3d83": {
      "address": "0xbC86618CE0B5b0C1CE2Cd92aC21766541Bd0411d",
      "txHash": "0xb0c2bc2e8aada42651962a53561005274aeb9ce235f792240ec19972f4e15bd1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)11894_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)11894_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a0359655fbe74b1c363fa18ee7023570c5a7e0cfe9a6830bbfa29f96453c1857": {
      "address": "0xF38998529298a1acdf8026a8AF283f4E48085473",
      "txHash": "0xae393814919116289c961fbb08f47c46065e92addd5168eb7207735ecc286c23",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)11894_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)11894_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "efb9791df68bb3bf91b467a4bef191146ac331d18db02051c167b5404354abc1": {
      "address": "0x73AE89Ace444f42c0E60B7D5b66da5B8f192F328",
      "txHash": "0x1aefb8c8b51b3362b21af325d35a1eaffb57e3997696d4db00d934e54643cf9f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:29"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)1693_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:33"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)963",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:34"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:37"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:40"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)963": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)1663": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)1693_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)1693_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)1663",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df31b6f8f886003bff09186adbb9c3c64a1448e35cbc59cdc86e0fcb35bd15d4": {
      "address": "0xB8037A1b8cf1077384eE0ae020466d7021FB33c1",
      "txHash": "0xb95e0861921e57005875179ae3b4016e488997ccaa615692e5227b60e4c9c3ec",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "86344073c3291d4de76e36679a1f4622c80d893aeb4500f5cebddda426298962": {
      "address": "0x528CbAbF5E04D94baA673a2761b0B3d6F1A3eA8d",
      "txHash": "0x176093424d9b7a9f792827e2bdc5a55207ce1f641b4a6e4378f613246566ecc4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:29"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:30"
          },
          {
            "label": "mintedAirdrop",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0f2199cefaa0224ab8c65daa8cdf237c632151f89b8c8f9e5e0ba168bf270dfb": {
      "address": "0x07a8eEE9580f5b5311149143bFa8AB4444Ff8F3f",
      "txHash": "0x6bcbeab448515b67171fc80ce8254384cbc28e60d78e8f0a58cb7bf5cd3072db",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)11878_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)11869_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)11885_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11811_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11811_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)11869_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)11878_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)11885_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11811_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cc8e5b5a86a413d549f9c37552d4b5aac61919be6e8465fba7df81c5363540d6": {
      "address": "0x49d72949eD07CD7618915E72c909061031D147a9",
      "txHash": "0xb2aca93f6a93b337ce981d60ba3e9aff39d43e05cfdd491fa983e88b8303b042",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)3514_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)11864_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)11864_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3514_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)11864_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7647950c755069725d62db5eff6ff8eb072b5104e02828d8fa6b555f060a3bc0": {
      "address": "0x8DD123A03b7486F8feDF3eA63C3D6843FF49CeB4",
      "txHash": "0x2fe7a3f1463ae9d574d5e51b0fc32db3480c022c78381cfb8b065b8a014e4853",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)4169",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)7024_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)4169": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)7024_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e5d1426051fbc417ea410b9e42391737581ef9b06760ecd3922bc35a47081984": {
      "address": "0x2Bb0cE8e38791FCccc791bd636F1b3e9Bdb069Fd",
      "txHash": "0xf825f6f2c724cf69d171e2009b4b92e9b178735c172f25aa3b6817053df4df0e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)7579",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)10454_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7579": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)10454_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3e7229cfc8fc3670d771b746069250ff82bf4582806ad4e8f63c6527e1ac4933": {
      "address": "0xb905079C8D3EcFeF2B23611c2fF6E3db0f5c8874",
      "txHash": "0x0f4cfd94dc4b170e9343aea18597d88f7824a3e76fc64f5bdb6f7dcf3e04dded",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)7579",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)10438_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)10429_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)10445_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)10371_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7579": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)10371_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)10429_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)10438_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)10445_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)10371_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0cae70aa1daf67a14f789cc50ef3473dc35848f6f2bd0faeaa3f26f59d4ca85f": {
      "address": "0xC61eEf791FEd673402264E5faf9Ec2CDAA69D5B2",
      "txHash": "0xbab8067a4ea880ab24be0f507fe3467903514202bab17cfa1c5c7892fea4ccea",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9337_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9337_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0856e7de2279ed303d28c04dee3375f531572b4e1a0aaa149f6850e57e6c0906": {
      "address": "0xC5A4C80D18786489ed772dE35656E945Ba91E538",
      "txHash": "0x7a909e4a3ab21c616eedbdaca7dfc3098aaf3eb79878a80bdc3aa66f7175e289",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9321_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9312_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9328_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9312_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9321_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9328_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9254_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "67253361208b5212b555f9b2be042ece487d20e51968686024efa1344d8050ae": {
      "address": "0x80E6F861e0E16e78454CC00Dd968aA3f3CCE02Ca",
      "txHash": "0x83eaf0886abfd512495609ac8c147a2db1028bb754788e5d0544dc239e328b2f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9337_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9337_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8450f0dd237b568391d0c69c901999084622e439ff1f7e2c9a749d6080a51bda": {
      "address": "0x2C21f52DD7AF08aAb4B00c5826360dfCD67ba4C4",
      "txHash": "0x53018e07977d4c22119aa496090d41782ab986a64fae1939449c15c080958496",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9321_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9312_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9328_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9312_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9321_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9328_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9254_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5c1476640588f69845e423b341fa462c6bf3b87ce3120cb86515176b3386505b": {
      "address": "0x281991E88202b42d3a2AAFFD6C5FB8436762e3c2",
      "txHash": "0x1f5888d4da0a20f54b3f9c0a36445ac98985a49a23b2f2eea49f87952e7da40b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9337_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9337_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3271d5850bf89e36ae2bfcf3c0a5b462d3ae9f2ae1ebe2e1edcf217259027fae": {
      "address": "0xe7BB8fC28277F716efCaB6eBFAA2Bbf63Ef5d40C",
      "txHash": "0x9f1b0ff16846e40c410e2fc3daca1a6f4b89223c4562567bcd3e0513d710b728",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)3788",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)5366_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)5357_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)5373_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)5299_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3788": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)5299_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)5357_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)5366_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)5373_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)5299_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "00d6745f66df46a20395e7242b8e555277638e8b1ada76d0938b0d79e8c55e6d": {
      "address": "0x44297ffA6c46C8Ee64Ea640d284504e9DAAAFc29",
      "txHash": "0xc3e42167cee040ab5beb92baf223afa8d80c9c554b64a4a4afe37bf7a68e4990",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9335_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9335_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9265578868016ea2bfd55def23f09dd34f08b936cd7ed47468ec601b4e2724b8": {
      "address": "0xF5CEf87a9b169121Aa19220Bf4b237eD335e8c0F",
      "txHash": "0xa6f68c7104e2b0bdc674523a6d07d5c1385c30de8e2c15205b613c95c4a2d53b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9319_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9310_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9326_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9252_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9252_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9310_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9319_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9326_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9252_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92107630c5593f077510cb33d0f46b7e7be50b369d1c8638a5792d6ffe33399d": {
      "address": "0x5949A94cc3371193ccC5178C29324087Df0Bb6c1",
      "txHash": "0x1d14b551f36f7fbce46721053279e88694b1942d1991d10892fce970c22f386a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9350_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9350_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1a5249d217c82fd1e39870156a31f7f58d443a6d1c45e3a3ab148cc3acef9266": {
      "address": "0x233C8a8BD8c3797B5ea40872097567AdA9987959",
      "txHash": "0x32436ebcd0365f0722e1bab57e47f4c9e1cd82636dab1b1964a389147b3cabdf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9334_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9325_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9341_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9267_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9267_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9325_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9334_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9341_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9267_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0a8a27ce65b5a6011bd3e06cc69a99293304b302aeb9c901daf283c754188aa9": {
      "address": "0x53555AD6c943125CED7D9673462fB085a3545227",
      "txHash": "0xf9eaf1f00535f90ede313eab888dc1ef8d0ae66ebf0c85fee2f2fb9758603797",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9340_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9340_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23b34163fe4c61afa2f31ebd262c1e44f4b9719b719031c9e168de41890b903f": {
      "address": "0x8fD3001b6CdB6B9cb16716A9FC62e6396193DaF8",
      "txHash": "0xe8d9fbacbcecd86108a5fc5ff90f1307466a0c6f5445548cb6098ca66889de42",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9324_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9315_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9331_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9257_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9257_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9315_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9324_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9331_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9257_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dd08a090d157046eb30b3e53fceb514d6a869bf5b2ec2484bc027d81e88b4ef7": {
      "address": "0xA642044cc28F557Fbc38C71dC30f360C115984A1",
      "txHash": "0x0605d0921fc1e004d37afe76b13fc546faa4325e998159ba97035e895bed0f69",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3791",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4069_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3791": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4069_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4069_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ab7dccb1809432a1a86a960ecf52b9812323ee9ce3d770ebac2305430103a2a8": {
      "address": "0x5C4A593C230e6bC316c7733948014230193b7e8d",
      "txHash": "0x98784546e3451d957612ae55307b72aa642a426df494b91434b60e7fec1fa5cf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_market",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d09a9aabf37e846b521f19f968ea5bb3bf27b83e8193f48db436b1420198049d": {
      "address": "0x53e3ff439DdDb3737958349Cf799121C84F7e2Ea",
      "txHash": "0x0d8ef8719fb0f98f4d0ab3f322953cd3ffc69786930041932802723ef45f5caa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)11671_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)11671_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "46416409d557f45006121ed73d051b4de6fb4171aca23f0d1838a7563243bce9": {
      "address": "0x73743d8E2e2A2542A64f9cFBbD1eE38B47bF396c",
      "txHash": "0xb00cd860c9543c4ad4c1fec3e8d9a5dc4ca581742f35741f8465279d6a59b5cf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)11731_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:34"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:36"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:42"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)11701": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)11731_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)11731_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)11701",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a6225fe5f5b28c6d0eb0e4116400d91ed75a28a5e12d23099be4c23551aa2706": {
      "address": "0x79a8c56717Cdf50d7e5C6D7B96C810Fb18B55b6a",
      "txHash": "0x55a4e3ef865903c660e1f7f1606ac979a96412d172f7db727c657e6f5d463ba7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "de7cf72b83311eb31a069626e6a0e4546b5f665bb92ec9be2c6d358f4249bb15": {
      "address": "0x93F4D8164FD9C510b434c66548a0Cb769814E16c",
      "txHash": "0xa892a0910f5bad4dbf2b4df9cee65b62c408efb899d36e7ec1881035dab2bce0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)11650_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)11641_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)11657_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)11662_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)11641_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)11650_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)11662_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)11657_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11683_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "986f60020f028c333d407e3903a96d46bfc0e851f0beb959b7bb5a524322c4ed": {
      "address": "0x6840751f7d06be900770aBB96C9994b25Eceb6e0",
      "txHash": "0xf5913071d9facc559d505d677f919068edf43ae1537be2ca9b9936bcd855dc5b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3984",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3984": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4201_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9534af3ab88e5f6bf5a085f5ad1d7f03b8a50737119b042bd7fd1df1a4bcac77": {
      "address": "0x56c836eE4e3e68E7024e36abF05bb90D46FFb15b",
      "txHash": "0xf880e2b5a49ba743bc11885ca6792ffd37ff84a60bdb2ee89bdd10c71cc8c0e8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)11671_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)11671_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "49c8d9b1e21fc6a8d1f8fb28182148e4ba48dca9e88f69576910b6a8254c9caa": {
      "address": "0xF7341B77041786C61C23dd3C109E5496c23Ff7B7",
      "txHash": "0x4cff4a9af4fb4f33db42d8dcb65ed44dd592bc8bf6588e1db8795872d789099a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)11650_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)11641_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)11657_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)11662_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)11641_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)11650_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)11662_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)11657_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11683_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ecd36e7e428601c8641e34d9a0f810791228c6de8c0ca0c2d223cd1c4503ef64": {
      "address": "0x829c5AA87Ac621CF64666ef62a39D627b30a4091",
      "txHash": "0xaeec04e3d2a82f1ba07bbbc477533f953be3b975807283e6b571baae5b883519",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5073",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)7373_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5073": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)7373_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7cbdd7f98166613d64e9d7dbe420862a457b58111c1f97621affc7b2a551a8b5": {
      "address": "0xEe0A25432990F4D704dFD8B2e0134547F1269828",
      "txHash": "0xf942f06c745fdc6fe8e7b7bf6d2ac5e839b82fdee516e2ef5f89a4b0a846621c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)9302",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)11596_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)11587_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)11603_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)11608_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11629_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9302": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11629_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)11587_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)11596_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)11608_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)11603_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11629_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c38adb150f2506b6885bd599ad5f2dcc3ef8b7ef7d107df6745a33fa6ec317fc": {
      "address": "0x96dF74Ad159Fb649d5396C1804699F39B42bAb30",
      "txHash": "0xce10c11ea12613a4fe653d08d4c3ea4fc1e4cde01e0d5b4d1f585c4ee8681bf0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3984",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3984": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4201_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1c7d87ac05ebde98da5e119a3659f62c57f47c2dcbe32a2ed4c4cf4b376ca50f": {
      "address": "0xA19bC97F76277040ba0f9d6bEaD9fdFe4378D1a7",
      "txHash": "0x939dc2cb536548bb25be4e55412611287240ed277218289c98e56ad89d2b2446",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9703_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9703_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05b6a36ee0f1c965a5947bbea346bc35132c4ccf84382c72ea5d3b41db9c533d": {
      "address": "0x7E5D630BB5E2B4e14F1d0907c34bd79889151d08",
      "txHash": "0xae88c73c9fa9f1257da8beb253b1aaa1a798a8172f1b8a970eab688454a11ce5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9682_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9673_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9689_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9694_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9673_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9682_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9694_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9689_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9715_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "03cd3e1c2ddef335091436f168a2ed87279f800c1c27dc4f33f989e4e61fc5f9": {
      "address": "0x22634a8dde6A803f0C732012093846C65538c7fF",
      "txHash": "0x4520224837b74adca595fa3c3c6e7c4c2149764869001292bc8b8c7e70ad27b9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9703_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9703_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0696be683e0a6b491639e7a4b344b632e7582a89f36f13a817949f154a67a3c7": {
      "address": "0x3c4031dAe792D40af30cBC86192E2a732411df4C",
      "txHash": "0x7fea30f910b7cfef91274e4d907a7d449878f550c34cf41c3b9328dca2e1fdd0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9682_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9673_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9689_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9694_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9673_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9682_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9694_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9689_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9715_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "72fc3f18746be15b1e3eb598796471ca0127ac27e923ba05160cc956ee5374a9": {
      "address": "0x818dbE97EeDBd10eBd2e24A7Eebd5E0356CF32AE",
      "txHash": "0xe64b122c0f0af44d98cdd7865e1b2e1e565373c645e4e47de295469f4132d51c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9703_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9703_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7ed6012bd9378103c82cbb7d8dcd3306a1338c13aacad01c3a535f2bafe72f0b": {
      "address": "0x09AF388c90AC27dD8e88dbbEe0519D52d3863F92",
      "txHash": "0x88d4a9756ff985162382ffa27dd071ea93077b706a5793d4239dc5a2e5df3eb6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9682_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9673_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9689_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9694_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9673_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9682_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9694_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9689_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9715_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a044b666fd7b500f291c9a23e28ba4db1d968550e251d321b1234909c2184270": {
      "address": "0xfa3ec6E2FAf291ca9F6b432D4c5B41f48339663d",
      "txHash": "0x428895e52fafdfb5b78ea57e967cf9784ceb3d2f4b5826b8fbb54da0f625e1b1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)4266",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2514_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4483_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)4266": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4483_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2514_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4483_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f461eadc2a0b5d0eaa606c09f910cb188c3e46b4a96a35f088d05f2deb8cad57": {
      "address": "0x29318131f41C447a56e2D9482feDB4458a8cc501",
      "txHash": "0x241bfbf9d9ed33fc15fca5ee502bdec3416830e7d653a89697ad94239fecd5bf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9797_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9797_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d640e9cb2c8235f48f55f068dd582c47d987d25a894f2c5da2ee2e163ab487d": {
      "address": "0x0a16676607b4742d742e3A833b8b34D48254567b",
      "txHash": "0xf324833ae426ffc8ec6bdc05e11e7791999014dc5f8ef02d6809f60f238513f4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)9857_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:33"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:34"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:41"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)9827": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)9857_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)9857_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)9827",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aabf62fc447f7d72b02ecb0ca0bd22cf6f57bdf97e29a950577782c482398531": {
      "address": "0x8C0e3714c7eE8804c8df42dD91AEA9E31aecFaE9",
      "txHash": "0x11e3bcf20d2f02d92a76b54bf299c6f974f5c127977c92009b8b6aadeab8bc96",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9776_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9767_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9783_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9788_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9767_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9776_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9788_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9783_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9809_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "32f7fea7051782c26e8754a1ced42b70f867dd2936129707a6d4d6d632c3532e": {
      "address": "0xC3741d46Df387114175c78c2D85b83576bF6955E",
      "txHash": "0xb0d652a0f02d3e1e7f9aa3836d90bd8d6bb1fe58249c1457fafa6de256f239fb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9797_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9797_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0c96d096c6875ca2aca28aca51f3e20bf7d311dcec06dad149c8b3eadffb1c09": {
      "address": "0xB10713b6F9D463bc1092990D4fAb3997301740EA",
      "txHash": "0xd7085f4e6d88d1617add6e2c2945dbe4cb5c929bcdb2758463c13419a0872e95",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9776_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9767_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9783_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9788_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9767_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9776_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9788_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9783_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9809_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ce7df1763cd7d5e6b327f1d2326470d8825e5387c9bd8bb723ae725990d22930": {
      "address": "0x16eE7a6f92eBe1bd4e49BFAeD07e96158D98159E",
      "txHash": "0x97d989bac777255e6433742ef86e73b571c6d8422041d5b17cbb4410be887214",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3984",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3984": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4201_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "11f453b177f6d9bd75c6fc9a50b63af43fad3a69eedc13dd19f4630b1efc240d": {
      "address": "0xca29fFD0C5309705Fb680bf3f430249F795AdadD",
      "txHash": "0xe660112e642627ef70f938986df2706fa0b73269fcefab1def11aaf49ba92787",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9797_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9797_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "62ffa760c8e96c6c7b68ff6468e42ada00bef5109607e3570b3fe942a09f9a69": {
      "address": "0x69b0d96d2310d4643A74E737FC178B1e30f6BF4e",
      "txHash": "0x4585a0c1005ef2703422c79af46471a3fb575babe96fc2d7981c08dbef42f172",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9776_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9767_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9783_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9788_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9767_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9776_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9788_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9783_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9809_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b8af21a93ecf9d761add5390ce526d7fab6ddaf18194f54f292c7b286038083d": {
      "address": "0x7C931f0a50DcedccFdA01E5fCfe0a9504c53c7E5",
      "txHash": "0xd65ec9546765e017ae88d7489234b0fbb43d20d74ebedf339faeaabf5d8f42e7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9797_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9797_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b19a94306a702d0fd0150b503540958e96e22481aff341e95bfe05208a6a1381": {
      "address": "0x95E6C89bbCF4AB0425cC3Ef59285e5311Da611f0",
      "txHash": "0xf425fc5f865ddf085069cc9ea17fd3306a42f884517ca8b6517457b35a75888b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7484",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9776_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9767_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9783_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9788_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7484": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9809_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9767_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9776_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9788_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9783_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9809_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "35c6f362061c03467908446cb90f871a30cb9ceee58af6281bf91732c0c1bdd2": {
      "address": "0x208c15E1f0CAA12c34bf4F20315eBE12115483a7",
      "txHash": "0xc47bdf19fe87fd59aeb640ff0941334b3f2e96439822e5002a619328d8f6edcc",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3984",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3984": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4201_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4720615d6f09b4c2f6210f39a74f86854e85d89d7c645649927c47ac1059ccb": {
      "address": "0x9c2DC21eD9d0510e1BE799DcDd3740E8Fb5521Cd",
      "txHash": "0x4c4e8e713d7dc60d233f90f573f993ccb62958d38ba46bb3eb209024141a5fa6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_market",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_liquidationRewards",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "549b607f4728c292e072115922e8756cb17af3064ce25647d7290e38dcf62017": {
      "address": "0xE637235e4e8019e77ef14598a96484b99921619C",
      "txHash": "0xe07168df99b9a35f957e0de55c4466d2afb2327c2bfc03c4b2e45c4e3e69ad2b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b512c67785be48a10043f34f63e88a3305525d0af487a379e816aecf8fab7cf3": {
      "address": "0x68C5cD4a9C42D170DD26c798CE183243c8531dcA",
      "txHash": "0x360a55c5d8f88a8f893b213b82af78f3764d06f0c000a5866dfe45e45dc7a2df",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "18a537a2c56820c3b1edee420539749b39ad3ffa9d114fda10611ae0a22c7583": {
      "address": "0x3414ad4FE22BF7748A3cA7847220A1Bc7bdE3131",
      "txHash": "0x3636dd8b8763e4f39c0058b88c0215db794480dc24d693d7ca6fb2a897b94805",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)12172_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:33"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:34"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:41"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)12142": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)12172_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)12172_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)12142",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b61ff5c72f0953a3996c73fd545ff7646d4e56ea3b1ae22aaa07a60ae6f389e2": {
      "address": "0x52fB8B24dC0c821363026a69a16090598F16A09A",
      "txHash": "0x4cd8d44460e8f03d2e940edd6b55cacb25754fcdf567bb47c9931405594e7e4c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:29"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:30"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:31"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:32"
          },
          {
            "label": "_initialRewards",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:33"
          },
          {
            "label": "mintedAirdrop",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "caa7af1d4e9c68750c714fad34160091f450fa0cb0c92a86ccdacf59220a44e5": {
      "address": "0x7de7AB2Dff49799A9669d4abc71A2F426A59fA2E",
      "txHash": "0xe1ad19395a0053575fef67cbd32d0256960e85363595fc2a590550f3f44aafc4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7dcc0f04a2343cf711c01a0785d757a511e32dba65107fb1105de890f3c99546": {
      "address": "0xcEE459097949454E3900E9AB2117aCaC48478b31",
      "txHash": "0x597e45f5737d78317d57a18b14726d3033a99f9b0c013b058102964cc20be4c1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8e58187612bf3fa183ddfdb6440a4b8a9e17eedec7ab4e6f3479776ffed9e21a": {
      "address": "0xBcb252599aB4A7ef998db2BfC26C76575234e70b",
      "txHash": "0x8a60b94ecb874f2afa4b3e00f3ea971656a7660fc3d0e7ba810e662b3b7354c4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e15d9e4731df85b01a1fae7210f396ee70e6bd3662d0e8c5638c145ca67bfbcc": {
      "address": "0x774331283Ef6c598AD32Ad3540c5A69829A46A61",
      "txHash": "0xd2f2363376497223705a0020d62ff938b07b293034efb7e6c33158f3ce30e85c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/LiquidationRewards.sol:20"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(LiquidationRewardConfig)12069_storage",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/LiquidationRewards.sol:21"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/LiquidationRewards.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidationRewardConfig)12069_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e6dc65c3073cebc8e8d43cd230775ea6529aac9a75195265fa2c1138e8401d28": {
      "address": "0x2b47A8f032c3947962d944fCcefFbA3CDd8b6Fa7",
      "txHash": "0x7c8a3a6b4084f07094f318c5db7750b5c977d64b57b0b7f487beace1bf46ee3a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "Market",
            "src": "contracts/protocol/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "651b4c70c9e538faa69f14d1e8a9f95f345a8c549923486888650d29be0bed20": {
      "address": "0xb97f30aBB524e8331Bf0CbB883B80C701D8345e9",
      "txHash": "0xa2d278d4851cada50454b882f1c233acf925c7eea8bfda73d13fa10b2a30f6eb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressesProvider)1154",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/LiquidationRewards.sol:20"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(LiquidationRewardConfig)1264_storage",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/LiquidationRewards.sol:21"
          },
          {
            "label": "_lendingPoolIncentives",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/LiquidationRewards.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)1154": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidationRewardConfig)1264_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a85534bf6da5726e0d2ac9f03ad55c2c1939003d6bb55a99fe8a0773e3a7f331": {
      "address": "0x9EAeeD10e832BD06d1275351fBCBFdDF6eC7EEca",
      "txHash": "0x03d375a3903d56d6cd3fce94b963195f6e4e0de362133db45a621d54e61221f3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:36"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:37"
          },
          {
            "label": "_userLockedBalance",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(LockedBalance)12122_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:39"
          },
          {
            "label": "_userHistory",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_array(t_struct(Point)12136_storage)dyn_storage)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:41"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:43"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "156",
            "type": "t_struct(Point)12136_storage",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:45"
          },
          {
            "label": "_slopeChanges",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VotingEscrow",
            "src": "contracts/protocol/VotingEscrow.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Point)12136_storage)dyn_storage": {
            "label": "struct DataTypes.Point[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Point)12136_storage)dyn_storage)": {
            "label": "mapping(address => struct DataTypes.Point[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(LockedBalance)12122_storage)": {
            "label": "mapping(address => struct DataTypes.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)12122_storage": {
            "label": "struct DataTypes.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Point)12136_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fd4e49aa0817998df403c3789cfa045b304b7c62b09f360d15d31a4ce5804c23": {
      "address": "0x8E24bBdfE1126A9200C5607a6b9805436a1Bb0CC",
      "txHash": "0x7558aa1ec9234184fb0222523205b3c739a08cc6081d2556c80c453770d342d7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:13"
          },
          {
            "label": "_gaugeWeightHistory",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:16"
          },
          {
            "label": "_lastGaugeWeigthCheckpoint",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_struct(Point)12136_storage)",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:18"
          },
          {
            "label": "_gaugeWeightSlopeChanges",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:20"
          },
          {
            "label": "_totalWeigthHistory",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:23"
          },
          {
            "label": "_lastWeightCheckpoint",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Point)12136_storage",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:25"
          },
          {
            "label": "_totalWeightSlopeChanges",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:27"
          },
          {
            "label": "_userVotePower",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:29"
          },
          {
            "label": "_userGaugeVoteBalance",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(VoteBalance)12129_storage))",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:31"
          },
          {
            "label": "_reserveToGauge",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:33"
          },
          {
            "label": "_isGauge",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GaugeController",
            "src": "contracts/protocol/GaugeControler.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(VoteBalance)12129_storage))": {
            "label": "mapping(address => mapping(address => struct DataTypes.VoteBalance))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Point)12136_storage)": {
            "label": "mapping(address => struct DataTypes.Point)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(VoteBalance)12129_storage)": {
            "label": "mapping(address => struct DataTypes.VoteBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Point)12136_storage": {
            "label": "struct DataTypes.Point",
            "members": [
              {
                "label": "bias",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(VoteBalance)12129_storage": {
            "label": "struct DataTypes.VoteBalance",
            "members": [
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slope",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b0a5d666108e93aa82331bc6dcb2fe5fda86d8c7e1fe623381f746101b074d9b": {
      "address": "0x074a05A7e8d7743A63711D303e4fcb1259FD7Cb0",
      "txHash": "0x694c37bca19bdebc374cc8e61bba8e82a0ffd03a14889cc2486b935e5de7467e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressesProvider)1154",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:21"
          },
          {
            "label": "_userHistoryPointer",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:22"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_userClaimedEpoch",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)1154": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0ccd5aedba877b3ec79b33f01173ccf0979c8aa0f6c13e51eb09071a97233251": {
      "address": "0x31BF3e0cF0C47134a2D951A995D4300671aFc6D5",
      "txHash": "0x24a6024c36c868a64cc87a828b961ee88efea00b364d248c6b8a00851b1f4b03",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/TradingPoolFactory.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "73f9f3f7c11ff2b7dbb47db4ec3ea836a65b40614018d309ec5d944c169a7758": {
      "address": "0xd1795e8b0ED9f188ADf78f10682058daF878eF8A",
      "txHash": "0x05e9d0321858ce7bdcf3b162f9eb716a0302172cb2a7a473ada07d83af785fe9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9015",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)11121_storage",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9015": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)11121_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ffe84904b1edd1821cf92ba4b00469095f5dedd5e66e58f884b2a282b06e4745": {
      "address": "0xA97B9655e560318b61E8a1aF706661aF26a89c03",
      "txHash": "0xd6ded653d04a0b73b81aa0a9f968757b1cdf7746c186cea8b53ec3398f9a5c35",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)9015",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9015": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3cd9ab664b2e86ab02f5ac86447485552886e161206786cfd4a5a1a0af544739": {
      "address": "0xf17a4d0C4938ac08DE5227D918921b982ed648EA",
      "txHash": "0x9ee04faaf70c37c1168764256cac1f1734f62774bd9157cf1217eb6c2ca305a8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7330",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)9454_storage",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7330": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)9454_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "530952d70d17c84ba19feaedfdff41eb9c0c2c6c3f0e1714e0f478fa44379687": {
      "address": "0x5F3780A8005545f25C8ed061Af2B31097CE21366",
      "txHash": "0xc88fdff0dfecc61c482cb5449439651587038d02de7484ed809d1612384429f9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7330",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)9454_storage",
            "contract": "Market",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7330": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)9454_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d5c2215738b5736f6e0b73050a55fa40e4aba3364eb08a4304b8814e5a418139": {
      "address": "0xa10deEB1f7657aDD14a80D43535D322B9aC6fe9c",
      "txHash": "0x27d63850e4a60bfb7de3c2935a4e80424372ecb83055b4c25d5c26cc61359f5c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5039",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)6981_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5039": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)6981_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ff6ffb72a0d75b3000cb821c14491438f94d0ee3148221d8fc9227ea6ee6184d": {
      "address": "0x42Df7eb772ceA8EE66B9Bf902B01fc8A3bd5dD87",
      "txHash": "0xc3643cb33c378f28be949f324a02c5db604caa861de614880487b2241d995162",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)7330",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          },
          {
            "label": "_defaultSwapFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7330": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5a24b397881d77ce3da7210e0e740397e6c0131949fe273858e0abdce42eb43a": {
      "address": "0x6503aDc537ba3eE4D5086814B0cA395395aD335A",
      "txHash": "0x79b86bb0abea4dfe301f9c4d4a43c2bf2c7ac7414ebedfee494257ec051d699e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5039",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)6981_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5039": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)6981_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a86a2f0fb35b20ff449c93ef0e35019def4b3d3996cd7962b0cec9c8222e13f0": {
      "address": "0x8d2DD901da927Fa7e9ce17EB8821C81eDAF9E291",
      "txHash": "0x745e90195980293aead5344b5a75b0a9786499b14f173147877b135e13df984c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_liquidationRewards",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d4e9d183bfeeec1484d24de15c2175c9f24d1e1989917e081c4fff622add96ef": {
      "address": "0xB0d81A00e60f8b965caf3450F5D70F8881e44df2",
      "txHash": "0x34a1e962d1074ee46ec42306faee1bba18b61c7ba36b25460222d894f4c9a832",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "84163c7f507210baa3b0e2eadfaa1c390b88b13e957a8198d28d0eec53218de0": {
      "address": "0xf9417af5Ea804CaF0Be8c1686CD7F04905861102",
      "txHash": "0x7ee8d00fab07483e860032bfed33544adc82024470d9a12f3444c9d12436b3db",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:30"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)12172_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:33"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:34"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:35"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:38"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:41"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/Lending/LoanCenter.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)12142": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)12172_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)12172_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)12142",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8feaae20afadaee59270e05e577c15266399c856819c439c868ebf9f39515190": {
      "address": "0xCad2C0B00cF35039196c17f067c868b668Aad629",
      "txHash": "0x6832d02dae8b94350b220f9c1d492701f5a61efd4775b0f52c6cd49ba95a722b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "DebtToken",
            "src": "contracts/protocol/Lending/DebtToken.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c309d0017df6ef75f05fa246ff5a5bf271a811a7669145343bca382204361c45": {
      "address": "0x484fD9EFd82cAC2D96745737938AF486Ce8DA56F",
      "txHash": "0xb58c6801fe681091e0b1fbe4363fe2e1b6f38bb48d573c6345584dd0cdb04645",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/Lending/LiquidationRewards.sol:20"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(LiquidationRewardConfig)12069_storage",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/Lending/LiquidationRewards.sol:21"
          },
          {
            "label": "_lendingPoolIncentives",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidationRewards",
            "src": "contracts/protocol/Lending/LiquidationRewards.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidationRewardConfig)12069_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4ce94f43d865d6acc7981013fb860a978ef139ed999dfb4bf77d321189267bd9": {
      "address": "0xc60819Aa70A55DefD4eB7e41d2Df44e6e23b52ad",
      "txHash": "0x9d960734f7cffdf8bffab046f70080101bdbd23f53915616f47fdf081db1b74f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)3468_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)12177_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)12177_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3468_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)12177_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "912bb1aaefda8ab62d16ffb53a96b0506a24f1391e1c005e568df6fb6c3a727c": {
      "address": "0x4Cc6C22E423cCB920f0Bf3AC53E887587302b720",
      "txHash": "0xbf3d438e403a92bb29d407aef1de3dd50b294a55751f2b0ed6bb68b73edac9a6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:21"
          },
          {
            "label": "_userHistoryPointer",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:22"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_userClaimedEpoch",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "44dc3c6f4f91e36a4258f91357ade0bfb60f283a42694ccbeff19b0c9330782d": {
      "address": "0x5733FFD38F9a95Eb5cA8598B97c8Be8C3Ae6103f",
      "txHash": "0xc525ee91c4153837c92641084935b6e2c6b2fb45c4e543747281cb69699b3fbf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          },
          {
            "label": "_defaultSwapFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d1ee3305280afcf1f3db4ec3367a058a008ecdea1581d1b98c13b1069e142f5f": {
      "address": "0x19387e7253d109DAd0b66360592eAb6c5B803c04",
      "txHash": "0x9afd6e07c1060de51305fc74f6bbc1f701741283fd4e8ab2c84921c8390c559c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7f66280e3d4b9c3d6725486c2a867c0444fbc1dc6a66239c6d598389c69d6c52": {
      "address": "0xa18e9768db3191fCAbC90aC9a96bD21AE280C12A",
      "txHash": "0x974994d90bf026db70c02465917c3287f2d70cdf9ee74dbc4270a026cbbdb84e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "66f03b68da549cb14d982866a42b45231489312fe977af91c999bf41921d03e9": {
      "address": "0xb59B1e919F163c81d62d23406116b44A3fA43907",
      "txHash": "0x2093fa5c02a7665beaddc41c6a0145ca2e0a29074ccc895eeec29c86c406eeba",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2577a955f3c13a8bdcf674f09549fc25919b350b5fe52bcca39324ea535be528": {
      "address": "0xA26C672f945993f638aBa95781d3F87E9B72C6bE",
      "txHash": "0xe00ee472bb180940566f6a2d0cfebb7e1525cbcd5c97d73802421f4342636b4f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1622a97fae2c1e56596750b7df3efd0aae8032a043c45bbb911f26c74ef8beef": {
      "address": "0xb3a8FDBFc5Bb5FB60DD7A6558EC4266a40C40d64",
      "txHash": "0x326d7cb59ebc45d939d71061104e9eef44db283a5a024aadff843937af262f54",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4b1f930084733b29b2761de31d63902e3accf715e23f0457ac245b32ea8bd228": {
      "address": "0x9Df20cD90928093b73cBc1E3ee309424BC5Ebba2",
      "txHash": "0x4609af2d877ba638dcfb827c3ece42d95ef152087bc96e514285d988e56a7839",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9929",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12078_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9929": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12078_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a8b105c8b3da2a5410d15790f4ee01db73374b7754507c896e39896e84ff4485": {
      "address": "0xd8B544108274fA6b4d6Cf296bf71f1183b31AE7d",
      "txHash": "0xcc1a23e5b8284759789b9d178471cb442cfe3340de3fc7b4e93a3f99277197a0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_lendingMarket",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_liquidationRewards",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          },
          {
            "label": "_gaugeController",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:20"
          },
          {
            "label": "_tradingPoolFactory",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "61ffbebcfe55d6c62c0eeee0f495f267db97e738c537b5007fe42e32bbd690ef": {
      "address": "0x3E723Bf19c88B62f9F20bE97E68Ae5ef7258f2eb",
      "txHash": "0x51510e359880721bb13125573433605c3d28ad91ee1aa1acf22ce359490f356a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9939",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12088_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9939": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12088_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cbae5f2376a654ce3191eb7b07334ecefad5d1ae907a58db2f8cc1cecf53a9a3": {
      "address": "0x9b088fBbdf694577364223a995E5534Ffa5d3FE3",
      "txHash": "0x7414c4ecd4d4a47d71575bc881f5df576c18e635afc17542d65ddd101b5141de",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)9939",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          },
          {
            "label": "_defaultSwapFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9939": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e854c445ae00de6cc8e288fcf4b6bb49d98663b42caa8e6303910758aea901a3": {
      "address": "0x5c3A575247f6845f9B12278D383AF69cFE0dFDe4",
      "txHash": "0xcd8c70e5b05e66772f736e2121e04f4185b57f0799d30e4777633923c43cc254",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9302",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)11445_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9302": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)11445_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b9ea7dfa3d641f08fc75342991721cfbf3b84f6476b0a97998b69ca17a4ac80c": {
      "address": "0x67E66671d3D8959Eee8eb07af13523Ebf2882BDe",
      "txHash": "0x6746ab6de4b633a6ee4363ac6d6ab3b14d6f00b97ba0ed89a74a8e9e6a5ad9c6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)9302",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          },
          {
            "label": "_defaultSwapFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9302": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e4f4c24ffd796c307ea5cef1537062afe890ee937178ab4d16ecfb7342cb8b57": {
      "address": "0xEdA0a630563342F7CB31c3A659aC7E89671E8DbB",
      "txHash": "0x9f926224ffbf01b6379fb65fd1e6aa0820876800d856702e4ad8a40840a66f87",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9985",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12138_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9985": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12138_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4de016227a2d3f7ece0743cd18c50c628fb92b0aaa9d457ac9a271e4ddd8bdbf": {
      "address": "0x25e4E563F484C63933D554CD0b87cF5812076DD5",
      "txHash": "0xc43457e4c9104aee114c49fbd96719ca8d08753aff8e624ee1835ac102464a4f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9985",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12138_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9985": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12138_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8906d65d43506568c7d052ddba1f37ba2cfbab8980d57a033505b60d19fd3973": {
      "address": "0x688673723FAa338bFdbD38Fc15cF84bB0764B850",
      "txHash": "0x26b1a92df53c8fb1a0fecca957f8f3ad02fe2c81adb67563aa00194291e5e153",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)4515",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          },
          {
            "label": "_defaultSwapFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)4515": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "239c08e9e8d2d31431e04bfbfe0c666023111a3450c71237f2b62abb1a2f1e73": {
      "address": "0x525E8c9cA3119034Fda90879cBF065e7f4A8ac03",
      "txHash": "0x68ee8817a5d48d733bfd6e344fa5dbc61b9cde6f01877ade8bcd089eb43fe4c0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9985",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12138_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9985": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12138_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05bc97dac4c5c24207477727be8a6b70819a836a50660795a16bf03277e96a4b": {
      "address": "0x8197f14a9191cc35882Fea8f9e421949D6828133",
      "txHash": "0xe6921b61ef6dd3d70bd3e6370416d27a6bb3c66d61b2f660532fbe262988504a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9985",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12138_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9985": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12138_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0457bf01b3f710eadbd93bc74d30eeeb3dc34a0a380b40ea115ea9fa7b2fa64c": {
      "address": "0x68Be07E16ee70a7A507c449D2477412d39a86a1C",
      "txHash": "0xaad8ad41d51d5c61067c9d6dc7ff00a15cfc5650d209727573dbc350e06736cd",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)4515",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          },
          {
            "label": "_defaultSwapFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)4515": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b15d837f24db71c4c884794cbccb904472e4db47046a133a16987a48cf99384": {
      "address": "0xDAD30b23f1410598DE9ad56ce6C08442cc9E0698",
      "txHash": "0x96749b6b8b0612fae8877d2c0fdd893b64bf0298e698bb9960e8d8ee59243275",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:41"
          },
          {
            "label": "_poolsCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9985",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:46"
          },
          {
            "label": "_defaultLendingPoolConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(LendingPoolConfig)12138_storage",
            "contract": "LendingMarket",
            "src": "contracts/protocol/Lending/LendingMarket.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9985": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LendingPoolConfig)12138_storage": {
            "label": "struct ConfigTypes.LendingPoolConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "liquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2d9265723406c86183d613b9aa62d68e7fa7dff9cd6d234578fe5182d41ef99f": {
      "address": "0xDDDE777E14fC12a9c467C341A925d9655a6e5313",
      "txHash": "0x6f08a90b0709064220883ad3d1c431e94b8f1a54fb8575c8a0431253aea21f6b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAddressesProvider)4515",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:29"
          },
          {
            "label": "_pools",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:32"
          },
          {
            "label": "_defaultSwapFee",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "TradingPoolFactory",
            "src": "contracts/protocol/Swap/TradingPoolFactory.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)4515": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
