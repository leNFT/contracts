{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe9f5Feb0d62Bf6350A221E9d14Cfb62C1EEABb32",
    "txHash": "0xc24ed6f60ad5dcf1d11f1ba5c88550772e7366be12c34fbe759cbd80de0dc967"
  },
  "proxies": [
    {
      "address": "0x541A934eEB91F91f178d4Cd91F2db0d0e712Db4a",
      "txHash": "0x731e0056ab86aafb89297d20e03b02281e3711207a0693038ea8350b31a86792",
      "kind": "transparent"
    },
    {
      "address": "0x30499a0e1D548435FdB3E856633f6c7cd4Ba9891",
      "txHash": "0x5d9a4e9a302504343030b563f11e267380cc8278b35cef5843dafa0aa9000424",
      "kind": "transparent"
    },
    {
      "address": "0x54aeE695e688b87E2D13379E5af2F463d13907E8",
      "txHash": "0xa296d7e75e45b1b3419f1342b1710f754dac57768568cb10a5516cfb5644a829",
      "kind": "transparent"
    },
    {
      "address": "0x721f7BAE16b7dfdafF22Cc149c909d8527da109a",
      "txHash": "0x05403539117800c5035b7773aed7c77b467d5a3d13cd64d5219609bcf38916b4",
      "kind": "transparent"
    },
    {
      "address": "0x5E8827dF0f496Cd0710B25C4EB37A550242fCF1b",
      "txHash": "0x216a43e504ab40dfb9258b9fc3c988ab28a815a7be9711e8c8bd7d4a2dc2a75c",
      "kind": "transparent"
    },
    {
      "address": "0xf9A7e772FF0BdA5676D35ad30E0AAd7b63AF3055",
      "txHash": "0x27fc429e6e49877ef9c538fb1b6db4ea16865d2ab92f0028b368396d44f132ed",
      "kind": "transparent"
    },
    {
      "address": "0xd311ce967e154733427E5725669B7B3dCAC1519A",
      "txHash": "0xf86bf5d441a5853b6b3049af81182b0198eaaa2c17a0b3e85890ef09d230df7c",
      "kind": "transparent"
    },
    {
      "address": "0xA6E7981ae66b5Be72106bBA4e90624C8c2615009",
      "txHash": "0xf70e0ac381d97f72fe149fdefe9d0ac3de448b7af2fc9fced047e3cd81dbc0c9",
      "kind": "transparent"
    },
    {
      "address": "0x8a923ae10DCfcCa05d7078D11c0582e9F212c1Be",
      "txHash": "0x574b33b9b9b2098d88d53873f11749bc843a10c7c5c0edec7f7dbe8ec0a23215",
      "kind": "transparent"
    },
    {
      "address": "0x51Edf4f4702950D06B4418E7713A9e4891fbB292",
      "txHash": "0x96a7e06ac21bad1dd568673a096e167b2ac2e29794b9cd2f70c2e61e93f5fefa",
      "kind": "transparent"
    },
    {
      "address": "0x3A55132824588559D4bfaC85f7A80F53Cc733813",
      "txHash": "0x67bbbb1b6a9724c760d6a34af721e6cb27479784feceaae2b5421d2caf9dda43",
      "kind": "transparent"
    },
    {
      "address": "0xEaE87a2690609D267B9D48671d7fA3f0aA027632",
      "txHash": "0x7fce3454dfa2d718e834922e6e060a8142419351009c7a0d95d0bd7f344ba72b",
      "kind": "transparent"
    },
    {
      "address": "0xF1Ceba60cA2C94F73cb6db162eE7ad7391D17a44",
      "txHash": "0xcd6645ec479f17a6a275900fa66d94dd5ee921c335333efc9ffd6a18051acae2",
      "kind": "transparent"
    },
    {
      "address": "0x261622D908Dcaab096C5B875bAf1C51803D279fE",
      "txHash": "0x981ceb06ab2eb1c04d4d8b8c8812fdc5456f10c47b03bb1961e493536ce8cabc",
      "kind": "transparent"
    },
    {
      "address": "0x3DD8DeE134bb4c64da312095b7a5dED70cB884aE",
      "txHash": "0x59aa605ab63fb207b85f423b456abaad8ff2b8ba3f57980b4a042f7374a56859",
      "kind": "transparent"
    },
    {
      "address": "0xB2800CcBc821b48A7f7C075b8B25ae3E8Df72eC3",
      "txHash": "0xdacf282586da2099faf126fc769f8cdd02db2595c91f8a67974d604890deffeb",
      "kind": "transparent"
    },
    {
      "address": "0x2032d58Dac6398F2e7FF7DaaE32d7BabDE71F64c",
      "txHash": "0x81702323ba522f07c9f7fb80f0ff685975dacedf37bcf947d7ff13d80aa49532",
      "kind": "transparent"
    },
    {
      "address": "0x261963247f41a12DFe07475324F49B7e54671b8D",
      "txHash": "0x6c653bd39f418ddcd41f915b2b42057c209e0ac7b0135227890f0fdc2713034e",
      "kind": "transparent"
    },
    {
      "address": "0xc70Be26D55Ab44CAB154E2047796B1df364Fe569",
      "txHash": "0x1032ef59a834de3c43425873e0a48e3042c99e69571687ef7eb333241f8caddb",
      "kind": "transparent"
    },
    {
      "address": "0x8a794B33c8587094Fc781fFB2345425d8D282Dac",
      "txHash": "0x51162b74baa4d2595b91ecfa21517bd4febbb0eca91ef76e6e37324ccf3e9c0d",
      "kind": "transparent"
    },
    {
      "address": "0x31AbcAfdA7e8E7A07A7E8A07e1C699EC1d44F828",
      "txHash": "0x68802bab678bdde3d618c9c4dadf3558399eb6b4853365135ed984a1034be65c",
      "kind": "transparent"
    },
    {
      "address": "0x136F8B52343B5B95Dee26EcA82d749C790BD9f2F",
      "txHash": "0x6e82a0b0c3d2f3c8da09177fc7ab52fcadc678fc0ad7fba51a874444da329102",
      "kind": "transparent"
    },
    {
      "address": "0xf790dd39dF46335166Bccf2126a06E01c70a59eA",
      "txHash": "0x0dfe6ce8ad4dd959a66daca8a19a4b6dfb64429cea6b3d47c6541c4b81ec50fa",
      "kind": "transparent"
    },
    {
      "address": "0x22058919880037EE6DF016B0014b48A3daE697D0",
      "txHash": "0x750ab89dff5d6eadd8150d58e01bc0f8f92e068c453535c13d615eb9e7cfe869",
      "kind": "transparent"
    },
    {
      "address": "0x0E335C779441bfA587AA5D647566b01cB43B6202",
      "txHash": "0x5c8b7f9b91ba81a731ab8d0a50ddd32b222eb9e164df083ac134760f30143e7d",
      "kind": "transparent"
    },
    {
      "address": "0x5657B03401641FA6A91B698a3960C326d5DfB03c",
      "txHash": "0xebbe3a0a4ea03a519614fec7b09599c9c91266cee9d019b93a622e2e6ed22c0f",
      "kind": "transparent"
    },
    {
      "address": "0x51d29EF3367e9E43A7485c55FCd58e0F33750210",
      "txHash": "0xdb031219bc7b3c8ce3f953bf98363d0b8d0a2dd78c2d7f237d6bd142aa75bffa",
      "kind": "transparent"
    },
    {
      "address": "0x19084E6E125DdC5dC7bE7E524142Ac7B869D2898",
      "txHash": "0xa6ff120adbe7c2ee4e0e01680aac1f58c3afe8f48d8b268aa8c9ead6fd833c41",
      "kind": "transparent"
    },
    {
      "address": "0x6dDcde112D0Dc5ed518b12a0145B30bC6f916BcD",
      "txHash": "0x0c2a7aa413758ff6bec00eb2d8aec7995ba04d794fe55590dcef1c133fe79998",
      "kind": "transparent"
    },
    {
      "address": "0x95c0D4E4922fc1D8F4DFD35c3a54Bc56a0Feb0Fc",
      "txHash": "0xcb2add52a8afaa2268f7c04c14d1c082352452213a62d184ebf1dfc6a33f91e4",
      "kind": "transparent"
    },
    {
      "address": "0xFd9986b72050279B60aea6A03Ef2f613aA5887bb",
      "txHash": "0x5df92cfcc2addb683f454ba3c67df01b53b7292e6f51fe7d115004ed7b863594",
      "kind": "transparent"
    },
    {
      "address": "0xee3F9A8cFAC1C8960eB3CC28f08d4998B8801F11",
      "txHash": "0x8ea58f651f610819e4bb0d7b193b36a86bffe045efef46ba513cf9329b45f4d7",
      "kind": "transparent"
    },
    {
      "address": "0xE1206b2cc36b868146e4AC48B28C504Ca04d69E3",
      "txHash": "0xac844a7eb1aa445cdbc5a459b9812ac148b4a5174b39a520f2b4b967bce80f36",
      "kind": "transparent"
    },
    {
      "address": "0xE5267785F4Fc0c8861eFD2d27f15859ecE091537",
      "txHash": "0x30ba6f60bdbaa873ca1de394590b5c93b6718a3053bbbfcec4b038c33dc606e9",
      "kind": "transparent"
    },
    {
      "address": "0x0f771503E071FB7930D923D5f9bF0263a22F7691",
      "txHash": "0x78556a5bfa45579c6eb16fe68f0a73c44ac37d39aa5dcf1b03c606b804c1bfff",
      "kind": "transparent"
    },
    {
      "address": "0x4f145ce0C3D36433f411C5686c053F9683FC4715",
      "txHash": "0xdab7e49285a325f940782d9aeac0a3b30e218c35f70abf094e07226b008cb25c",
      "kind": "transparent"
    },
    {
      "address": "0xD07162A12C386e53f55c9cA8014d0E26b252dEC9",
      "txHash": "0x5d6fb48a40c5fd488b09d5f97011d48b9a18b54c7d1d0eabe318daf0e0680bac",
      "kind": "transparent"
    },
    {
      "address": "0xA93eAd2b82B47d0349dADe5a41237508E7aE5337",
      "txHash": "0x049c2aa2b3a2a9e1c7d92b597a73703765167feabc73fdc3a15ff2aa39b2d4bd",
      "kind": "transparent"
    },
    {
      "address": "0x725B3De7e6f6C6212C19e467F6Aa1d7Cae32cd1E",
      "txHash": "0x2b3dfc22aef95b27bf0ae7380c88df3ac3012bfcdc435e25559e49369487d4da",
      "kind": "transparent"
    },
    {
      "address": "0x1F7cf0350D181eB919E95a6A2c228a802723452E",
      "txHash": "0x4f98ceb10b118fee123850162b4be873c1d64c1861caa4b2cddd1b673eacf783",
      "kind": "transparent"
    },
    {
      "address": "0x8381FaeAf1eCCC2F74Ff62AE2C55C7Af79Bb4Cc0",
      "txHash": "0xe88d0ef5a7ac1c1c28d3e178027394572857b76dffae565068fdd25851daad33",
      "kind": "transparent"
    },
    {
      "address": "0xce87AE2f770600Ef85f6e02D3eE435Ba08876576",
      "txHash": "0x234bdd6463611339978b8ac7a78b3a0619cb77cfa2605f0ac252b2b806a72f89",
      "kind": "transparent"
    },
    {
      "address": "0x8dac313f65Ce99Db05dA1f44079c0ED8212255E7",
      "txHash": "0x6eed6f5707b911b201d269b42723101253b59a16214ca0f9e35895538e8c4ef0",
      "kind": "transparent"
    },
    {
      "address": "0x96a3f833A91685B9307E9157275c3E33A58Feb08",
      "txHash": "0xf6ec5251e22af228e4771aca9a490891c599446cd86652567cb10031ddb1eb77",
      "kind": "transparent"
    },
    {
      "address": "0x87285395910a53F1D1A2eA2Ec0d1b484452D1D7D",
      "txHash": "0x7edced0e102b912f3aa6a94a0211d6560781c58999ce05a0d00c5803b5154bde",
      "kind": "transparent"
    },
    {
      "address": "0xAC9144e882E3BAAA5F25A3C1479F95Ce740E0BDc",
      "txHash": "0x34f4e11c93f67d59ad1e93bc77e3c004fa49f250f3373c4b371cd971621a74ed",
      "kind": "transparent"
    },
    {
      "address": "0xF236ECD75b54a70A8917cdA084348ED4A2D9dE69",
      "txHash": "0x69ae5cfb80408d2e2e38384bfa1bc3c2309e2e66bdb160f0d04a0664937f090f",
      "kind": "transparent"
    },
    {
      "address": "0x3433F448a0dAd5e96A94A07187dd5248d1d4dF59",
      "txHash": "0x0f697fc344aa44de98b23384f78d758cff314527f2645e5a2dc572e1f63eeda0",
      "kind": "transparent"
    },
    {
      "address": "0x7EC6b20D28CE6A38F26F481daDDA0b2F4FB19E35",
      "txHash": "0xa61ca3ce427ac2c075e6575c35c513e8ed3673c052698ae96d63521dd5311beb",
      "kind": "transparent"
    },
    {
      "address": "0xE352e2CDa637E019a21484A9baB9f661c61ef325",
      "txHash": "0x1dbcca8a7efe7f995d9ee06eff8f417f55407b42517e64d1d03c6b01878c5ef3",
      "kind": "transparent"
    },
    {
      "address": "0x7bF70Db0F1b36C499953B41aD9C29616fb4C9424",
      "txHash": "0xf7b7660b61e7d2fbb63c1ea4e7e68843c5ce804d436536fad065af64f07397e1",
      "kind": "transparent"
    },
    {
      "address": "0xfbECDcD5A6c149C4580c3A251943999915238EA2",
      "txHash": "0x7d79253de76c03be9241ed500ff82931891395411dead3a277baffb50f2e817e",
      "kind": "transparent"
    },
    {
      "address": "0xEaC2d24465CEa40e9c5A5c9773126868197e4c39",
      "txHash": "0x6fc310e3b2c75b01c9b9b358f36e1167c3743b1096bca27643aaf334632292ca",
      "kind": "transparent"
    },
    {
      "address": "0x3d5eD57e3e6C0cAFE5265533940851A8409439d9",
      "txHash": "0xefb1c764c6f7144be5d491beb0b5360984cb491274d72fdbc1050d71ec65322e",
      "kind": "transparent"
    },
    {
      "address": "0x8AB3f4Fddba4B4BfCa72ac8D3A96327E29bB379F",
      "txHash": "0xba5974ad26ca07decec32f4ebfb9c601b9fab8090d0ffd99b252372508d9358d",
      "kind": "transparent"
    },
    {
      "address": "0x54679B5A4F605695c2Ac95782B823bb0AE40c231",
      "txHash": "0x2e49ad1d0e8709fc1af0cb297ec1dc4ca1a5c55569dea339db8ea050c51aaa30",
      "kind": "transparent"
    },
    {
      "address": "0x79117e354828278F32E1b2Ee7C0233AD170899ea",
      "txHash": "0xa42fa998c64cf9d775426ad2ea02a11cae8f844ebb6407efc15abc0606729691",
      "kind": "transparent"
    },
    {
      "address": "0x383Cc6FEDFfB290fc4b93E4eb2857992c3295A34",
      "txHash": "0x99df7172fb971bce7104b1ec124bb0c0e65b56641b1204ca123d10381c78e9b0",
      "kind": "transparent"
    },
    {
      "address": "0x82f50A6658FC8fafAd9ECF8Ca7C14b2A102dAC2D",
      "txHash": "0xd46502abb69ca9486200db55f4088d68f81048c679b8d2175536894295a68704",
      "kind": "transparent"
    },
    {
      "address": "0x58E7292B53BdeA98da01BA4D4497661A0E1435ee",
      "txHash": "0x4cd3fc2f195b53383a1a42092f61ffe27ee56c138a992c884d751bca3da973a6",
      "kind": "transparent"
    },
    {
      "address": "0x6ee58b778108f9A077310050f63336C33908dbbf",
      "txHash": "0xdd3bcf20ca7e54e184c50b3474980698486be6915c3a2831c3641cc79ee72b06",
      "kind": "transparent"
    },
    {
      "address": "0x42983eA14048b84B0eaA677A9490555EB5298f1b",
      "txHash": "0x59afe1ec9020c8d55596baae48477949ea50b853d13feb7b6405414210aef5f7",
      "kind": "transparent"
    },
    {
      "address": "0x3547B72040dF9D0356832C7Ddc883d6B5f587a47",
      "txHash": "0xaddd52b148f5644659c1472f87137d254e2452363072c694cf4b6e548671d7a5",
      "kind": "transparent"
    },
    {
      "address": "0x3Da4805Fe636Eb5239165D21e483909D32e42bCF",
      "txHash": "0xfca8f4c6befef72fca72e5d0fe6f16e477eb5e2e3d33353a957d3fb844476e3f",
      "kind": "transparent"
    },
    {
      "address": "0xcF7fef47BcF0001E3F5DAd59a212A7775107B996",
      "txHash": "0x0eb1e5455a4d7a659456fc90fd789f00918b3da8bd8a714c62022fb8e4ecaeef",
      "kind": "transparent"
    },
    {
      "address": "0x5e0A2938726DA409085bf889199608221af36214",
      "txHash": "0x7242c8be58dd735dbd474c25b44b3db41bfd9359a714529e37297e73f6e002bb",
      "kind": "transparent"
    },
    {
      "address": "0x9bb52784c56cD2fAe99E2212aAe7D2A1fd9D3E50",
      "txHash": "0x9828666efb25947edc7c5020bd87280227312b155dda1b07b916d57b65e5ba98",
      "kind": "transparent"
    },
    {
      "address": "0x8c8Cb5D5e7359aa84CE0cd5e6e390a4Fa3600df7",
      "txHash": "0x66d00c264e914a99bbd3d6d2fb91eb6dc7cbca5b824fa0c7bcfc74ad4b78c091",
      "kind": "transparent"
    },
    {
      "address": "0x8122eD02F56da765f85f26F9169a9490dB34428a",
      "txHash": "0x3b7ac2dcb41fd423196611c67c3c80e9f3414582b0794329b9b79bf273e02817",
      "kind": "transparent"
    },
    {
      "address": "0x0E11591FB6d80687E8633133f59C57b1247c76ff",
      "txHash": "0xab8f9b516cdfd911f70d2123fe0a0d982191159cb050b1f7470c0f8fdb3f783d",
      "kind": "transparent"
    },
    {
      "address": "0xeD466A71ACE317EBdc7158c6595c8893e3e7acAC",
      "txHash": "0xd516802507731c952f64d1867ab25b51414089c41e1b7d761c9b720d1c86490f",
      "kind": "transparent"
    },
    {
      "address": "0x0E606DcFabA681a46BCDd33A2Ee0A00aBc37ce99",
      "txHash": "0xc61a266aeb7178af2e799d94c2e9100be74ad8719a1f225746958cca4c18608e",
      "kind": "transparent"
    },
    {
      "address": "0x44BE1c2a2A48A147F16BB62f8d1ceD6cda4BE783",
      "txHash": "0x8b8ef1de3ca27f0662cf501daa12a720df5dc45f9279c77a54567ec26e18eb12",
      "kind": "transparent"
    },
    {
      "address": "0x4838D22f8dc5D11Da7172DEe9e6da90Cf9f336e3",
      "txHash": "0x7a690523fd921910eef037fcc5a00db0b87be066e3925962c8e9dacca511cceb",
      "kind": "transparent"
    },
    {
      "address": "0x27474C1c51F630D44b84d317D2Bfc76ae93eFECc",
      "txHash": "0x7b610a3291382ef9907e446a3ed86c4aceb135ebfc11c7682d1fd3cd020fa4da",
      "kind": "transparent"
    },
    {
      "address": "0xEcdE9a7E7D3cd2b7A9d74d130C5E0b1e9410706C",
      "txHash": "0x05c9e2ea33ee4c7863d49961100434a209266b802120b8fee3457732d8daad65",
      "kind": "transparent"
    },
    {
      "address": "0x6652BafbB31cd5312260FF8FC479e2778866f1DD",
      "txHash": "0xb2b3e57a250302f6930614827cfe73cdceb48da62f35831a182036b9410f1534",
      "kind": "transparent"
    },
    {
      "address": "0x0D5D18CD204B75F7F1f10BE73a0cb8C2bB2bbD60",
      "txHash": "0xb381fc8fbbe35df1bfaeddcabff23d83e5fc18d7a681d7d19c58daf25de4def6",
      "kind": "transparent"
    },
    {
      "address": "0x49B7C0d60105A36fEa0074f41Df2cA0e8EB82C9E",
      "txHash": "0xaa589759e61fa986ede8421e8784397899cc94f20905cace2e32c603d4ca1b7f",
      "kind": "transparent"
    },
    {
      "address": "0x1312bf318f29158925856303eD5cA3515c4eff1d",
      "txHash": "0xafa19eee3a120b068889f86faf0c9cc904e912328af71c2f79ceb7ebae134287",
      "kind": "transparent"
    },
    {
      "address": "0x4fc7Fb627A85834bDF0c6AB279392d91Ad343a33",
      "txHash": "0x987c346f7b32b25e08508d7051200e7cc51db1c5f06f68e099bba636f4b818ab",
      "kind": "transparent"
    },
    {
      "address": "0xcB301E479775838191403C5D11D13aF5166ef4D8",
      "txHash": "0x184e79b30b34d30777f32ad081d3ad680b1962b534f09d66a5649fe4c2fa797b",
      "kind": "transparent"
    },
    {
      "address": "0x8a28E86bcdf461C420fCd81644CFb4663624BFAA",
      "txHash": "0xae4c07683c24fe5b50c32fdcc9bdb865dd899fd6ef159d88eb83fa7441a751aa",
      "kind": "transparent"
    },
    {
      "address": "0x79e9F0ea365f29E23e66adFC2d8954C907AeE320",
      "txHash": "0xedd152d4355a088b9c637732008a6dae08522e34a7daa16d0513080e4ca046b0",
      "kind": "transparent"
    },
    {
      "address": "0x6C11a8bB901cbbD394b499daE65496bCf6159f84",
      "txHash": "0xf7446f2634190ce22d378c7e4863630f10087d204635368e510d05678f548915",
      "kind": "transparent"
    },
    {
      "address": "0x2A2120445dE1Bd190d89d4B9BBBBE1272194Ceb6",
      "txHash": "0xe8cb5b2bf8090f8cf9224d161c1926a5048b16bef3a911b56b1a09ac4577f66d",
      "kind": "transparent"
    },
    {
      "address": "0x26267d209Caf2Cdb2e8ad15b91B1B97B0357d881",
      "txHash": "0x9c7a9f048d3e02f7e5a238722f5583a6f42d5284d2bb9ab4356fc14c8fb59ed4",
      "kind": "transparent"
    },
    {
      "address": "0x5Acd3D68b61BA0Edde286e2C35e15aE0bce3084c",
      "txHash": "0x58b397d38b470d847a13bf02e80b0a599139eed0b33d26908be42217cf736b32",
      "kind": "transparent"
    },
    {
      "address": "0xAD4514AC69DF3C0d3B68D46A589eB5a1D043419E",
      "txHash": "0xb0133540b83f421fb907d9485558e59f134e6722264e41d8ccf061d3002a99e6",
      "kind": "transparent"
    },
    {
      "address": "0x1d3Da9D20a775D1Ef69AE9a106578c2E54b5fc63",
      "txHash": "0x4a7c60f59e5f426d6cb6207473a187ce732fe336bcb5a8da990f38567ec7a5a4",
      "kind": "transparent"
    },
    {
      "address": "0x2d62F6d6D8c84CdA1E0eE76fF580204e306E4715",
      "txHash": "0xc37da3ed211da0d712e2abcaed26f93af9cabb0698b2bbec9b240efbd237523a",
      "kind": "transparent"
    },
    {
      "address": "0xC46eD8b3e08e8Bb8071D85af95990BE079dBC132",
      "txHash": "0x6e084faa5ad5074f1dd047360a4fbe749cb4409e80f056c56ff81dd4e4b9049f",
      "kind": "transparent"
    },
    {
      "address": "0x3D0006809BD6663A4f733A8201fd0F968912E095",
      "txHash": "0x128fc0151a16d64850483cfb4af97c9664e55d9d109be2d1b879382e34701755",
      "kind": "transparent"
    },
    {
      "address": "0x606c3f13515E76053B1Dfd922A6497c1bC132516",
      "txHash": "0x2dbdeebdcbb0b78672ed1fe6d60b94d555537b9884345449cba26f8d2ba85a10",
      "kind": "transparent"
    },
    {
      "address": "0xF56cFdF18EeFdC2Fb6fC736c35E9B6A06052C057",
      "txHash": "0x8d038306260fbe358523958efa4d303e99f08a8d99ab6978cc90cb213e332b56",
      "kind": "transparent"
    },
    {
      "address": "0x2039664186341B911B9De2835C41fB9Dcb9e57c4",
      "txHash": "0x3c6e02281dc121b41ab7182c09ea539399b8d4669bbb58d17333edfcd969edef",
      "kind": "transparent"
    },
    {
      "address": "0xeF513fe71555F0d66EFBb5883b0bFc867018F897",
      "txHash": "0xcf28abd5dec3443e4a25ae979b4b53ed2c0f5073645755bcff380a0a7d3eb4fd",
      "kind": "transparent"
    },
    {
      "address": "0x1d5AFd3592B4156C628b8cDAc40118d132100C01",
      "txHash": "0x6e0008a6feb1d31fc585971296f437ee8b59ec13c7d366aaee36616861a0b9b4",
      "kind": "transparent"
    },
    {
      "address": "0x084A760addc7734c3aCEFdF9EE35270D1b1f3926",
      "txHash": "0x4425e23a2d79cf7aca3bb50590ef3c3dab8fb72e0e3cec9ed8ab346ffc00f546",
      "kind": "transparent"
    },
    {
      "address": "0x8b031ce518DDD056fa4bCdfB636c392489eF8511",
      "txHash": "0xc9b5cc7b10ee6441ce5ca5cf8a59c7ca6bc908bca328bd8d0518b131e0f3604f",
      "kind": "transparent"
    },
    {
      "address": "0xE4C10bC0b47F097d9339E1ED0493dC37B79D85f7",
      "txHash": "0x60a8bf032c23fdabc321448baccb7bc4488d4d71f57034e3aad40dbcdf6afe51",
      "kind": "transparent"
    },
    {
      "address": "0x99875B5b97f61DA21f5dae645dc7c35fA6BEDF2e",
      "txHash": "0x34f44dee7b778479800542b4fba3266eaba9db2892e44eb53dfd51a3ffba97da",
      "kind": "transparent"
    },
    {
      "address": "0x2ae166dC4a710F24fFCf4F37C7EAb36DAF017d76",
      "txHash": "0xba6ef774a76578b613f97ceee7193590ecf5a468db8bce103cbcbd8e9fd38001",
      "kind": "transparent"
    },
    {
      "address": "0xa05a3Fd9974232F5877d3fb247cC876994b1134B",
      "txHash": "0xf24c2eebe4a1b72274c0ff16ef6dcabe815d0f3667944b03a6e228cc9bf1ac7b",
      "kind": "transparent"
    },
    {
      "address": "0xc038B92BDd49cbd6FB07387d76DA26503dAA1366",
      "txHash": "0x5ff2d189fab3d03ce1b2e48802a191aa2b91a1c1b1cf21dba8247f59d8153ac2",
      "kind": "transparent"
    },
    {
      "address": "0x4F40a28AF856C4FF8d1073b08Cb99E4c3b7adc94",
      "txHash": "0x6539d5ca92a6ff93354115c4a8851afc000b7f171f4e492a2cc2dc2cdceb6835",
      "kind": "transparent"
    },
    {
      "address": "0xb3347F226AB1BE0E4b453339b9CDd95553b082f2",
      "txHash": "0xd68be0c3f4a238766784a8fd84bb0227fbe0e31132477f1748053c98e6d3a52d",
      "kind": "transparent"
    },
    {
      "address": "0x9BF7c751Ff844E251705E720e9879D6122E96376",
      "txHash": "0xf7c95f731bd5ca880f9d19393cf07a5c26fb7994c2a7be96719eea8e31361156",
      "kind": "transparent"
    },
    {
      "address": "0x880B87111EE236Fa28C5373deeb4BB50C3606006",
      "txHash": "0x3ce9e1c8276508e4d79dd5db82c41d4fa552a3f9b37cb8f844e12c11e5298e2e",
      "kind": "transparent"
    },
    {
      "address": "0xb620789d076BE9393d5D1A76B1E878A2d8b93F42",
      "txHash": "0xbae520caec87e632d45b5df181b763f50933512f2ba573a8c842c3176af31c86",
      "kind": "transparent"
    },
    {
      "address": "0x00f3c340d980C347B5a48E966B3B4fA7ce70039d",
      "txHash": "0xa19d5c6e9f320b9b1a783bf7e5af693c4da98318909077918769ff2751bec8a4",
      "kind": "transparent"
    },
    {
      "address": "0x85fD1Ea5EDa1288d213057Ce5139B936BB667fd9",
      "txHash": "0x242d0b62a58795d464014d581e68772f97d5e7448620dd97fe1805acbfd5f8da",
      "kind": "transparent"
    },
    {
      "address": "0x246CF37582fF245f1FFdC96DeA388A006d619BAC",
      "txHash": "0x85359dfae118373e4027ad6646961a0f9b4ec0157c53c879ee5984c18438c8a2",
      "kind": "transparent"
    },
    {
      "address": "0x9BD97a14821a6AA5FfFb48b7D276E52B9fa3Fe98",
      "txHash": "0x30797a1468c7827afca89577ade322b87c1847ce15f2777798562631999431be",
      "kind": "transparent"
    },
    {
      "address": "0xaDF819bC159f7e0A6F98a48A2C36BB09c1018a0A",
      "txHash": "0xa80d2c161b215aea88108ea55ca25a5dc84f0cd1059a61295627d585147cd298",
      "kind": "transparent"
    },
    {
      "address": "0x31444DC60f98b06F6b7f3dc908dD520792cA9617",
      "txHash": "0xa0ef5a946884b1b1b0c30e3271708541d9235354a925ab90edbfb98674c87c34",
      "kind": "transparent"
    },
    {
      "address": "0x5DbeB37ADBF28505896b1F4F2880A45903c89630",
      "txHash": "0x50f07ce9bb8c8cf1d6de3cd37f66ec065c3dcb34bbafa6846de6f63a038fb2c5",
      "kind": "transparent"
    },
    {
      "address": "0x4B074b7f8C2CF981B772EC1c00B8dfe56B38e62A",
      "txHash": "0x0b70145c020f74550ea757d045349a4d18c06674bb3ff66896c78c1fb50973d6",
      "kind": "transparent"
    },
    {
      "address": "0x59c305a4A59AaE31120f6f2D73Ceb7093Fdc6cB1",
      "txHash": "0x48b90a6dcd40ac848206e6eed4e24fb3bf190e5a27e95c1b13563a137983a187",
      "kind": "transparent"
    },
    {
      "address": "0x6B1574d378b297647e50481Ff2acf7412086B4e5",
      "txHash": "0x2d32923e441bc616741249bfcff1985247c4970cca4ea5bd0d921ec8c8bb89bf",
      "kind": "transparent"
    },
    {
      "address": "0xf32BA2aBB1e16Db341B55c2Fc0010037eEd8f274",
      "txHash": "0x0011fefc3eec546a42eb0ba5dda52ff3f3b7c845673ff6030aafd06a6e8b72cc",
      "kind": "transparent"
    },
    {
      "address": "0x58687A7FAF8D94652A21C50Ca54fC66212BccA23",
      "txHash": "0x954ea1b78dd9e2db74dae2971f717531f3a75a6f681ec6aaf32ecda6740f40d0",
      "kind": "transparent"
    },
    {
      "address": "0x317ad63223c7d3DEA3ac011b0B2B5Ae7E569859e",
      "txHash": "0xf2fbc1d425fbbb20fcab2da5da0cd32e566d21ba35aa9f8a78e147fef42ca277",
      "kind": "transparent"
    },
    {
      "address": "0xaC2EcaaCc07d8E4bbC640Ef8f94833D01F2bef72",
      "txHash": "0x7ed442b3d81cf083e3ce23ec61540ec3b2e52ba92acc278abd7c2295fe45f5e8",
      "kind": "transparent"
    },
    {
      "address": "0xE90792768Ab5f26C74B573c8Acd426920a2c0b9f",
      "txHash": "0xc051cbbfaf902c13f0818415d65009fd0827d36466bd488d3480ef243c9c34fe",
      "kind": "transparent"
    },
    {
      "address": "0x44eD05dE30D51020bd6e6728cCF0D425052e36BA",
      "txHash": "0xa177338176d29c12c2b61a419010cf58be5f238c52c498ef2c4802a742e45879",
      "kind": "transparent"
    },
    {
      "address": "0x46023c80f7EAB6b28Cb57b9B80077F43B2a9bCB3",
      "txHash": "0xaf32816b2f0a1f6c29786b79d719c3ac627967cbac0597d82b8d828a1087bd39",
      "kind": "transparent"
    },
    {
      "address": "0xAb3CBBB2aB5Be194616b56BCa1F17e661cBF7B7E",
      "txHash": "0x9486f818cae785b8fddba8d3eee15ededa0d0442e60cb0babf7b55535e6657a4",
      "kind": "transparent"
    },
    {
      "address": "0x97c2289D512a8DD89386FE642C385DccCCfB9af2",
      "txHash": "0x6ddcff6b2c0c2259c7a08ffe5701cf8142e03e23b3d9387d3713a17789f5ff49",
      "kind": "transparent"
    },
    {
      "address": "0x969d83D6366f42C81f3111Ce894e6EA8F3048d2e",
      "txHash": "0xbdccec7759f803142d55183cb072f96ba0a668c9295194358697ee2cccf94d07",
      "kind": "transparent"
    },
    {
      "address": "0x6f55CaA664015d7465380558C86d0eD545A5F79F",
      "txHash": "0xfa5f4865a29c6a4d63f119a896fab0f1f895ad739ff4abed5bf81267bb8fb858",
      "kind": "transparent"
    },
    {
      "address": "0xD741dD2A4422f85DfcbF8a5BDBBdB16AD83C5c52",
      "txHash": "0xecd849d4eab9a285af425c7b29ec5f081499d2d6574c7acdf07829a6b63ab76e",
      "kind": "transparent"
    },
    {
      "address": "0xb79d56a0dA0315D419F09756774598BB7B865C2c",
      "txHash": "0x41c0c7f1c0e565a658ffee504168aaf8cd5ddfb481a3ff81d3eee3b9fe4ac6b1",
      "kind": "transparent"
    },
    {
      "address": "0x9059e7Fa78a68ff26A26b3e44720cA43a5B245Bf",
      "txHash": "0x8f0c8568061a679c46081f3cc0a0e3c8b22e817e8fd6083c3f717d3c2ac94bc6",
      "kind": "transparent"
    },
    {
      "address": "0x6F4Ad5AaCa133C4c0CcECBFFE15Ebc5e33623da1",
      "txHash": "0xcf6ff2f447e7b87b06b49ac3a6d3494448c16ee80dbcbfb48fedb216c6aab783",
      "kind": "transparent"
    },
    {
      "address": "0xcd08661B0A1C12d80c8225F8313a4AcB358c25Dc",
      "txHash": "0x6c51b2a598fbc61231b5ac345f1f8d6068178c3aa3af29c6d96e56db641ad4f1",
      "kind": "transparent"
    },
    {
      "address": "0xf44160CaDbFcAC7f3Be4299aE68af89a79233190",
      "txHash": "0x4c39591e0e0e8554047851ae35c293b260be45f376cb564c2d36087953febe2f",
      "kind": "transparent"
    },
    {
      "address": "0xa7E95cfADEdB996EBEd54D05e5028e55F18A5CC4",
      "txHash": "0xf1340c5930921b826a48b746963516fe2b7bd863d48f7b42c75d958bf5b5ab6f",
      "kind": "transparent"
    },
    {
      "address": "0xb142E7FE2C80C4582c10073b08F0384c6E04D0D1",
      "txHash": "0x7e404bfb52e613643ba443edb55025e2397875af8669341617f9f3e6b122ae30",
      "kind": "transparent"
    },
    {
      "address": "0x3F9951F1E8BBb64ae13B61b29d38b9096B80A811",
      "txHash": "0x663760ade6e3732a93f4ad8deb89fcd4d85fec1842246ed39e52d51b2ca9b129",
      "kind": "transparent"
    },
    {
      "address": "0x79E3642757c0806C3d0EA93871D9a035C74596C0",
      "txHash": "0x31bcbe735b47b067c67eb4d672bbf375da9603992d7be50b7bfa83a6d7fff858",
      "kind": "transparent"
    },
    {
      "address": "0x81B96069a602a3177d7123D6697E73388d171a10",
      "txHash": "0xa6b191bafa04035e1ae6298b33a1737947e36c3fa7054b534dd0ab223ac35365",
      "kind": "transparent"
    },
    {
      "address": "0xb2e1E90cd2D4E26aaae8A34eFf37ef8D91b39298",
      "txHash": "0x0e5d2dcd77a37248b669eb0f3b3f35114014eccd032cfda549c077ec12d07639",
      "kind": "transparent"
    },
    {
      "address": "0x3Af37BC79751055dB6315774845bE19Eb375C554",
      "txHash": "0xcb0793540de58e5f656b12fac437e1eb636081b4595a3595213d129d19c3a39e",
      "kind": "transparent"
    },
    {
      "address": "0x88c6F87d8D7253CDb5AA44B14dC34E214079f4b8",
      "txHash": "0xabff0ab036c80621482dd1ae3974ab364641e39083a3371f1c6f494e17ba64bb",
      "kind": "transparent"
    },
    {
      "address": "0xedcb4E13bD318b42B41D34D0c6dB56F07d68069B",
      "txHash": "0xd0467128e3ac42700f48cf9f682f9cdc19ec3e601cdc0216263077c9e4223077",
      "kind": "transparent"
    },
    {
      "address": "0x165dc9164fC6415a7E1155D9bC2CA33CF591B43d",
      "txHash": "0x1e39c1dcf48882e7ae7096b9d1ef29aebfd632407a8b857b0abd7209fa9f833c",
      "kind": "transparent"
    },
    {
      "address": "0xDbF5CC53AB8856B728bCCc6C2A8B7a325Ec4EC7a",
      "txHash": "0xcb5ddd5c912b114377dd5da0aceedb32e9039ccd3774c36fe72d51faebe34340",
      "kind": "transparent"
    },
    {
      "address": "0xfd3fE77F15f76dDa5cd1b53723bfb29c06fD12b8",
      "txHash": "0xd5ff283a289e58008124e35c77707f375608d9ed658fe326ff6c67c459b7d525",
      "kind": "transparent"
    },
    {
      "address": "0xAF24869C47Ef3E0c68C3FC6d0072091DdaA90FD6",
      "txHash": "0x0ba14314753029a4a4bfb349e61e0e43a64438d71c63b6871f7c577d5b0a10bd",
      "kind": "transparent"
    },
    {
      "address": "0x13C177f1B387F93c86CeBf8f29F6F60726d870BE",
      "txHash": "0xd6bf455f2a8a721461cc969bb390019542ad9df8d6a8eb46030e9d46f0d28855",
      "kind": "transparent"
    },
    {
      "address": "0xE91805054dFC8C25b8633B84F72B40Ae8DFC316C",
      "txHash": "0x27b69077e43c90146347f262714a51c51905faad10ce1e1f5bab52cf147f5ec9",
      "kind": "transparent"
    },
    {
      "address": "0xb475ee1818494Ac454f9c46d26B2EB9649c4b970",
      "txHash": "0xf65453bdb975e09358f3a9eb83677a14401bbc3b77ec0ad7d5f3c05681729c44",
      "kind": "transparent"
    },
    {
      "address": "0xA774f0D68f0DB60c5cC2E0a06b6f17Ce6a8cd541",
      "txHash": "0x89d9dc838f331824674ba80abbd1790dbd8947c9b893b214b4c46276bbe2998e",
      "kind": "transparent"
    },
    {
      "address": "0x4C36b7d119697A54419a01Ab90C8e5C1c86E928c",
      "txHash": "0x39e02d1eaea9eb50bdd9eff8214afbcc8c6f97d5008399c1c11135560388f69a",
      "kind": "transparent"
    },
    {
      "address": "0xECA7c7D88E6B836a27dA60Ec65955Be0615a2E28",
      "txHash": "0x733812819506ae0c638c97ec99a484b41aafe766f78fd4f5c86598530ba7b54b",
      "kind": "transparent"
    },
    {
      "address": "0x9EF2A493cf8efca8870437E00c6D601072cfD42f",
      "txHash": "0x00024ebc72b4490fc3e1aa9e0259ea8038f912fd5d89f5d59afe2b47dc9307d5",
      "kind": "transparent"
    },
    {
      "address": "0xc9d4D8B6693fDDBF53fe94B6bc17BB1Ee12840b1",
      "txHash": "0x0f3d4f52ae1c23389a05cdbd36cb8ee45f9e0b1325576c7b9c3527de0f586935",
      "kind": "transparent"
    },
    {
      "address": "0x1250314C2035C0Dac338c6093fB6f5F530D9c19e",
      "txHash": "0x82757b8de801d1d65cfb5b7641cdd2eb7ba7860e0b8d0b00c26bc8116210e470",
      "kind": "transparent"
    },
    {
      "address": "0x819DC56ACF360F89B46690Bd7A594A5d58aA1bc9",
      "txHash": "0xa29e13f61f6b0f4f49013623fe2e803152f722f6ef967cb55b2ba3b602866be5",
      "kind": "transparent"
    },
    {
      "address": "0x391061918f8018D49ad2bD1f1b9db0bA8ffca0EB",
      "txHash": "0x48c1c620236727e493a98f7283e739bb9c1d051c3e491449a166184caac9a7ec",
      "kind": "transparent"
    },
    {
      "address": "0xF040ca51670040ef6A83996ADA1303850AC7a36D",
      "txHash": "0xc90ac7da2844a0e0a1b8e8df11e34c6c0ff6d979d08a5fad0932c2463fcb9466",
      "kind": "transparent"
    },
    {
      "address": "0x4E48E42d5d99f11d1957cEF86675D21d56C6Db37",
      "txHash": "0x738d2193aefffc3e4c1b5e77b62690761ec3580eb78f65c540ecb37fb5afbc2f",
      "kind": "transparent"
    },
    {
      "address": "0x99032eC592650179B3Ae9a55c97e36F7A119B1ff",
      "txHash": "0x99155239fccc5c6033de30c68edb28c37f2eb2d2789d106ebc2f2de37588ef53",
      "kind": "transparent"
    },
    {
      "address": "0x964dBc7EEC54FF63404049E1c105E7c1a7Eeedd0",
      "txHash": "0x5bf989659132aeaf919d625093a18ce14eab2d590b2bb685a78dd0bbfa708748",
      "kind": "transparent"
    },
    {
      "address": "0x505c6D7f8B019CC39d785311921f9c7769f19e42",
      "txHash": "0xb60e36fc4fccddfeade49bafbf3b7304b424899140120ad1ede1ffc6beb6b10d",
      "kind": "transparent"
    },
    {
      "address": "0x2A7d5CA9115CF286a88C1715EAD160FdD048A149",
      "txHash": "0xc5d8bba473d99650fd60b93fe56ac447d265619ffee204a627057320d1e9f86c",
      "kind": "transparent"
    },
    {
      "address": "0x773AB18a347C63F1876045225065c21f8868A839",
      "txHash": "0x373efbb28f744edaadcda6f606381db1d10db9ed1438c7e1298e3cf72fa50d85",
      "kind": "transparent"
    },
    {
      "address": "0x3dD561D5DC77BC9ED697C3a70A64Dc1831fD3f7D",
      "txHash": "0x4cd089450aecd33e3aee5fe3914650ec479bc7ca537f93703a10f7301f98f40b",
      "kind": "transparent"
    },
    {
      "address": "0x5a67eD65Ef7A08D7B480001F97Fa0C5f494b1459",
      "txHash": "0x922fc0ad456ee99718b4198c429fa470337886df40065d332c06a14fcf7fd586",
      "kind": "transparent"
    },
    {
      "address": "0x4EA1DF87Aa2F362781392D5cA2dD64AA0F966394",
      "txHash": "0xaa997894baba8b6af1477221ff7051966be0775a2e27dc21ac90fac34956214e",
      "kind": "transparent"
    },
    {
      "address": "0xFEcA3fbd493d800784e2dc47a6fC80Ac8925B928",
      "txHash": "0x453e540961ea6e1fcd840dcc6aae574726d3da0fff4c6204aebd52c7f6178de7",
      "kind": "transparent"
    },
    {
      "address": "0x950b1C98b5d85f70e52b4D88cC3f0bb34DaBB28D",
      "txHash": "0x3818a8ae6974059c3b90a5aa7150082eecb4b74790054a73b79f486f034c33a1",
      "kind": "transparent"
    },
    {
      "address": "0x6533d87719E758B0303160494fC5f353Dce2bF43",
      "txHash": "0xf64d774a6ec86e66d2f3974ab34ab3e20767e6b4aa951ef303c7e08998f09c1c",
      "kind": "transparent"
    },
    {
      "address": "0x0980a0E679dCa8b11A72bC7e5e0c94159B7B6323",
      "txHash": "0x01848b038ccc858adf9b482ff4b06f9bb46fee82f9faf4656bd7c06a2289313a",
      "kind": "transparent"
    },
    {
      "address": "0xA75262Ac0d7D834B889906e36171250570b899CE",
      "txHash": "0x3d6152c7ea12b3d16d5da8263e7ddb611435b13b6be2ad5c7950ac332386bf69",
      "kind": "transparent"
    },
    {
      "address": "0x54D48278A995eD60Ef072D7684373ae3418D6a67",
      "txHash": "0x16bba750e8a41ff588646f45eafc604a15e40e5dedee93fad8b7c2aa154f3c5f",
      "kind": "transparent"
    },
    {
      "address": "0xD1a063d03921C89f07FC04C483fEb174D0be5Ac8",
      "txHash": "0x8c27a57863abeb4a8572376878c44546c626d9389d595a29ba5992b89192c9f3",
      "kind": "transparent"
    },
    {
      "address": "0x7a00e5Ce2A8fa3b7cfCc172988a580a6A0028834",
      "txHash": "0xe478d2a82e676be2c1834fdcc95710c3988c3ae359e6f7bdd5f656b6f204d880",
      "kind": "transparent"
    },
    {
      "address": "0x0373b73C92832e9a0Ad58914B16729716d9406c7",
      "txHash": "0xfa1f008ebe5b6219a25542b2c9b72823c517ad5df5d4ea80696aebf6e682b20d",
      "kind": "transparent"
    },
    {
      "address": "0x3a985468AF141Bd2814DC2fD197cDF0Ddd7Cd5Ee",
      "txHash": "0xe254a00e58ee56fc495794f12d7955340ddf28d8ac619f0c5b1fe9e1e39e16fa",
      "kind": "transparent"
    },
    {
      "address": "0x320A4265b98f3Fd1081f2728DCd78082E4d53265",
      "txHash": "0xed961616278381a16e0198b2bea807865aae53191166f2008b9ec0378df17f57",
      "kind": "transparent"
    },
    {
      "address": "0x9E2929Be49954f9fDF53868434376b89506983Ab",
      "txHash": "0xff2e8bc258e322c0b5e13523798ce8e83fbb0f24a887530614a0f5d4b1f05481",
      "kind": "transparent"
    },
    {
      "address": "0x0e550425f17cB5b91a390C83008bE101A89eb296",
      "txHash": "0xde858029029d620e5113edb88d199204b72244974ef16e11873d157a8b00a67e",
      "kind": "transparent"
    },
    {
      "address": "0xE06DCF727CEC3a2285c3712177ba1f70f813761f",
      "txHash": "0x86441caae08387f9e3a90e9fa8501c9477ce43ba2799becde17d3be8fd8cf5ca",
      "kind": "transparent"
    },
    {
      "address": "0x87dBAA04245E336807AC62A8F7074aaDe918f645",
      "txHash": "0xace239f76d4fbea78e9c186ab976289d34c430fe7572bb5f22945edf0f8e3708",
      "kind": "transparent"
    },
    {
      "address": "0x3971E4Bd5c141d57e0399684E46B6bB0113d44ab",
      "txHash": "0xfdd6b046fa95be2650c10e6803c9099007a06d5a830b94257534635674ac901d",
      "kind": "transparent"
    },
    {
      "address": "0x4c2b1946e1def55f618f929241bB80d6d384efB8",
      "txHash": "0xffe66fb94b612fd012e8aba80ec2152dee87cf5373a1fcee1d631a82ccef9b62",
      "kind": "transparent"
    },
    {
      "address": "0x3f00342c3cf4C1044673E53a0317E6772379b42D",
      "txHash": "0x8095c325f50013009c3772485e39047a173368880ade77635649ac0298e7c44c",
      "kind": "transparent"
    },
    {
      "address": "0xDf4359111B89ecD9735A96E4c6553BB45177Fd28",
      "txHash": "0x2adbbc72d3553e1fcda2b500cafc49ce8f9170c7cb4f259d9ccd32a587d1869a",
      "kind": "transparent"
    },
    {
      "address": "0x2C371cb2d7F0AE3327301AB878c712E29F87AEA5",
      "txHash": "0x37ad9413179a4a3b19ab867c0a42f3048979c6b06dc47c535a44a9a672c26570",
      "kind": "transparent"
    },
    {
      "address": "0x3543F7afAfa22cdB12933211B901Ced7EB623F45",
      "txHash": "0xaab6d62a949a815f7fdeb2ac145b48babfdc9e0d8b09fbbbab4198abcac34919",
      "kind": "transparent"
    },
    {
      "address": "0xDec1EeC879f7B0C8100eA5a3F8733dF9Fc22fAF4",
      "txHash": "0xa4a8a05ebac97daa0d399be75bc7f52d9d408bf8ef13476e6b548ffb7c31dccc",
      "kind": "transparent"
    },
    {
      "address": "0x4d9b5E5FB11f09F401D7c771a93D3426fD7Cb4a0",
      "txHash": "0x3c113e022dab7a1c8be5e691bef17211833280359ba985eba3bc1f21b50d608c",
      "kind": "transparent"
    },
    {
      "address": "0x7A4D48b6d0330ceD0FAa073Ddb362352396187A8",
      "txHash": "0xca4bce6679af846bebea536e778fc292dd0e6e86071425c2d2a889528837349d",
      "kind": "transparent"
    },
    {
      "address": "0x67cCe98B771a368EA90fdeAd3535e219c7f28487",
      "txHash": "0x92aadf4ce00909c6760707b974e40a8fe8f1ce9a5e755260c1cd0fd1dab760fd",
      "kind": "transparent"
    },
    {
      "address": "0x3eDe9236ED97046a0f61aB06edDe5C26B0Ec73e5",
      "txHash": "0xee56b8a0173c390deb683c95287e38b134fd062faf0e22d20cabe129c55c0b8e",
      "kind": "transparent"
    },
    {
      "address": "0x57D8d507A0F771c3a2A3233Df28A31f50045A50F",
      "txHash": "0x783ee9beb843650cfbb06d762733c8a7a0a6efaa08b58c1bb94b7f60f3506262",
      "kind": "transparent"
    },
    {
      "address": "0xCDfB670AC1CccA4f72664F9700b780eBE1141480",
      "txHash": "0x233d4acda738d00477b6d6cf9ee07b38d01172d3c273e31d7d7314abf4c6405f",
      "kind": "transparent"
    },
    {
      "address": "0x85C3989A7f03351aBBa50F93e75253688b57B439",
      "txHash": "0xad0012a723522786fd41c306259da633f5f0018e7758b261c8e1ff3cafc66817",
      "kind": "transparent"
    },
    {
      "address": "0x7870274BA50546074680DE293276554b62F669FE",
      "txHash": "0x61a04d96f676167a43a2549b024990b6250dd75834a95a876a6c7feb883dd9de",
      "kind": "transparent"
    },
    {
      "address": "0xD1e2147Da64DDdb5A9db156E399474d17a589d0D",
      "txHash": "0x8e3076eca0e82d83567c5821b1e5f8e3ffccca1896cad06b6dfe218b464a1de9",
      "kind": "transparent"
    },
    {
      "address": "0x6eb9c4E9E5CDdEA6b771860962135273a758f89C",
      "txHash": "0x72c184d1fe74ae2b4812bd91c11c1a1c1ebd3e59b85feae408afc7e2906e7a26",
      "kind": "transparent"
    },
    {
      "address": "0x9176C08fe38db2fc6dA1B3d0CbF8a8be04A871FD",
      "txHash": "0xa91015d19e8a34bd796c20c221fa8ba84cd0cf9b7fc7466562209e40de24e9b8",
      "kind": "transparent"
    },
    {
      "address": "0x24b17C6a2568305419477F9eF13de35daaeD8179",
      "txHash": "0x5e4c59e7211f7aacd6acbf7286f0c2d9d8f142cae2c4a32b1aabd079fd9ec441",
      "kind": "transparent"
    },
    {
      "address": "0xD7B2a9168595393F2B797F778f79d56DD8481c99",
      "txHash": "0x44ad375c708195bbdfd9a4f2eaca733ae80317b3ae6ec3bdfa305c6c2c6bdd5b",
      "kind": "transparent"
    },
    {
      "address": "0x001D960673966B1A22C1b5Be8Dc34A5906B39533",
      "txHash": "0xb6f2bd72173060692fc12e1f13e34e5ee0f08df4fe15d26c98937f255b52434b",
      "kind": "transparent"
    },
    {
      "address": "0xa59FDA3df6A6eaA1680746564f997e34f27A1f14",
      "txHash": "0x9e181be6f9014cfd00e58125ada799df356c0f708c047aee950e895daef8c4ef",
      "kind": "transparent"
    },
    {
      "address": "0x147CcE1f4bbBD1975C6a97b536E3c16E4651E32F",
      "txHash": "0xf0b042ddd8011875e47becc0da7500beb3ebd1676bc8d97090fccba847c6666a",
      "kind": "transparent"
    },
    {
      "address": "0xD7ab89F161c933322CC103C4F903fBC95bb1F255",
      "txHash": "0x23452ecdf0bc4a7b388a76543274c91e4a4485f117be48b2bbf0abee18042220",
      "kind": "transparent"
    },
    {
      "address": "0xEA68B2CBe2b182c4ED8D94B4f3a04A9A5E43eeAe",
      "txHash": "0xb5f6fd34f7376a1246dad9dc99a627fd140010b2a9ea6171a7443d0bc6da18af",
      "kind": "transparent"
    },
    {
      "address": "0xf5C8aa99786Fbb9e1aBEcCD71A20CF2ffeA61530",
      "txHash": "0xa5f2716861e6de38c53d9f558060f4b869cefd5e330604766d54c59b99c24896",
      "kind": "transparent"
    },
    {
      "address": "0x409EFcDf4B27E8743dE1161937Be13526b7E1c8c",
      "txHash": "0x94fb8667c48dbde5c7977c2501a3c65c4d143e100a8306f7dc0330026c0d8442",
      "kind": "transparent"
    },
    {
      "address": "0xc8b131dfFe07375111eB2062B0F0f4a36F8653E4",
      "txHash": "0x7d6bedf0a89bce36831b9279988c1ec1b8d4ea33f09e3d509b461ff7473bc78c",
      "kind": "transparent"
    },
    {
      "address": "0x9A8d12bcE6dF97e3c0C1B2df0D3B6202197c11B1",
      "txHash": "0xff230cb43869b147051b2c4e76e571c8ccfe03b0aaf9116410e84c19f77417e4",
      "kind": "transparent"
    },
    {
      "address": "0x1D89F3CA6Ab08fe4930Bf7dA530D0E882e2054A2",
      "txHash": "0xf1ae72f474f1b79a38b72fd74410cc7e4d609a582c5e18ab81dcd1d86a174427",
      "kind": "transparent"
    },
    {
      "address": "0x2543B03eb68aF7836090F140d70f9A10d365f59E",
      "txHash": "0x3cd70b26e03521012ec5391f3efb3a5f89f533e3ce156ea498da04f7689f8e88",
      "kind": "transparent"
    },
    {
      "address": "0x91F903E63CF77c5E23E16bcF4F3257cdfb818bA2",
      "txHash": "0xd1ae337c5c64efa0b5dc31eff35687c5b86cb997aeeb86f4caaa1f1e8b128fb5",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fdc932913443e2cea132eaf61b1e91ff95a1dec196546750857e12c3019f4154": {
      "address": "0x7a7A271591998292320c3c6Bb6C59BdF80D2Ac0B",
      "txHash": "0x70a65b33b6c6ed9f8c81acf52fffebf619b5b42c1e484f9e1412c407c68ca6e9",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92221cd9cb0f22b9ec855562d8b6703678fe0054a05dbc8565f4e805c225fe77": {
      "address": "0x6406C5e797b2F22a5B0ebaCA4300b253b736b2d9",
      "txHash": "0x8be5129a6e75673bfdc15c0aa4cc6179e05d068b02b57536752e569d48ab0971",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ae651040080750bb074733d84b1c8d33b9b130cebc25fcf76a246f044cf37b75": {
      "address": "0x10D98cbE379eA6E6F757bEcb5e85069Bf9123599",
      "txHash": "0x3c92798d39e6dd168952b401738b1325bcf4f038e125bd22a409c36c9ebe7259",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)6461_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)6431": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)6461_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)6461_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)6431",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4fd45dad18dc897cb28fc216a91fbb2c1dd372b3ec2dffee495c586d1c18065f": {
      "address": "0xdCe9C073763E28d1ddCCF1a53693Ea6730CCdF53",
      "txHash": "0x982a05dda5276fadb772acc969bd40fdfd4bed2680849a12bea1dbfced49fcf6",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6635",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6635": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cffd0219f4743aed7b080c82d9dedb3a9de5cae1d9ad9cd4d515f9e87c53c305": {
      "address": "0xEc3B95D1016e239Fb3Ed95AcB9AD6555Adc57aAa",
      "txHash": "0xee0cf9f6d82f3c568f27765508db05e42a86f172cc1d2226a85e85fa95370d30",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:17"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:18"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:19"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:20"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:21"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_rewardsFactor",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_rewardsPeriod",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_maxPeriods",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4675fdede14312f1dbc0dc4e6269f9993e9cce05e658f90d7f6acbfe17a0d5f1": {
      "address": "0x3c0ad82aC5bb91C844902C37Ef818347630Ad544",
      "txHash": "0x04581607e1c14b7ca6d79df988a5f7f0fdbf112af40924b07e9442a3fc7e101e",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37df3e2d8e81e511e26f90f9dfe2893f0fc4febcac6d0db644c802b1a3bf3e3f": {
      "address": "0x748633E5F5263c6925839b76Eb9220e7c4Efc832",
      "txHash": "0xecd6235e660e7c6d2cb2cf7bdfa2546600af2a4edad10bb9af493205711d0a11",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)6418_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)6418_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)6418_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ecf4b196841a7161c596e8a1e8040eb5f6437afee357fc9e3e8bf04ab92166ff": {
      "address": "0x44572F8cD7E1A15475F3A3858320A9F1D211E911",
      "txHash": "0x53878d4f4e9645fa706e6225ffecda551fd0ad1fcbd3b14b783e112d34f9cc71",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)2152",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:24"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:25"
          },
          {
            "label": "_mintCount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:26"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:27"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:28"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:29"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:30"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "258",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:31"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:32"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)2418_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2152": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)2418_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)2418_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f23e3bf4b34830efbc442b13a6acd3d2a4885003a81b9c9478e8009ae41f51c": {
      "address": "0x71862FB88575f1244F99Ceb6c0D238ADbC57b13D",
      "txHash": "0xae3d6569a56be9be2d48b0ea8274b28a598b7496252bfdf2fc3cd4cd187b3448",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b5f569f8ff984a8015e23060881530ea839579e8d904e39b053c751b3d9899ca": {
      "address": "0x7cf7CF1e2F6774337F72AEca9426019C5718d174",
      "txHash": "0x27414d50fdcd0e12c2a11fbf3bf8c86c0d760fc173349deb8df7097452b1b93f",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)6391_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)6391_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)6391_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87a8fa98041d2112e0b969b493c7b45a3a15469d09e5bfe2cc12653ae33c91ab": {
      "address": "0x9b845423c35Ce16F1dd3258225F63C5c097F87d7",
      "txHash": "0xeaa90c3be341111ff8805675122be7f405f58e30acb0b449707cb7d2c5c18a01",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c140b0a844fa43eaf3b0a683eb935840f789ec3e08b848e7c5891def976d28bb": {
      "address": "0xC50579255036904aA8d0674Cdfb72039d7af10a0",
      "txHash": "0x5e013fe4402a810b1cbb6d5e8d56c700c4966c11f96a6ca7f0b13cdf356d85d8",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23bc8d54fb399862c92c8d7dec6a17e52f99797e7a5fa4b0756aa51fb4784f17": {
      "address": "0xe45C456B348c767E32a1eD6ED587E43Ec7d18A6E",
      "txHash": "0xd254fe3de4996cff9613636ae057c288ba27888064c11ba2e6ce723a1eb641fe",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a2fc841b97d211c0b996807a56a10f88ef5d640330391c4aef2d88c7103818e": {
      "address": "0x2443ed8c75dE99989379f5b9a926c397E251B16c",
      "txHash": "0x791f36a30ad15fd4fa86c3b549a10e576e263fd5b29e4f7a9959595d53b9cfe9",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6242f21d5e03ff8ee48d0629c1b38f040f49f1bc81bff1e26729979c72460509": {
      "address": "0xb80Cea957B25384A2e2F12f604937332D20945cE",
      "txHash": "0xf4e7f03ef66b5831b26efce95c82db5a60fc1a729fdc850623a25fa08efc78fc",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eec2b2a22b82339d4f6aab1c6bf5174082403f35d2b730b0bffd2d6e3016d04b": {
      "address": "0x85e85bd3b8A3A5b56C1FCC20D940aCf061cDaE19",
      "txHash": "0xdccf6402224fac5838714368414437221d2c97267743ead727886b311b11ad78",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d5348064dbb4c10c39067d690fb39bbcfc5c4e4b237718f66f32922d9b2f5db": {
      "address": "0xdBFA8582Cb40fba7C6CA32607598652BE4eC369b",
      "txHash": "0xe45a6311b6ea87154683e41eb5a8e0c1e12b4cf13287187acff5e6f5516c4c38",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4e2a34d42c24ff69abc1f0b6006656b825ce185c7e78781f76a8b9e778e3fa06": {
      "address": "0x596c1DeA3fd081940977f544BA34cDE052B90FB4",
      "txHash": "0xfc03c3b954214cf7398ef731bd9eb2cf8b7237ea79fb96cd74b4f1345eaeaab5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eacf5bc12d284fe67fbe316350360ea71a0f493a65cddb44358e43ba254d3347": {
      "address": "0x28a14ff06c893478C4a9d4faAF5d1824f914B0cd",
      "txHash": "0xa652528c36beb6467856eae18adefa7e2f7b092d02ecb579462fa69dbbd1d3f3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1f955c42072c95851dcb93869f5d565bb7ee2652a502500ba6e6519b42a337a": {
      "address": "0x1428731C16fC1CB82B031A7ed6B1E3e1BF816B8e",
      "txHash": "0xf4d99227012c5e44be2aa349e94755160ff78290cd0021e24bc4c85004f7ed62",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)8212_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)8182": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)8212_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)8212_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)8182",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e32376e0059006e1280a4060c9da5a01895edd0a10e2834c440fb6acbb0b2db2": {
      "address": "0x3110560138D06DE63ec2e82CC8AB19b655bEd39b",
      "txHash": "0xaec0f515a02548d8b3976a9d2b5713424ae7710e37affb8c792e9d2a025b5c57",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6953",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6953": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a25a992dd298c4fd89acb6d0fd00199f12b8812dcac64cc66ad54c8ec34368bc": {
      "address": "0x7c7e2767B69e7D65f430721e5307aaE56961917C",
      "txHash": "0xabff49495438c622df4a5c1a902044ba1eda05671fdbd4febb2c44f1031b650f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6953",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:17"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:18"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:19"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:20"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:21"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_rewardsFactor",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_rewardsPeriod",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_maxPeriods",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6953": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ef3b0ed126d9d7a45c4de072a72b49e16cb17720f9e3fbfc921f23a63e2d4919": {
      "address": "0x50696E7F8CbCe95554c1269Db8C1CB855489CcE6",
      "txHash": "0x50b22a27ff2d66cc784a565391b92fab1718fa61543ee64539c1290748f79ade",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e1007a5f9eaa355a65c60e3c29dda805706535b0b87aa9cdaee1b2e419739669": {
      "address": "0x61D98B8734240f6066F86167D0D5d46B80ac2091",
      "txHash": "0xd29f7cb65bae821ba47d69c61578da4f798616be003bdfea5e9324f5ea32c9d9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:32"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:33"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(Counter)3155_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)8217_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)8217_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3155_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)8217_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f4d1c957d562cc006175880bcbbd0f6f16b39da728c2c58ccd15773a8707e6bf": {
      "address": "0xBb07C9aFc0B34624396D7688FB15c931ea07e2cc",
      "txHash": "0x6abf70a0cbfbf71009b04b5bd5bc5f9027edcda19562bccedf2dc261fb8d65e9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cd9313a235036a489f8f61ee839eece784ff15a962cab58cd853d4eb3af19f71": {
      "address": "0x17Af9b38772a0759F061765F0A737f4D7e6e0e9C",
      "txHash": "0x0d40c3a3bc46af07cdf98d11e9183915c4ffa5460b06ab81cc933c9276bb52d9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "131eee4944d3539afcbb46051968853b2f7ddf4c338ea720b6ca8b88dbac54a7": {
      "address": "0x1816e1C441468ADcD04E367503E12fDF6729196B",
      "txHash": "0x5c5ddf52d04ae777297c63903f2b0d42b6ef0f82ba4976b450b8838c1109b8b6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c95fe2544f3ab076794463df21403ab63506bc5fe870acd23ee362c35e04bab0": {
      "address": "0xbE4b0107B503fC2A1Aa44c711b87f11Dd9d5B794",
      "txHash": "0x201a4b1a248917ea0c71d9e539cfb2db4d53b1b029019050138c5260327db371",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a46f05973056568be68099bb14a1373b5c29ba2a39e8d9cf800f7d8b98bd918c": {
      "address": "0x0F4cDd8D4d74fb93E352f60342bf1180503b3e75",
      "txHash": "0x0d73ebd7c1ada34756d35b82372eb3cb0dde63e2245ba0d856a6d18568e2ef19",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a50e02ff92c4598d1fc63769e470f24777a6aac34b54b02cc4aa084c0c5b3a74": {
      "address": "0xa34b8886e1EDcc720deF29473244cC842267b14C",
      "txHash": "0xc103fd290d11e96feed2d7aa4c8d87b6d1e581e056aede13262e824211349434",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bbf3247fd1f740731d99ab765334725a02e1a9a315f51a9fe5ce6f90e935ea8b": {
      "address": "0xa66071ca10497AC46C108B934914Ec3882CA0357",
      "txHash": "0x19ae1686de44e067f3cf14ef324000a7e8559550be675499290b928dd6ebd5f1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4c2c10c8b5a040abdfa627677dac9d0f44428d6572aa2755ae2f89f0b31d5a09": {
      "address": "0x6731421E210aB0573c7677138aB9753BD61A6463",
      "txHash": "0x5ba44c4fa08e750e610716523ebb3fa8edb59aeef867136075706f4df5d75025",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf273c12e28066228981b8184d375066647fe65952eabb81142ae415c551adf2": {
      "address": "0x93a21181f0FA750b68AdC36CbA296691d0D6c963",
      "txHash": "0x70589dc9805a28b46d9ba11a2f29b454b86e67a7f9fa23b8831accc513fdf645",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "55e5942be634c97acd09c0acbe9ae942e6bf4d408833dccc12718c88104c800b": {
      "address": "0x954a4d8c273547d3Ad097d89Dd0B265851dF7137",
      "txHash": "0x4567a2302ac32ab5f67da6d65ddbd75cf055f26681e30e88ccd71ea637c377ad",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1bc82cf0e35e431d0062f2f7a6d721c77c713b864372a5b6af10a12e75f9c620": {
      "address": "0x42259A05c37700823116A41b6B444f1Ebca8EF00",
      "txHash": "0x1aa1230e250e0a9eb4a1a8cce0cc436e99f68dee21f1f8af327605a035583773",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2ce654ae8f7798b3cf09b2a96f76efdf73fbd3e67c9cb862a837550d7089e800": {
      "address": "0x00DCE1Fd5Ddafbf352eE740F06F43F1AEC248a46",
      "txHash": "0x333875daacf5af434981ad8b3d2458abe190fb8ac13559aa417fa614b35ddca7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b37cf2c21ad1f5ed69b395dd0c3c7b95f419132229af0f49185dd4337d79fc8": {
      "address": "0x24f3d95c89656C06A0dD979144F1b53A2C0ae6dB",
      "txHash": "0xae067b3df6f9fdc8c486106638448fb4c5fdbd7ae1191d3669e656b9b5dc42e5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4088f69ebedc84c44f47afd00d6d6a1ef1815e96960d2c8addabe9de770657e4": {
      "address": "0xd22e165E236F39fe6154Af8Ac2Afa840f7763D0F",
      "txHash": "0x853ddb831b0da780d465c5a82e5e0ceb1f27efe936091140977b17908a8f741a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05101e2e68f382d02f3508135ff3711dc67c93c5890dd8f8c294fcd053a7f977": {
      "address": "0xeD5ec30C7d9fEad84d1989FbC85d0b32336d2de3",
      "txHash": "0xb863d2e92874ce2d0bbb26af3fcf17a2aff765a7f3e579690f4ec7ec7a363fe9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "198c4055e72e302c5947a459eba70633c6ed7030c0baa6e80945d3e1f004a454": {
      "address": "0xBa28c0B6A71aA75Daa775c2B90B503Ee4D2081f0",
      "txHash": "0x5a7993747620f41c040a76992615f897d62927584d2dc3a18d13d51ba26f0b38",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f45ab327d9a72beb7b829956212a9e376bfdf4536136084f6242d54ec6dd33d8": {
      "address": "0x2a4eD6C5b5f1283Bc8f8BfD9e570818729349353",
      "txHash": "0xfdf7aa78f86eab7cc997a033c67189221e52a905c0fc3213ba6bae21f7f0daa7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b88c1ba8bd1c6a396e07607f95c4e84d5072669e53dca7a782c0abe0e6af13a9": {
      "address": "0x9E6d66a2DE018B59eD3C968509c4f113207C39aE",
      "txHash": "0x21f61cb233696ffb6aba217d203ce31f6cfd9405ea4151a1686585c370ce430f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a9966bb61da3a2fc6dccf6caebb71439f918e1a3c571a395dc96fe09e21458f0": {
      "address": "0x0E7131f85be97795E713D2293bf9c8d228774d9b",
      "txHash": "0x110002a2dc70eddb8477f65ad92eab51819262d9c403d205a0da5c92ff691ebb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6eb4a3ff05d5cae0da383669e5e6b2872c1aa98718ed373f288871209cdb9b9a": {
      "address": "0xE270B694ea980d7820deA8d314c852bFeBAbeE1c",
      "txHash": "0xad8730001106d4d8f38899d62801a44573c6f1eaede02fa94b35e79793b29ffa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "50b8c9ec0e730eb12c739d5ac061949c1d9cfb45fc79124e0f478652fce47b29": {
      "address": "0xbd5858EAAAd9e07E37f4e96AB8FB457Ab0A8144F",
      "txHash": "0xd787a2e83a2b9d092e909df804169d0c7fa0459355e106d9c242a8dda60d7938",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3524",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2983_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3796_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3524": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3796_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2983_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3796_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c2b47140f651f63735be7a7f3efc42e053a247522061cd9b9cbe3c26e3d11ddd": {
      "address": "0xD78140402077edd4cE760aa3C3C483aFf30F97C2",
      "txHash": "0xcc62adad668095a7c52508d60a541bda5c13bc975e15a217a4fb8375b6911e75",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2928c03d351826e109f3a39847007c8f4569be9558fb16a6843795458dd0e14a": {
      "address": "0xe49765C8fCb308E590AC18fD96D4695D4563D198",
      "txHash": "0x87338cb90c957106a37ad3a773cdb4d7b55a56950c8b0d446f0a645e4ab32fc2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8318_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8318_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawalRequest)8318_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6a657c5aca1faf0f6d1ee2fe98a92ec688a52993d3c0b4116509dac8edff8e04": {
      "address": "0xd2B74A801c3472a6c0E89094758df1Cd267eb265",
      "txHash": "0x034ba98c252b167c3c9338ecc00d5bc87eb2a646ccb00109741fa87dcfee9093",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "007f944e47fd6745b1332ed5636e6f7fb0b318ee174da8bff433c6c5bbc2aa0b": {
      "address": "0x07d3b01BC35c3F48FfD20E3b8600323676281b69",
      "txHash": "0x2fbdf15a525fad2b812626a6e30e8acc65f4229f4ca153d56ecabb3d67c41f2e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2fe055f35a2fc12a6cc05ad3a1b58e8807c847ca299d5c5d0c608da09869e624": {
      "address": "0x98E73847198F563D46f4f11bB01bcb56436cdFe8",
      "txHash": "0xbc140118b7a12b61b3ca31bb881dbc60dc7b16ef12f45b3ae8ebb735a286405a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "54c8c0778e58f9bb2c1b366ace1f00c0b7c455a485a0d843b6cf38ae6fd0180a": {
      "address": "0x476C23cfd1e2D5BC5fc11e844fB4eEb1cc2697B3",
      "txHash": "0xf7cb964aa85a1880e23710fcec27960552a302c75e1f47019bb81acb9a11c8ef",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db7ea868a7157dda4ae13f6ee94e7003639c20d1687a59dc13ffc8a5d8c039ea": {
      "address": "0x552c1cB7D2eB088f4BA19F9350a26Ae0662fddfc",
      "txHash": "0x726d387b3474dd318bb9d5a11609b2c865c340ceba852779885960bc90acd743",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)3300_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)8376_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)8376_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3300_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)8376_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0a6d89ec7c4788e6f1ace364febd8be4f788c697571a7c249fd934ca584ca0c7": {
      "address": "0x43e880A90702FE28DbAf5D930b2bf7C67b7b72a6",
      "txHash": "0x59df91e873544c6b5e505e8453ad1cb9d485814b15326f33e986dbc53d99c9ab",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5db1421dd00a499ee5ee286ac0a68e3aaaa451b644c3f9ceb2b9779061ed528a": {
      "address": "0xfef0954380122aCFA7c288363751bc8f413aC370",
      "txHash": "0xc167b4ba0475126e4201796701c040a63b6cf02471502aa317b37847ffadb106",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)1588",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)1588": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "661db384b76666e7f74a93b820dc0e34792a17c969fb4f64b6bd390e48ebb9b8": {
      "address": "0xD1C29003e9480463C517D7630e242b151502F77E",
      "txHash": "0xe51f75d76e52b4da6515864b0d3712ecf99c19187b8eb379253e027a0544f6a8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4cd501653944c0ee4d6bb0a2c60e88b7b1113a793a035ee246de72a6a2dcf07": {
      "address": "0x4bDa1909133A238EBDf7C747Dee80d404e19A7f9",
      "txHash": "0x9e7e0ca1f6f68da02a9a8f3672bfed802859a0d64a08c43aa0a0681de6a175e6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fb99efc95d66e5801d0f2d0281c0126311c821c8ea9e66146ce2833d6a55003d": {
      "address": "0x47603eD2F1A794B27B987Fb1F3Dba2A56fbfe4Bc",
      "txHash": "0xc769fd4cc3dd8376029688aee2c9c0a38953480f7e93822aa9121682fd1e1103",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3020",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3020": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "21c56ae28ccb783cbb8def6c6a6b5d4f805c017d8733c40c42765736c47fe82a": {
      "address": "0xe4D1cd17C934E963C4944cD3b5e4ab6d3160D979",
      "txHash": "0xdf37decb10c8eea739d9a2070373ae9ed99f0f97c08fbee837c338f7f49fd861",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3875375e077c17c2450a45ab806773742c44b6b9b6501f3be7b8c6720e8c2ec0": {
      "address": "0x5a4250a03dB59D3Da03c2b17FAdAD7d300C68679",
      "txHash": "0x9300f507cd9479b86d634f629f32e8c4ffeabf83e6be8ba0b3b5cff70beb6742",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "250b3a52164d5a15b08114572ad8009195514d761a30813c32e6033d20467b3b": {
      "address": "0x521dAf3F620288B4C1E5b6E163583aC3e2235750",
      "txHash": "0x01400e91d01b2e7a759b3c07602d4080c46e0a7f49738f6b4ee04c36bbf9d053",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "39c4c4dc4154880862fd16aac2d83573837cd851e67146012d08d505ce16b718": {
      "address": "0x271CbCd216C3539286B54A5f0c1eD0289869D8F3",
      "txHash": "0x7f054302fdea595ec320b7f8d1da90ce44988b750ddd99b2a88110f542e99118",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "53a2652fd6060bb5d11d90d6fd3696e69878285728f8cae703eca6e472e7466c": {
      "address": "0xb5eF6a7f2AC8A96c6EcaA0082F60d22AADe594C3",
      "txHash": "0x3e7aa4d06ee5e8b0cb9e6e8d62cccaf71458ba479bcb0a7c5ecde6e4d29551e9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9be75afd7b53cc8a6f6416e79b4707ad77dd685204c14ab667d49b9c2a75a002": {
      "address": "0x544cECD12b70c5076EDDA8E313adc6e86A552410",
      "txHash": "0xe7e76bee2c4e31b0d9e5b5133f42e349e05b3dd65cae8a01b9cca73fde8306fd",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "73b1252df37bc112e966a378968027b944fb424238cae120e0fbce7cf6972fd9": {
      "address": "0xB0C40e7c9c711b0AE44e406b96CEA4872dF62dA1",
      "txHash": "0xd7d64d791f3b9d59b4277e698d14697fa324665cd8ee4479cf6c9f288117b730",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)1453",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          },
          {
            "label": "mintedAirdrop",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)1453": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0e5dc3bc507c7a3f2ed18a085a01fdad0397a49b05d76694d92b7c450ba19a59": {
      "address": "0x9C9E2dbaA7c87c078C49F882dAB6A8acd7c20e04",
      "txHash": "0x61d746c5272a1f136fedb93643caca72a2e5d40e3c0ce1c901863b93517f2d06",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd9e936598acc65c0e943603ebc51d2d657f5b9256ed1901fb60f58f6e24c624": {
      "address": "0xD6e4D6b23CF2f5C05E500CE9119A9C3805b0704C",
      "txHash": "0x9c4f7b8e9ec9cf1f9ab8ee22d770f98606cb8b48c524be1f7b8dcf9ae6c7b335",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3274f42d2efd1b83a0bd4ab9c0a7c3d257bfff44f1cf327b2e79ee65ca9e306d": {
      "address": "0xD0952C21936B5653580ad5c7AA960c9D389Ae2D7",
      "txHash": "0xcb70755f247c90df94a5a02b5bc4f8d3ab164d8392f95e7956d9c9754877aaab",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)11894_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)11894_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cacccffa6b92657590f60d8423b753706eb8c6822253b0b50f7d730eb0ca3d83": {
      "address": "0xbC86618CE0B5b0C1CE2Cd92aC21766541Bd0411d",
      "txHash": "0xb0c2bc2e8aada42651962a53561005274aeb9ce235f792240ec19972f4e15bd1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)11894_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)11894_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a0359655fbe74b1c363fa18ee7023570c5a7e0cfe9a6830bbfa29f96453c1857": {
      "address": "0xF38998529298a1acdf8026a8AF283f4E48085473",
      "txHash": "0xae393814919116289c961fbb08f47c46065e92addd5168eb7207735ecc286c23",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)11894_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)11894_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "efb9791df68bb3bf91b467a4bef191146ac331d18db02051c167b5404354abc1": {
      "address": "0x73AE89Ace444f42c0E60B7D5b66da5B8f192F328",
      "txHash": "0x1aefb8c8b51b3362b21af325d35a1eaffb57e3997696d4db00d934e54643cf9f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:29"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)1693_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:33"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)963",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:34"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:37"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:40"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)963": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)1663": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)1693_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)1693_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)1663",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df31b6f8f886003bff09186adbb9c3c64a1448e35cbc59cdc86e0fcb35bd15d4": {
      "address": "0xB8037A1b8cf1077384eE0ae020466d7021FB33c1",
      "txHash": "0xb95e0861921e57005875179ae3b4016e488997ccaa615692e5227b60e4c9c3ec",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "86344073c3291d4de76e36679a1f4622c80d893aeb4500f5cebddda426298962": {
      "address": "0x528CbAbF5E04D94baA673a2761b0B3d6F1A3eA8d",
      "txHash": "0x176093424d9b7a9f792827e2bdc5a55207ce1f641b4a6e4378f613246566ecc4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:29"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:30"
          },
          {
            "label": "mintedAirdrop",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0f2199cefaa0224ab8c65daa8cdf237c632151f89b8c8f9e5e0ba168bf270dfb": {
      "address": "0x07a8eEE9580f5b5311149143bFa8AB4444Ff8F3f",
      "txHash": "0x6bcbeab448515b67171fc80ce8254384cbc28e60d78e8f0a58cb7bf5cd3072db",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)11878_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)11869_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)11885_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11811_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11811_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)11869_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)11878_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)11885_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11811_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cc8e5b5a86a413d549f9c37552d4b5aac61919be6e8465fba7df81c5363540d6": {
      "address": "0x49d72949eD07CD7618915E72c909061031D147a9",
      "txHash": "0xb2aca93f6a93b337ce981d60ba3e9aff39d43e05cfdd491fa983e88b8303b042",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)9024",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)3514_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)11864_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9024": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)11864_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3514_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)11864_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7647950c755069725d62db5eff6ff8eb072b5104e02828d8fa6b555f060a3bc0": {
      "address": "0x8DD123A03b7486F8feDF3eA63C3D6843FF49CeB4",
      "txHash": "0x2fe7a3f1463ae9d574d5e51b0fc32db3480c022c78381cfb8b065b8a014e4853",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)4169",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)7024_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)4169": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)7024_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "underlyingSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e5d1426051fbc417ea410b9e42391737581ef9b06760ecd3922bc35a47081984": {
      "address": "0x2Bb0cE8e38791FCccc791bd636F1b3e9Bdb069Fd",
      "txHash": "0xf825f6f2c724cf69d171e2009b4b92e9b178735c172f25aa3b6817053df4df0e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)7579",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)10454_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7579": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)10454_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3e7229cfc8fc3670d771b746069250ff82bf4582806ad4e8f63c6527e1ac4933": {
      "address": "0xb905079C8D3EcFeF2B23611c2fF6E3db0f5c8874",
      "txHash": "0x0f4cfd94dc4b170e9343aea18597d88f7824a3e76fc64f5bdb6f7dcf3e04dded",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)7579",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)10438_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)10429_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)10445_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)10371_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7579": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)10371_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)10429_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)10438_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)10445_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)10371_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0cae70aa1daf67a14f789cc50ef3473dc35848f6f2bd0faeaa3f26f59d4ca85f": {
      "address": "0xC61eEf791FEd673402264E5faf9Ec2CDAA69D5B2",
      "txHash": "0xbab8067a4ea880ab24be0f507fe3467903514202bab17cfa1c5c7892fea4ccea",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9337_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9337_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0856e7de2279ed303d28c04dee3375f531572b4e1a0aaa149f6850e57e6c0906": {
      "address": "0xC5A4C80D18786489ed772dE35656E945Ba91E538",
      "txHash": "0x7a909e4a3ab21c616eedbdaca7dfc3098aaf3eb79878a80bdc3aa66f7175e289",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9321_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9312_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9328_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9312_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9321_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9328_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9254_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "67253361208b5212b555f9b2be042ece487d20e51968686024efa1344d8050ae": {
      "address": "0x80E6F861e0E16e78454CC00Dd968aA3f3CCE02Ca",
      "txHash": "0x83eaf0886abfd512495609ac8c147a2db1028bb754788e5d0544dc239e328b2f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9337_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9337_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8450f0dd237b568391d0c69c901999084622e439ff1f7e2c9a749d6080a51bda": {
      "address": "0x2C21f52DD7AF08aAb4B00c5826360dfCD67ba4C4",
      "txHash": "0x53018e07977d4c22119aa496090d41782ab986a64fae1939449c15c080958496",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9321_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9312_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9328_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9254_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9312_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9321_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9328_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9254_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5c1476640588f69845e423b341fa462c6bf3b87ce3120cb86515176b3386505b": {
      "address": "0x281991E88202b42d3a2AAFFD6C5FB8436762e3c2",
      "txHash": "0x1f5888d4da0a20f54b3f9c0a36445ac98985a49a23b2f2eea49f87952e7da40b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9337_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9337_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3271d5850bf89e36ae2bfcf3c0a5b462d3ae9f2ae1ebe2e1edcf217259027fae": {
      "address": "0xe7BB8fC28277F716efCaB6eBFAA2Bbf63Ef5d40C",
      "txHash": "0x9f1b0ff16846e40c410e2fc3daca1a6f4b89223c4562567bcd3e0513d710b728",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)3788",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)5366_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)5357_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)5373_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)5299_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3788": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)5299_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)5357_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)5366_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)5373_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)5299_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "00d6745f66df46a20395e7242b8e555277638e8b1ada76d0938b0d79e8c55e6d": {
      "address": "0x44297ffA6c46C8Ee64Ea640d284504e9DAAAFc29",
      "txHash": "0xc3e42167cee040ab5beb92baf223afa8d80c9c554b64a4a4afe37bf7a68e4990",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9335_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9335_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9265578868016ea2bfd55def23f09dd34f08b936cd7ed47468ec601b4e2724b8": {
      "address": "0xF5CEf87a9b169121Aa19220Bf4b237eD335e8c0F",
      "txHash": "0xa6f68c7104e2b0bdc674523a6d07d5c1385c30de8e2c15205b613c95c4a2d53b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9319_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9310_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9326_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9252_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9252_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9310_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9319_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9326_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9252_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92107630c5593f077510cb33d0f46b7e7be50b369d1c8638a5792d6ffe33399d": {
      "address": "0x5949A94cc3371193ccC5178C29324087Df0Bb6c1",
      "txHash": "0x1d14b551f36f7fbce46721053279e88694b1942d1991d10892fce970c22f386a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9350_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9350_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1a5249d217c82fd1e39870156a31f7f58d443a6d1c45e3a3ab148cc3acef9266": {
      "address": "0x233C8a8BD8c3797B5ea40872097567AdA9987959",
      "txHash": "0x32436ebcd0365f0722e1bab57e47f4c9e1cd82636dab1b1964a389147b3cabdf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6562",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9334_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9325_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9341_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9267_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6562": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9267_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9325_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9334_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9341_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9267_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0a8a27ce65b5a6011bd3e06cc69a99293304b302aeb9c901daf283c754188aa9": {
      "address": "0x53555AD6c943125CED7D9673462fB085a3545227",
      "txHash": "0xf9eaf1f00535f90ede313eab888dc1ef8d0ae66ebf0c85fee2f2fb9758603797",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:42"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:48"
          },
          {
            "label": "_defaultReserveParams",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(ReserveParams)9340_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveParams)9340_storage": {
            "label": "struct DataTypes.ReserveParams",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23b34163fe4c61afa2f31ebd262c1e44f4b9719b719031c9e168de41890b903f": {
      "address": "0x8fD3001b6CdB6B9cb16716A9FC62e6396193DaF8",
      "txHash": "0xe8d9fbacbcecd86108a5fc5ff90f1307466a0c6f5445548cb6098ca66889de42",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)6544",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(LiquidationRewardParams)9324_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostParams)9315_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardParams)9331_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:46"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9257_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:48"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6544": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9257_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)9315_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)9324_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)9331_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9257_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dd08a090d157046eb30b3e53fceb514d6a869bf5b2ec2484bc027d81e88b4ef7": {
      "address": "0xA642044cc28F557Fbc38C71dC30f360C115984A1",
      "txHash": "0x0605d0921fc1e004d37afe76b13fc546faa4325e998159ba97035e895bed0f69",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3791",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4069_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3791": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4069_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4069_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ab7dccb1809432a1a86a960ecf52b9812323ee9ce3d770ebac2305430103a2a8": {
      "address": "0x5C4A593C230e6bC316c7733948014230193b7e8d",
      "txHash": "0x98784546e3451d957612ae55307b72aa642a426df494b91434b60e7fec1fa5cf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_market",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d09a9aabf37e846b521f19f968ea5bb3bf27b83e8193f48db436b1420198049d": {
      "address": "0x53e3ff439DdDb3737958349Cf799121C84F7e2Ea",
      "txHash": "0x0d8ef8719fb0f98f4d0ab3f322953cd3ffc69786930041932802723ef45f5caa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)11671_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)11671_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "46416409d557f45006121ed73d051b4de6fb4171aca23f0d1838a7563243bce9": {
      "address": "0x73743d8E2e2A2542A64f9cFBbD1eE38B47bF396c",
      "txHash": "0xb00cd860c9543c4ad4c1fec3e8d9a5dc4ca581742f35741f8465279d6a59b5cf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)11731_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:34"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:36"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:42"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)11701": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)11731_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)11731_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)11701",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a6225fe5f5b28c6d0eb0e4116400d91ed75a28a5e12d23099be4c23551aa2706": {
      "address": "0x79a8c56717Cdf50d7e5C6D7B96C810Fb18B55b6a",
      "txHash": "0x55a4e3ef865903c660e1f7f1606ac979a96412d172f7db727c657e6f5d463ba7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "de7cf72b83311eb31a069626e6a0e4546b5f665bb92ec9be2c6d358f4249bb15": {
      "address": "0x93F4D8164FD9C510b434c66548a0Cb769814E16c",
      "txHash": "0xa892a0910f5bad4dbf2b4df9cee65b62c408efb899d36e7ec1881035dab2bce0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)11650_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)11641_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)11657_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)11662_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)11641_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)11650_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)11662_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)11657_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11683_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "986f60020f028c333d407e3903a96d46bfc0e851f0beb959b7bb5a524322c4ed": {
      "address": "0x6840751f7d06be900770aBB96C9994b25Eceb6e0",
      "txHash": "0xf5913071d9facc559d505d677f919068edf43ae1537be2ca9b9936bcd855dc5b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3984",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3984": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4201_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9534af3ab88e5f6bf5a085f5ad1d7f03b8a50737119b042bd7fd1df1a4bcac77": {
      "address": "0x56c836eE4e3e68E7024e36abF05bb90D46FFb15b",
      "txHash": "0xf880e2b5a49ba743bc11885ca6792ffd37ff84a60bdb2ee89bdd10c71cc8c0e8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)11671_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)11671_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "49c8d9b1e21fc6a8d1f8fb28182148e4ba48dca9e88f69576910b6a8254c9caa": {
      "address": "0xF7341B77041786C61C23dd3C109E5496c23Ff7B7",
      "txHash": "0x4cff4a9af4fb4f33db42d8dcb65ed44dd592bc8bf6588e1db8795872d789099a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)9356",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)11650_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)11641_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)11657_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)11662_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9356": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11683_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)11641_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)11650_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)11662_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)11657_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11683_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ecd36e7e428601c8641e34d9a0f810791228c6de8c0ca0c2d223cd1c4503ef64": {
      "address": "0x829c5AA87Ac621CF64666ef62a39D627b30a4091",
      "txHash": "0xaeec04e3d2a82f1ba07bbbc477533f953be3b975807283e6b571baae5b883519",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5073",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)7373_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5073": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)7373_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7cbdd7f98166613d64e9d7dbe420862a457b58111c1f97621affc7b2a551a8b5": {
      "address": "0xEe0A25432990F4D704dFD8B2e0134547F1269828",
      "txHash": "0xf942f06c745fdc6fe8e7b7bf6d2ac5e839b82fdee516e2ef5f89a4b0a846621c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)9302",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)11596_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)11587_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)11603_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)11608_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)11629_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)9302": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)11629_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)11587_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)11596_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)11608_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)11603_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)11629_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c38adb150f2506b6885bd599ad5f2dcc3ef8b7ef7d107df6745a33fa6ec317fc": {
      "address": "0x96dF74Ad159Fb649d5396C1804699F39B42bAb30",
      "txHash": "0xce10c11ea12613a4fe653d08d4c3ea4fc1e4cde01e0d5b4d1f585c4ee8681bf0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3984",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:44"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2436_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3984": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)4201_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2436_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)4201_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1c7d87ac05ebde98da5e119a3659f62c57f47c2dcbe32a2ed4c4cf4b376ca50f": {
      "address": "0xA19bC97F76277040ba0f9d6bEaD9fdFe4378D1a7",
      "txHash": "0x939dc2cb536548bb25be4e55412611287240ed277218289c98e56ad89d2b2446",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_reservesCount",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultReserveConfig",
            "offset": 0,
            "slot": "154",
            "type": "t_struct(ReserveConfig)9703_storage",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ReserveConfig)9703_storage": {
            "label": "struct ConfigTypes.ReserveConfig",
            "members": [
              {
                "label": "liquidationPenalty",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "protocolLiquidationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumUtilizationRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tvlSafeguard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05b6a36ee0f1c965a5947bbea346bc35132c4ccf84382c72ea5d3b41db9c533d": {
      "address": "0x7E5D630BB5E2B4e14F1d0907c34bd79889151d08",
      "txHash": "0xae88c73c9fa9f1257da8beb253b1aaa1a798a8172f1b8a970eab688454a11ce5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:30"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:284"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)7412",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:35"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_liquidatonRewardsConfig",
            "offset": 0,
            "slot": "254",
            "type": "t_struct(LiquidationRewardConfig)9682_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_boostConfig",
            "offset": 0,
            "slot": "258",
            "type": "t_struct(BoostConfig)9673_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_stakingRewardsConfig",
            "offset": 0,
            "slot": "260",
            "type": "t_struct(StakingRewardConfig)9689_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_nativeTokenWithdrawalConfig",
            "offset": 0,
            "slot": "263",
            "type": "t_struct(NativeTokenWithdrawalConfig)9694_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          },
          {
            "label": "_usedVotes",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:47"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:49"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "268",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:51"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "269",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)7412": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)9715_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostConfig)9673_storage": {
            "label": "struct ConfigTypes.BoostConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardConfig)9682_storage": {
            "label": "struct ConfigTypes.LiquidationRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NativeTokenWithdrawalConfig)9694_storage": {
            "label": "struct ConfigTypes.NativeTokenWithdrawalConfig",
            "members": [
              {
                "label": "coolingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "activePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakingRewardConfig)9689_storage": {
            "label": "struct ConfigTypes.StakingRewardConfig",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)9715_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
