{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe9f5Feb0d62Bf6350A221E9d14Cfb62C1EEABb32",
    "txHash": "0xc24ed6f60ad5dcf1d11f1ba5c88550772e7366be12c34fbe759cbd80de0dc967"
  },
  "proxies": [
    {
      "address": "0x541A934eEB91F91f178d4Cd91F2db0d0e712Db4a",
      "txHash": "0x731e0056ab86aafb89297d20e03b02281e3711207a0693038ea8350b31a86792",
      "kind": "transparent"
    },
    {
      "address": "0x30499a0e1D548435FdB3E856633f6c7cd4Ba9891",
      "txHash": "0x5d9a4e9a302504343030b563f11e267380cc8278b35cef5843dafa0aa9000424",
      "kind": "transparent"
    },
    {
      "address": "0x54aeE695e688b87E2D13379E5af2F463d13907E8",
      "txHash": "0xa296d7e75e45b1b3419f1342b1710f754dac57768568cb10a5516cfb5644a829",
      "kind": "transparent"
    },
    {
      "address": "0x721f7BAE16b7dfdafF22Cc149c909d8527da109a",
      "txHash": "0x05403539117800c5035b7773aed7c77b467d5a3d13cd64d5219609bcf38916b4",
      "kind": "transparent"
    },
    {
      "address": "0x5E8827dF0f496Cd0710B25C4EB37A550242fCF1b",
      "txHash": "0x216a43e504ab40dfb9258b9fc3c988ab28a815a7be9711e8c8bd7d4a2dc2a75c",
      "kind": "transparent"
    },
    {
      "address": "0xf9A7e772FF0BdA5676D35ad30E0AAd7b63AF3055",
      "txHash": "0x27fc429e6e49877ef9c538fb1b6db4ea16865d2ab92f0028b368396d44f132ed",
      "kind": "transparent"
    },
    {
      "address": "0xd311ce967e154733427E5725669B7B3dCAC1519A",
      "txHash": "0xf86bf5d441a5853b6b3049af81182b0198eaaa2c17a0b3e85890ef09d230df7c",
      "kind": "transparent"
    },
    {
      "address": "0xA6E7981ae66b5Be72106bBA4e90624C8c2615009",
      "txHash": "0xf70e0ac381d97f72fe149fdefe9d0ac3de448b7af2fc9fced047e3cd81dbc0c9",
      "kind": "transparent"
    },
    {
      "address": "0x8a923ae10DCfcCa05d7078D11c0582e9F212c1Be",
      "txHash": "0x574b33b9b9b2098d88d53873f11749bc843a10c7c5c0edec7f7dbe8ec0a23215",
      "kind": "transparent"
    },
    {
      "address": "0x51Edf4f4702950D06B4418E7713A9e4891fbB292",
      "txHash": "0x96a7e06ac21bad1dd568673a096e167b2ac2e29794b9cd2f70c2e61e93f5fefa",
      "kind": "transparent"
    },
    {
      "address": "0x3A55132824588559D4bfaC85f7A80F53Cc733813",
      "txHash": "0x67bbbb1b6a9724c760d6a34af721e6cb27479784feceaae2b5421d2caf9dda43",
      "kind": "transparent"
    },
    {
      "address": "0xEaE87a2690609D267B9D48671d7fA3f0aA027632",
      "txHash": "0x7fce3454dfa2d718e834922e6e060a8142419351009c7a0d95d0bd7f344ba72b",
      "kind": "transparent"
    },
    {
      "address": "0xF1Ceba60cA2C94F73cb6db162eE7ad7391D17a44",
      "txHash": "0xcd6645ec479f17a6a275900fa66d94dd5ee921c335333efc9ffd6a18051acae2",
      "kind": "transparent"
    },
    {
      "address": "0x261622D908Dcaab096C5B875bAf1C51803D279fE",
      "txHash": "0x981ceb06ab2eb1c04d4d8b8c8812fdc5456f10c47b03bb1961e493536ce8cabc",
      "kind": "transparent"
    },
    {
      "address": "0x3DD8DeE134bb4c64da312095b7a5dED70cB884aE",
      "txHash": "0x59aa605ab63fb207b85f423b456abaad8ff2b8ba3f57980b4a042f7374a56859",
      "kind": "transparent"
    },
    {
      "address": "0xB2800CcBc821b48A7f7C075b8B25ae3E8Df72eC3",
      "txHash": "0xdacf282586da2099faf126fc769f8cdd02db2595c91f8a67974d604890deffeb",
      "kind": "transparent"
    },
    {
      "address": "0x2032d58Dac6398F2e7FF7DaaE32d7BabDE71F64c",
      "txHash": "0x81702323ba522f07c9f7fb80f0ff685975dacedf37bcf947d7ff13d80aa49532",
      "kind": "transparent"
    },
    {
      "address": "0x261963247f41a12DFe07475324F49B7e54671b8D",
      "txHash": "0x6c653bd39f418ddcd41f915b2b42057c209e0ac7b0135227890f0fdc2713034e",
      "kind": "transparent"
    },
    {
      "address": "0xc70Be26D55Ab44CAB154E2047796B1df364Fe569",
      "txHash": "0x1032ef59a834de3c43425873e0a48e3042c99e69571687ef7eb333241f8caddb",
      "kind": "transparent"
    },
    {
      "address": "0x8a794B33c8587094Fc781fFB2345425d8D282Dac",
      "txHash": "0x51162b74baa4d2595b91ecfa21517bd4febbb0eca91ef76e6e37324ccf3e9c0d",
      "kind": "transparent"
    },
    {
      "address": "0x31AbcAfdA7e8E7A07A7E8A07e1C699EC1d44F828",
      "txHash": "0x68802bab678bdde3d618c9c4dadf3558399eb6b4853365135ed984a1034be65c",
      "kind": "transparent"
    },
    {
      "address": "0x136F8B52343B5B95Dee26EcA82d749C790BD9f2F",
      "txHash": "0x6e82a0b0c3d2f3c8da09177fc7ab52fcadc678fc0ad7fba51a874444da329102",
      "kind": "transparent"
    },
    {
      "address": "0xf790dd39dF46335166Bccf2126a06E01c70a59eA",
      "txHash": "0x0dfe6ce8ad4dd959a66daca8a19a4b6dfb64429cea6b3d47c6541c4b81ec50fa",
      "kind": "transparent"
    },
    {
      "address": "0x22058919880037EE6DF016B0014b48A3daE697D0",
      "txHash": "0x750ab89dff5d6eadd8150d58e01bc0f8f92e068c453535c13d615eb9e7cfe869",
      "kind": "transparent"
    },
    {
      "address": "0x0E335C779441bfA587AA5D647566b01cB43B6202",
      "txHash": "0x5c8b7f9b91ba81a731ab8d0a50ddd32b222eb9e164df083ac134760f30143e7d",
      "kind": "transparent"
    },
    {
      "address": "0x5657B03401641FA6A91B698a3960C326d5DfB03c",
      "txHash": "0xebbe3a0a4ea03a519614fec7b09599c9c91266cee9d019b93a622e2e6ed22c0f",
      "kind": "transparent"
    },
    {
      "address": "0x51d29EF3367e9E43A7485c55FCd58e0F33750210",
      "txHash": "0xdb031219bc7b3c8ce3f953bf98363d0b8d0a2dd78c2d7f237d6bd142aa75bffa",
      "kind": "transparent"
    },
    {
      "address": "0x19084E6E125DdC5dC7bE7E524142Ac7B869D2898",
      "txHash": "0xa6ff120adbe7c2ee4e0e01680aac1f58c3afe8f48d8b268aa8c9ead6fd833c41",
      "kind": "transparent"
    },
    {
      "address": "0x6dDcde112D0Dc5ed518b12a0145B30bC6f916BcD",
      "txHash": "0x0c2a7aa413758ff6bec00eb2d8aec7995ba04d794fe55590dcef1c133fe79998",
      "kind": "transparent"
    },
    {
      "address": "0x95c0D4E4922fc1D8F4DFD35c3a54Bc56a0Feb0Fc",
      "txHash": "0xcb2add52a8afaa2268f7c04c14d1c082352452213a62d184ebf1dfc6a33f91e4",
      "kind": "transparent"
    },
    {
      "address": "0xFd9986b72050279B60aea6A03Ef2f613aA5887bb",
      "txHash": "0x5df92cfcc2addb683f454ba3c67df01b53b7292e6f51fe7d115004ed7b863594",
      "kind": "transparent"
    },
    {
      "address": "0xee3F9A8cFAC1C8960eB3CC28f08d4998B8801F11",
      "txHash": "0x8ea58f651f610819e4bb0d7b193b36a86bffe045efef46ba513cf9329b45f4d7",
      "kind": "transparent"
    },
    {
      "address": "0xE1206b2cc36b868146e4AC48B28C504Ca04d69E3",
      "txHash": "0xac844a7eb1aa445cdbc5a459b9812ac148b4a5174b39a520f2b4b967bce80f36",
      "kind": "transparent"
    },
    {
      "address": "0xE5267785F4Fc0c8861eFD2d27f15859ecE091537",
      "txHash": "0x30ba6f60bdbaa873ca1de394590b5c93b6718a3053bbbfcec4b038c33dc606e9",
      "kind": "transparent"
    },
    {
      "address": "0x0f771503E071FB7930D923D5f9bF0263a22F7691",
      "txHash": "0x78556a5bfa45579c6eb16fe68f0a73c44ac37d39aa5dcf1b03c606b804c1bfff",
      "kind": "transparent"
    },
    {
      "address": "0x4f145ce0C3D36433f411C5686c053F9683FC4715",
      "txHash": "0xdab7e49285a325f940782d9aeac0a3b30e218c35f70abf094e07226b008cb25c",
      "kind": "transparent"
    },
    {
      "address": "0xD07162A12C386e53f55c9cA8014d0E26b252dEC9",
      "txHash": "0x5d6fb48a40c5fd488b09d5f97011d48b9a18b54c7d1d0eabe318daf0e0680bac",
      "kind": "transparent"
    },
    {
      "address": "0xA93eAd2b82B47d0349dADe5a41237508E7aE5337",
      "txHash": "0x049c2aa2b3a2a9e1c7d92b597a73703765167feabc73fdc3a15ff2aa39b2d4bd",
      "kind": "transparent"
    },
    {
      "address": "0x725B3De7e6f6C6212C19e467F6Aa1d7Cae32cd1E",
      "txHash": "0x2b3dfc22aef95b27bf0ae7380c88df3ac3012bfcdc435e25559e49369487d4da",
      "kind": "transparent"
    },
    {
      "address": "0x1F7cf0350D181eB919E95a6A2c228a802723452E",
      "txHash": "0x4f98ceb10b118fee123850162b4be873c1d64c1861caa4b2cddd1b673eacf783",
      "kind": "transparent"
    },
    {
      "address": "0x8381FaeAf1eCCC2F74Ff62AE2C55C7Af79Bb4Cc0",
      "txHash": "0xe88d0ef5a7ac1c1c28d3e178027394572857b76dffae565068fdd25851daad33",
      "kind": "transparent"
    },
    {
      "address": "0xce87AE2f770600Ef85f6e02D3eE435Ba08876576",
      "txHash": "0x234bdd6463611339978b8ac7a78b3a0619cb77cfa2605f0ac252b2b806a72f89",
      "kind": "transparent"
    },
    {
      "address": "0x8dac313f65Ce99Db05dA1f44079c0ED8212255E7",
      "txHash": "0x6eed6f5707b911b201d269b42723101253b59a16214ca0f9e35895538e8c4ef0",
      "kind": "transparent"
    },
    {
      "address": "0x96a3f833A91685B9307E9157275c3E33A58Feb08",
      "txHash": "0xf6ec5251e22af228e4771aca9a490891c599446cd86652567cb10031ddb1eb77",
      "kind": "transparent"
    },
    {
      "address": "0x87285395910a53F1D1A2eA2Ec0d1b484452D1D7D",
      "txHash": "0x7edced0e102b912f3aa6a94a0211d6560781c58999ce05a0d00c5803b5154bde",
      "kind": "transparent"
    },
    {
      "address": "0xAC9144e882E3BAAA5F25A3C1479F95Ce740E0BDc",
      "txHash": "0x34f4e11c93f67d59ad1e93bc77e3c004fa49f250f3373c4b371cd971621a74ed",
      "kind": "transparent"
    },
    {
      "address": "0xF236ECD75b54a70A8917cdA084348ED4A2D9dE69",
      "txHash": "0x69ae5cfb80408d2e2e38384bfa1bc3c2309e2e66bdb160f0d04a0664937f090f",
      "kind": "transparent"
    },
    {
      "address": "0x3433F448a0dAd5e96A94A07187dd5248d1d4dF59",
      "txHash": "0x0f697fc344aa44de98b23384f78d758cff314527f2645e5a2dc572e1f63eeda0",
      "kind": "transparent"
    },
    {
      "address": "0x7EC6b20D28CE6A38F26F481daDDA0b2F4FB19E35",
      "txHash": "0xa61ca3ce427ac2c075e6575c35c513e8ed3673c052698ae96d63521dd5311beb",
      "kind": "transparent"
    },
    {
      "address": "0xE352e2CDa637E019a21484A9baB9f661c61ef325",
      "txHash": "0x1dbcca8a7efe7f995d9ee06eff8f417f55407b42517e64d1d03c6b01878c5ef3",
      "kind": "transparent"
    },
    {
      "address": "0x7bF70Db0F1b36C499953B41aD9C29616fb4C9424",
      "txHash": "0xf7b7660b61e7d2fbb63c1ea4e7e68843c5ce804d436536fad065af64f07397e1",
      "kind": "transparent"
    },
    {
      "address": "0xfbECDcD5A6c149C4580c3A251943999915238EA2",
      "txHash": "0x7d79253de76c03be9241ed500ff82931891395411dead3a277baffb50f2e817e",
      "kind": "transparent"
    },
    {
      "address": "0xEaC2d24465CEa40e9c5A5c9773126868197e4c39",
      "txHash": "0x6fc310e3b2c75b01c9b9b358f36e1167c3743b1096bca27643aaf334632292ca",
      "kind": "transparent"
    },
    {
      "address": "0x3d5eD57e3e6C0cAFE5265533940851A8409439d9",
      "txHash": "0xefb1c764c6f7144be5d491beb0b5360984cb491274d72fdbc1050d71ec65322e",
      "kind": "transparent"
    },
    {
      "address": "0x8AB3f4Fddba4B4BfCa72ac8D3A96327E29bB379F",
      "txHash": "0xba5974ad26ca07decec32f4ebfb9c601b9fab8090d0ffd99b252372508d9358d",
      "kind": "transparent"
    },
    {
      "address": "0x54679B5A4F605695c2Ac95782B823bb0AE40c231",
      "txHash": "0x2e49ad1d0e8709fc1af0cb297ec1dc4ca1a5c55569dea339db8ea050c51aaa30",
      "kind": "transparent"
    },
    {
      "address": "0x79117e354828278F32E1b2Ee7C0233AD170899ea",
      "txHash": "0xa42fa998c64cf9d775426ad2ea02a11cae8f844ebb6407efc15abc0606729691",
      "kind": "transparent"
    },
    {
      "address": "0x383Cc6FEDFfB290fc4b93E4eb2857992c3295A34",
      "txHash": "0x99df7172fb971bce7104b1ec124bb0c0e65b56641b1204ca123d10381c78e9b0",
      "kind": "transparent"
    },
    {
      "address": "0x82f50A6658FC8fafAd9ECF8Ca7C14b2A102dAC2D",
      "txHash": "0xd46502abb69ca9486200db55f4088d68f81048c679b8d2175536894295a68704",
      "kind": "transparent"
    },
    {
      "address": "0x58E7292B53BdeA98da01BA4D4497661A0E1435ee",
      "txHash": "0x4cd3fc2f195b53383a1a42092f61ffe27ee56c138a992c884d751bca3da973a6",
      "kind": "transparent"
    },
    {
      "address": "0x6ee58b778108f9A077310050f63336C33908dbbf",
      "txHash": "0xdd3bcf20ca7e54e184c50b3474980698486be6915c3a2831c3641cc79ee72b06",
      "kind": "transparent"
    },
    {
      "address": "0x42983eA14048b84B0eaA677A9490555EB5298f1b",
      "txHash": "0x59afe1ec9020c8d55596baae48477949ea50b853d13feb7b6405414210aef5f7",
      "kind": "transparent"
    },
    {
      "address": "0x3547B72040dF9D0356832C7Ddc883d6B5f587a47",
      "txHash": "0xaddd52b148f5644659c1472f87137d254e2452363072c694cf4b6e548671d7a5",
      "kind": "transparent"
    },
    {
      "address": "0x3Da4805Fe636Eb5239165D21e483909D32e42bCF",
      "txHash": "0xfca8f4c6befef72fca72e5d0fe6f16e477eb5e2e3d33353a957d3fb844476e3f",
      "kind": "transparent"
    },
    {
      "address": "0xcF7fef47BcF0001E3F5DAd59a212A7775107B996",
      "txHash": "0x0eb1e5455a4d7a659456fc90fd789f00918b3da8bd8a714c62022fb8e4ecaeef",
      "kind": "transparent"
    },
    {
      "address": "0x5e0A2938726DA409085bf889199608221af36214",
      "txHash": "0x7242c8be58dd735dbd474c25b44b3db41bfd9359a714529e37297e73f6e002bb",
      "kind": "transparent"
    },
    {
      "address": "0x9bb52784c56cD2fAe99E2212aAe7D2A1fd9D3E50",
      "txHash": "0x9828666efb25947edc7c5020bd87280227312b155dda1b07b916d57b65e5ba98",
      "kind": "transparent"
    },
    {
      "address": "0x8c8Cb5D5e7359aa84CE0cd5e6e390a4Fa3600df7",
      "txHash": "0x66d00c264e914a99bbd3d6d2fb91eb6dc7cbca5b824fa0c7bcfc74ad4b78c091",
      "kind": "transparent"
    },
    {
      "address": "0x8122eD02F56da765f85f26F9169a9490dB34428a",
      "txHash": "0x3b7ac2dcb41fd423196611c67c3c80e9f3414582b0794329b9b79bf273e02817",
      "kind": "transparent"
    },
    {
      "address": "0x0E11591FB6d80687E8633133f59C57b1247c76ff",
      "txHash": "0xab8f9b516cdfd911f70d2123fe0a0d982191159cb050b1f7470c0f8fdb3f783d",
      "kind": "transparent"
    },
    {
      "address": "0xeD466A71ACE317EBdc7158c6595c8893e3e7acAC",
      "txHash": "0xd516802507731c952f64d1867ab25b51414089c41e1b7d761c9b720d1c86490f",
      "kind": "transparent"
    },
    {
      "address": "0x0E606DcFabA681a46BCDd33A2Ee0A00aBc37ce99",
      "txHash": "0xc61a266aeb7178af2e799d94c2e9100be74ad8719a1f225746958cca4c18608e",
      "kind": "transparent"
    },
    {
      "address": "0x44BE1c2a2A48A147F16BB62f8d1ceD6cda4BE783",
      "txHash": "0x8b8ef1de3ca27f0662cf501daa12a720df5dc45f9279c77a54567ec26e18eb12",
      "kind": "transparent"
    },
    {
      "address": "0x4838D22f8dc5D11Da7172DEe9e6da90Cf9f336e3",
      "txHash": "0x7a690523fd921910eef037fcc5a00db0b87be066e3925962c8e9dacca511cceb",
      "kind": "transparent"
    },
    {
      "address": "0x27474C1c51F630D44b84d317D2Bfc76ae93eFECc",
      "txHash": "0x7b610a3291382ef9907e446a3ed86c4aceb135ebfc11c7682d1fd3cd020fa4da",
      "kind": "transparent"
    },
    {
      "address": "0xEcdE9a7E7D3cd2b7A9d74d130C5E0b1e9410706C",
      "txHash": "0x05c9e2ea33ee4c7863d49961100434a209266b802120b8fee3457732d8daad65",
      "kind": "transparent"
    },
    {
      "address": "0x6652BafbB31cd5312260FF8FC479e2778866f1DD",
      "txHash": "0xb2b3e57a250302f6930614827cfe73cdceb48da62f35831a182036b9410f1534",
      "kind": "transparent"
    },
    {
      "address": "0x0D5D18CD204B75F7F1f10BE73a0cb8C2bB2bbD60",
      "txHash": "0xb381fc8fbbe35df1bfaeddcabff23d83e5fc18d7a681d7d19c58daf25de4def6",
      "kind": "transparent"
    },
    {
      "address": "0x49B7C0d60105A36fEa0074f41Df2cA0e8EB82C9E",
      "txHash": "0xaa589759e61fa986ede8421e8784397899cc94f20905cace2e32c603d4ca1b7f",
      "kind": "transparent"
    },
    {
      "address": "0x1312bf318f29158925856303eD5cA3515c4eff1d",
      "txHash": "0xafa19eee3a120b068889f86faf0c9cc904e912328af71c2f79ceb7ebae134287",
      "kind": "transparent"
    },
    {
      "address": "0x4fc7Fb627A85834bDF0c6AB279392d91Ad343a33",
      "txHash": "0x987c346f7b32b25e08508d7051200e7cc51db1c5f06f68e099bba636f4b818ab",
      "kind": "transparent"
    },
    {
      "address": "0xcB301E479775838191403C5D11D13aF5166ef4D8",
      "txHash": "0x184e79b30b34d30777f32ad081d3ad680b1962b534f09d66a5649fe4c2fa797b",
      "kind": "transparent"
    },
    {
      "address": "0x8a28E86bcdf461C420fCd81644CFb4663624BFAA",
      "txHash": "0xae4c07683c24fe5b50c32fdcc9bdb865dd899fd6ef159d88eb83fa7441a751aa",
      "kind": "transparent"
    },
    {
      "address": "0x79e9F0ea365f29E23e66adFC2d8954C907AeE320",
      "txHash": "0xedd152d4355a088b9c637732008a6dae08522e34a7daa16d0513080e4ca046b0",
      "kind": "transparent"
    },
    {
      "address": "0x6C11a8bB901cbbD394b499daE65496bCf6159f84",
      "txHash": "0xf7446f2634190ce22d378c7e4863630f10087d204635368e510d05678f548915",
      "kind": "transparent"
    },
    {
      "address": "0x2A2120445dE1Bd190d89d4B9BBBBE1272194Ceb6",
      "txHash": "0xe8cb5b2bf8090f8cf9224d161c1926a5048b16bef3a911b56b1a09ac4577f66d",
      "kind": "transparent"
    },
    {
      "address": "0x26267d209Caf2Cdb2e8ad15b91B1B97B0357d881",
      "txHash": "0x9c7a9f048d3e02f7e5a238722f5583a6f42d5284d2bb9ab4356fc14c8fb59ed4",
      "kind": "transparent"
    },
    {
      "address": "0x5Acd3D68b61BA0Edde286e2C35e15aE0bce3084c",
      "txHash": "0x58b397d38b470d847a13bf02e80b0a599139eed0b33d26908be42217cf736b32",
      "kind": "transparent"
    },
    {
      "address": "0xAD4514AC69DF3C0d3B68D46A589eB5a1D043419E",
      "txHash": "0xb0133540b83f421fb907d9485558e59f134e6722264e41d8ccf061d3002a99e6",
      "kind": "transparent"
    },
    {
      "address": "0x1d3Da9D20a775D1Ef69AE9a106578c2E54b5fc63",
      "txHash": "0x4a7c60f59e5f426d6cb6207473a187ce732fe336bcb5a8da990f38567ec7a5a4",
      "kind": "transparent"
    },
    {
      "address": "0x2d62F6d6D8c84CdA1E0eE76fF580204e306E4715",
      "txHash": "0xc37da3ed211da0d712e2abcaed26f93af9cabb0698b2bbec9b240efbd237523a",
      "kind": "transparent"
    },
    {
      "address": "0xC46eD8b3e08e8Bb8071D85af95990BE079dBC132",
      "txHash": "0x6e084faa5ad5074f1dd047360a4fbe749cb4409e80f056c56ff81dd4e4b9049f",
      "kind": "transparent"
    },
    {
      "address": "0x3D0006809BD6663A4f733A8201fd0F968912E095",
      "txHash": "0x128fc0151a16d64850483cfb4af97c9664e55d9d109be2d1b879382e34701755",
      "kind": "transparent"
    },
    {
      "address": "0x606c3f13515E76053B1Dfd922A6497c1bC132516",
      "txHash": "0x2dbdeebdcbb0b78672ed1fe6d60b94d555537b9884345449cba26f8d2ba85a10",
      "kind": "transparent"
    },
    {
      "address": "0xF56cFdF18EeFdC2Fb6fC736c35E9B6A06052C057",
      "txHash": "0x8d038306260fbe358523958efa4d303e99f08a8d99ab6978cc90cb213e332b56",
      "kind": "transparent"
    },
    {
      "address": "0x2039664186341B911B9De2835C41fB9Dcb9e57c4",
      "txHash": "0x3c6e02281dc121b41ab7182c09ea539399b8d4669bbb58d17333edfcd969edef",
      "kind": "transparent"
    },
    {
      "address": "0xeF513fe71555F0d66EFBb5883b0bFc867018F897",
      "txHash": "0xcf28abd5dec3443e4a25ae979b4b53ed2c0f5073645755bcff380a0a7d3eb4fd",
      "kind": "transparent"
    },
    {
      "address": "0x1d5AFd3592B4156C628b8cDAc40118d132100C01",
      "txHash": "0x6e0008a6feb1d31fc585971296f437ee8b59ec13c7d366aaee36616861a0b9b4",
      "kind": "transparent"
    },
    {
      "address": "0x084A760addc7734c3aCEFdF9EE35270D1b1f3926",
      "txHash": "0x4425e23a2d79cf7aca3bb50590ef3c3dab8fb72e0e3cec9ed8ab346ffc00f546",
      "kind": "transparent"
    },
    {
      "address": "0x8b031ce518DDD056fa4bCdfB636c392489eF8511",
      "txHash": "0xc9b5cc7b10ee6441ce5ca5cf8a59c7ca6bc908bca328bd8d0518b131e0f3604f",
      "kind": "transparent"
    },
    {
      "address": "0xE4C10bC0b47F097d9339E1ED0493dC37B79D85f7",
      "txHash": "0x60a8bf032c23fdabc321448baccb7bc4488d4d71f57034e3aad40dbcdf6afe51",
      "kind": "transparent"
    },
    {
      "address": "0x99875B5b97f61DA21f5dae645dc7c35fA6BEDF2e",
      "txHash": "0x34f44dee7b778479800542b4fba3266eaba9db2892e44eb53dfd51a3ffba97da",
      "kind": "transparent"
    },
    {
      "address": "0x2ae166dC4a710F24fFCf4F37C7EAb36DAF017d76",
      "txHash": "0xba6ef774a76578b613f97ceee7193590ecf5a468db8bce103cbcbd8e9fd38001",
      "kind": "transparent"
    },
    {
      "address": "0xa05a3Fd9974232F5877d3fb247cC876994b1134B",
      "txHash": "0xf24c2eebe4a1b72274c0ff16ef6dcabe815d0f3667944b03a6e228cc9bf1ac7b",
      "kind": "transparent"
    },
    {
      "address": "0xc038B92BDd49cbd6FB07387d76DA26503dAA1366",
      "txHash": "0x5ff2d189fab3d03ce1b2e48802a191aa2b91a1c1b1cf21dba8247f59d8153ac2",
      "kind": "transparent"
    },
    {
      "address": "0x4F40a28AF856C4FF8d1073b08Cb99E4c3b7adc94",
      "txHash": "0x6539d5ca92a6ff93354115c4a8851afc000b7f171f4e492a2cc2dc2cdceb6835",
      "kind": "transparent"
    },
    {
      "address": "0xb3347F226AB1BE0E4b453339b9CDd95553b082f2",
      "txHash": "0xd68be0c3f4a238766784a8fd84bb0227fbe0e31132477f1748053c98e6d3a52d",
      "kind": "transparent"
    },
    {
      "address": "0x9BF7c751Ff844E251705E720e9879D6122E96376",
      "txHash": "0xf7c95f731bd5ca880f9d19393cf07a5c26fb7994c2a7be96719eea8e31361156",
      "kind": "transparent"
    },
    {
      "address": "0x880B87111EE236Fa28C5373deeb4BB50C3606006",
      "txHash": "0x3ce9e1c8276508e4d79dd5db82c41d4fa552a3f9b37cb8f844e12c11e5298e2e",
      "kind": "transparent"
    },
    {
      "address": "0xb620789d076BE9393d5D1A76B1E878A2d8b93F42",
      "txHash": "0xbae520caec87e632d45b5df181b763f50933512f2ba573a8c842c3176af31c86",
      "kind": "transparent"
    },
    {
      "address": "0x00f3c340d980C347B5a48E966B3B4fA7ce70039d",
      "txHash": "0xa19d5c6e9f320b9b1a783bf7e5af693c4da98318909077918769ff2751bec8a4",
      "kind": "transparent"
    },
    {
      "address": "0x85fD1Ea5EDa1288d213057Ce5139B936BB667fd9",
      "txHash": "0x242d0b62a58795d464014d581e68772f97d5e7448620dd97fe1805acbfd5f8da",
      "kind": "transparent"
    },
    {
      "address": "0x246CF37582fF245f1FFdC96DeA388A006d619BAC",
      "txHash": "0x85359dfae118373e4027ad6646961a0f9b4ec0157c53c879ee5984c18438c8a2",
      "kind": "transparent"
    },
    {
      "address": "0x9BD97a14821a6AA5FfFb48b7D276E52B9fa3Fe98",
      "txHash": "0x30797a1468c7827afca89577ade322b87c1847ce15f2777798562631999431be",
      "kind": "transparent"
    },
    {
      "address": "0xaDF819bC159f7e0A6F98a48A2C36BB09c1018a0A",
      "txHash": "0xa80d2c161b215aea88108ea55ca25a5dc84f0cd1059a61295627d585147cd298",
      "kind": "transparent"
    },
    {
      "address": "0x31444DC60f98b06F6b7f3dc908dD520792cA9617",
      "txHash": "0xa0ef5a946884b1b1b0c30e3271708541d9235354a925ab90edbfb98674c87c34",
      "kind": "transparent"
    },
    {
      "address": "0x5DbeB37ADBF28505896b1F4F2880A45903c89630",
      "txHash": "0x50f07ce9bb8c8cf1d6de3cd37f66ec065c3dcb34bbafa6846de6f63a038fb2c5",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fdc932913443e2cea132eaf61b1e91ff95a1dec196546750857e12c3019f4154": {
      "address": "0x7a7A271591998292320c3c6Bb6C59BdF80D2Ac0B",
      "txHash": "0x70a65b33b6c6ed9f8c81acf52fffebf619b5b42c1e484f9e1412c407c68ca6e9",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92221cd9cb0f22b9ec855562d8b6703678fe0054a05dbc8565f4e805c225fe77": {
      "address": "0x6406C5e797b2F22a5B0ebaCA4300b253b736b2d9",
      "txHash": "0x8be5129a6e75673bfdc15c0aa4cc6179e05d068b02b57536752e569d48ab0971",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ae651040080750bb074733d84b1c8d33b9b130cebc25fcf76a246f044cf37b75": {
      "address": "0x10D98cbE379eA6E6F757bEcb5e85069Bf9123599",
      "txHash": "0x3c92798d39e6dd168952b401738b1325bcf4f038e125bd22a409c36c9ebe7259",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)6461_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)6431": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)6461_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)6461_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)6431",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4fd45dad18dc897cb28fc216a91fbb2c1dd372b3ec2dffee495c586d1c18065f": {
      "address": "0xdCe9C073763E28d1ddCCF1a53693Ea6730CCdF53",
      "txHash": "0x982a05dda5276fadb772acc969bd40fdfd4bed2680849a12bea1dbfced49fcf6",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6635",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6635": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cffd0219f4743aed7b080c82d9dedb3a9de5cae1d9ad9cd4d515f9e87c53c305": {
      "address": "0xEc3B95D1016e239Fb3Ed95AcB9AD6555Adc57aAa",
      "txHash": "0xee0cf9f6d82f3c568f27765508db05e42a86f172cc1d2226a85e85fa95370d30",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:17"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:18"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:19"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:20"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:21"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_rewardsFactor",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_rewardsPeriod",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_maxPeriods",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4675fdede14312f1dbc0dc4e6269f9993e9cce05e658f90d7f6acbfe17a0d5f1": {
      "address": "0x3c0ad82aC5bb91C844902C37Ef818347630Ad544",
      "txHash": "0x04581607e1c14b7ca6d79df988a5f7f0fdbf112af40924b07e9442a3fc7e101e",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37df3e2d8e81e511e26f90f9dfe2893f0fc4febcac6d0db644c802b1a3bf3e3f": {
      "address": "0x748633E5F5263c6925839b76Eb9220e7c4Efc832",
      "txHash": "0xecd6235e660e7c6d2cb2cf7bdfa2546600af2a4edad10bb9af493205711d0a11",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3674",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)6418_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3674": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)6418_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)6418_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ecf4b196841a7161c596e8a1e8040eb5f6437afee357fc9e3e8bf04ab92166ff": {
      "address": "0x44572F8cD7E1A15475F3A3858320A9F1D211E911",
      "txHash": "0x53878d4f4e9645fa706e6225ffecda551fd0ad1fcbd3b14b783e112d34f9cc71",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IAddressesProvider)2152",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:24"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:25"
          },
          {
            "label": "_mintCount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:26"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:27"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:28"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:29"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:30"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "258",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:31"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:32"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)2418_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2152": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)2418_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)2418_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f23e3bf4b34830efbc442b13a6acd3d2a4885003a81b9c9478e8009ae41f51c": {
      "address": "0x71862FB88575f1244F99Ceb6c0D238ADbC57b13D",
      "txHash": "0xae3d6569a56be9be2d48b0ea8274b28a598b7496252bfdf2fc3cd4cd187b3448",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b5f569f8ff984a8015e23060881530ea839579e8d904e39b053c751b3d9899ca": {
      "address": "0x7cf7CF1e2F6774337F72AEca9426019C5718d174",
      "txHash": "0x27414d50fdcd0e12c2a11fbf3bf8c86c0d760fc173349deb8df7097452b1b93f",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)6391_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)6391_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)6391_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87a8fa98041d2112e0b969b493c7b45a3a15469d09e5bfe2cc12653ae33c91ab": {
      "address": "0x9b845423c35Ce16F1dd3258225F63C5c097F87d7",
      "txHash": "0xeaa90c3be341111ff8805675122be7f405f58e30acb0b449707cb7d2c5c18a01",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c140b0a844fa43eaf3b0a683eb935840f789ec3e08b848e7c5891def976d28bb": {
      "address": "0xC50579255036904aA8d0674Cdfb72039d7af10a0",
      "txHash": "0x5e013fe4402a810b1cbb6d5e8d56c700c4966c11f96a6ca7f0b13cdf356d85d8",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23bc8d54fb399862c92c8d7dec6a17e52f99797e7a5fa4b0756aa51fb4784f17": {
      "address": "0xe45C456B348c767E32a1eD6ED587E43Ec7d18A6E",
      "txHash": "0xd254fe3de4996cff9613636ae057c288ba27888064c11ba2e6ce723a1eb641fe",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a2fc841b97d211c0b996807a56a10f88ef5d640330391c4aef2d88c7103818e": {
      "address": "0x2443ed8c75dE99989379f5b9a926c397E251B16c",
      "txHash": "0x791f36a30ad15fd4fa86c3b549a10e576e263fd5b29e4f7a9959595d53b9cfe9",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6242f21d5e03ff8ee48d0629c1b38f040f49f1bc81bff1e26729979c72460509": {
      "address": "0xb80Cea957B25384A2e2F12f604937332D20945cE",
      "txHash": "0xf4e7f03ef66b5831b26efce95c82db5a60fc1a729fdc850623a25fa08efc78fc",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eec2b2a22b82339d4f6aab1c6bf5174082403f35d2b730b0bffd2d6e3016d04b": {
      "address": "0x85e85bd3b8A3A5b56C1FCC20D940aCf061cDaE19",
      "txHash": "0xdccf6402224fac5838714368414437221d2c97267743ead727886b311b11ad78",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d5348064dbb4c10c39067d690fb39bbcfc5c4e4b237718f66f32922d9b2f5db": {
      "address": "0xdBFA8582Cb40fba7C6CA32607598652BE4eC369b",
      "txHash": "0xe45a6311b6ea87154683e41eb5a8e0c1e12b4cf13287187acff5e6f5516c4c38",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3656",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3656": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4e2a34d42c24ff69abc1f0b6006656b825ce185c7e78781f76a8b9e778e3fa06": {
      "address": "0x596c1DeA3fd081940977f544BA34cDE052B90FB4",
      "txHash": "0xfc03c3b954214cf7398ef731bd9eb2cf8b7237ea79fb96cd74b4f1345eaeaab5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_marketAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:8"
          },
          {
            "label": "_debtToken",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:9"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:10"
          },
          {
            "label": "_feeTreasury",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:11"
          },
          {
            "label": "_loanCenter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:12"
          },
          {
            "label": "_nftOracle",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:13"
          },
          {
            "label": "_tokenOracle",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:14"
          },
          {
            "label": "_interestRate",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:15"
          },
          {
            "label": "_nativeTokenVault",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:16"
          },
          {
            "label": "_nativeToken",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:17"
          },
          {
            "label": "_weth",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:18"
          },
          {
            "label": "_genesisNFT",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "AddressesProvider",
            "src": "contracts/protocol/AddressesProvider.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eacf5bc12d284fe67fbe316350360ea71a0f493a65cddb44358e43ba254d3347": {
      "address": "0x28a14ff06c893478C4a9d4faAF5d1824f914B0cd",
      "txHash": "0xa652528c36beb6467856eae18adefa7e2f7b092d02ecb579462fa69dbbd1d3f3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1f955c42072c95851dcb93869f5d565bb7ee2652a502500ba6e6519b42a337a": {
      "address": "0x1428731C16fC1CB82B031A7ed6B1E3e1BF816B8e",
      "txHash": "0xf4d99227012c5e44be2aa349e94755160ff78290cd0021e24bc4c85004f7ed62",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftToLoanId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:27"
          },
          {
            "label": "_loans",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(LoanData)8212_storage)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:30"
          },
          {
            "label": "_loansCount",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:31"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:32"
          },
          {
            "label": "_activeLoansCount",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:35"
          },
          {
            "label": "_collectionsMaxCollaterization",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:38"
          },
          {
            "label": "_defaultMaxCollaterization",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "LoanCenter",
            "src": "contracts/protocol/LoanCenter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_enum(LoanState)8182": {
            "label": "enum DataTypes.LoanState",
            "members": [
              "None",
              "Created",
              "Active",
              "Repaid",
              "Defaulted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanData)8212_storage)": {
            "label": "mapping(uint256 => struct DataTypes.LoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LoanData)8212_storage": {
            "label": "struct DataTypes.LoanData",
            "members": [
              {
                "label": "loanId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "state",
                "type": "t_enum(LoanState)8182",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLTV",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "boost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "genesisNFTId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "genesisNFTBoost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nftAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "reserve",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "borrowRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "initTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "debtTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e32376e0059006e1280a4060c9da5a01895edd0a10e2834c440fb6acbb0b2db2": {
      "address": "0x3110560138D06DE63ec2e82CC8AB19b655bEd39b",
      "txHash": "0xaec0f515a02548d8b3976a9d2b5713424ae7710e37affb8c792e9d2a025b5c57",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6953",
            "contract": "DebtToken",
            "src": "contracts/protocol/DebtToken.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6953": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a25a992dd298c4fd89acb6d0fd00199f12b8812dcac64cc66ad54c8ec34368bc": {
      "address": "0x7c7e2767B69e7D65f430721e5307aaE56961917C",
      "txHash": "0xabff49495438c622df4a5c1a902044ba1eda05671fdbd4febb2c44f1031b650f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)6953",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:17"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:18"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:19"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:20"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:21"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_rewardsFactor",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_rewardsPeriod",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_maxPeriods",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)6953": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ef3b0ed126d9d7a45c4de072a72b49e16cb17720f9e3fbfc921f23a63e2d4919": {
      "address": "0x50696E7F8CbCe95554c1269Db8C1CB855489CcE6",
      "txHash": "0x50b22a27ff2d66cc784a565391b92fab1718fa61543ee64539c1290748f79ade",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e1007a5f9eaa355a65c60e3c29dda805706535b0b87aa9cdaee1b2e419739669": {
      "address": "0x61D98B8734240f6066F86167D0D5d46B80ac2091",
      "txHash": "0xd29f7cb65bae821ba47d69c61578da4f798616be003bdfea5e9324f5ea32c9d9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:32"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:33"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "357",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "359",
            "type": "t_struct(Counter)3155_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)8217_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)8217_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3155_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)8217_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f4d1c957d562cc006175880bcbbd0f6f16b39da728c2c58ccd15773a8707e6bf": {
      "address": "0xBb07C9aFc0B34624396D7688FB15c931ea07e2cc",
      "txHash": "0x6abf70a0cbfbf71009b04b5bd5bc5f9027edcda19562bccedf2dc261fb8d65e9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cd9313a235036a489f8f61ee839eece784ff15a962cab58cd853d4eb3af19f71": {
      "address": "0x17Af9b38772a0759F061765F0A737f4D7e6e0e9C",
      "txHash": "0x0d40c3a3bc46af07cdf98d11e9183915c4ffa5460b06ab81cc933c9276bb52d9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "131eee4944d3539afcbb46051968853b2f7ddf4c338ea720b6ca8b88dbac54a7": {
      "address": "0x1816e1C441468ADcD04E367503E12fDF6729196B",
      "txHash": "0x5c5ddf52d04ae777297c63903f2b0d42b6ef0f82ba4976b450b8838c1109b8b6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:45"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c95fe2544f3ab076794463df21403ab63506bc5fe870acd23ee362c35e04bab0": {
      "address": "0xbE4b0107B503fC2A1Aa44c711b87f11Dd9d5B794",
      "txHash": "0x201a4b1a248917ea0c71d9e539cfb2db4d53b1b029019050138c5260327db371",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a46f05973056568be68099bb14a1373b5c29ba2a39e8d9cf800f7d8b98bd918c": {
      "address": "0x0F4cDd8D4d74fb93E352f60342bf1180503b3e75",
      "txHash": "0x0d73ebd7c1ada34756d35b82372eb3cb0dde63e2245ba0d856a6d18568e2ef19",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a50e02ff92c4598d1fc63769e470f24777a6aac34b54b02cc4aa084c0c5b3a74": {
      "address": "0xa34b8886e1EDcc720deF29473244cC842267b14C",
      "txHash": "0xc103fd290d11e96feed2d7aa4c8d87b6d1e581e056aede13262e824211349434",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bbf3247fd1f740731d99ab765334725a02e1a9a315f51a9fe5ce6f90e935ea8b": {
      "address": "0xa66071ca10497AC46C108B934914Ec3882CA0357",
      "txHash": "0x19ae1686de44e067f3cf14ef324000a7e8559550be675499290b928dd6ebd5f1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4c2c10c8b5a040abdfa627677dac9d0f44428d6572aa2755ae2f89f0b31d5a09": {
      "address": "0x6731421E210aB0573c7677138aB9753BD61A6463",
      "txHash": "0x5ba44c4fa08e750e610716523ebb3fa8edb59aeef867136075706f4df5d75025",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf273c12e28066228981b8184d375066647fe65952eabb81142ae415c551adf2": {
      "address": "0x93a21181f0FA750b68AdC36CbA296691d0D6c963",
      "txHash": "0x70589dc9805a28b46d9ba11a2f29b454b86e67a7f9fa23b8831accc513fdf645",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "55e5942be634c97acd09c0acbe9ae942e6bf4d408833dccc12718c88104c800b": {
      "address": "0x954a4d8c273547d3Ad097d89Dd0B265851dF7137",
      "txHash": "0x4567a2302ac32ab5f67da6d65ddbd75cf055f26681e30e88ccd71ea637c377ad",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1bc82cf0e35e431d0062f2f7a6d721c77c713b864372a5b6af10a12e75f9c620": {
      "address": "0x42259A05c37700823116A41b6B444f1Ebca8EF00",
      "txHash": "0x1aa1230e250e0a9eb4a1a8cce0cc436e99f68dee21f1f8af327605a035583773",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2ce654ae8f7798b3cf09b2a96f76efdf73fbd3e67c9cb862a837550d7089e800": {
      "address": "0x00DCE1Fd5Ddafbf352eE740F06F43F1AEC248a46",
      "txHash": "0x333875daacf5af434981ad8b3d2458abe190fb8ac13559aa417fa614b35ddca7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b37cf2c21ad1f5ed69b395dd0c3c7b95f419132229af0f49185dd4337d79fc8": {
      "address": "0x24f3d95c89656C06A0dD979144F1b53A2C0ae6dB",
      "txHash": "0xae067b3df6f9fdc8c486106638448fb4c5fdbd7ae1191d3669e656b9b5dc42e5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4088f69ebedc84c44f47afd00d6d6a1ef1815e96960d2c8addabe9de770657e4": {
      "address": "0xd22e165E236F39fe6154Af8Ac2Afa840f7763D0F",
      "txHash": "0x853ddb831b0da780d465c5a82e5e0ceb1f27efe936091140977b17908a8f741a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05101e2e68f382d02f3508135ff3711dc67c93c5890dd8f8c294fcd053a7f977": {
      "address": "0xeD5ec30C7d9fEad84d1989FbC85d0b32336d2de3",
      "txHash": "0xb863d2e92874ce2d0bbb26af3fcf17a2aff765a7f3e579690f4ec7ec7a363fe9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "198c4055e72e302c5947a459eba70633c6ed7030c0baa6e80945d3e1f004a454": {
      "address": "0xBa28c0B6A71aA75Daa775c2B90B503Ee4D2081f0",
      "txHash": "0x5a7993747620f41c040a76992615f897d62927584d2dc3a18d13d51ba26f0b38",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f45ab327d9a72beb7b829956212a9e376bfdf4536136084f6242d54ec6dd33d8": {
      "address": "0x2a4eD6C5b5f1283Bc8f8BfD9e570818729349353",
      "txHash": "0xfdf7aa78f86eab7cc997a033c67189221e52a905c0fc3213ba6bae21f7f0daa7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b88c1ba8bd1c6a396e07607f95c4e84d5072669e53dca7a782c0abe0e6af13a9": {
      "address": "0x9E6d66a2DE018B59eD3C968509c4f113207C39aE",
      "txHash": "0x21f61cb233696ffb6aba217d203ce31f6cfd9405ea4151a1686585c370ce430f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)2810",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2269_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)2810": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3078_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2269_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3078_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a9966bb61da3a2fc6dccf6caebb71439f918e1a3c571a395dc96fe09e21458f0": {
      "address": "0x0E7131f85be97795E713D2293bf9c8d228774d9b",
      "txHash": "0x110002a2dc70eddb8477f65ad92eab51819262d9c403d205a0da5c92ff691ebb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6eb4a3ff05d5cae0da383669e5e6b2872c1aa98718ed373f288871209cdb9b9a": {
      "address": "0xE270B694ea980d7820deA8d314c852bFeBAbeE1c",
      "txHash": "0xad8730001106d4d8f38899d62801a44573c6f1eaede02fa94b35e79793b29ffa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5376",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5376": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawRequest)8169_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawRequest)8169_storage": {
            "label": "struct DataTypes.WithdrawRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "50b8c9ec0e730eb12c739d5ac061949c1d9cfb45fc79124e0f478652fce47b29": {
      "address": "0xbd5858EAAAd9e07E37f4e96AB8FB457Ab0A8144F",
      "txHash": "0xd787a2e83a2b9d092e909df804169d0c7fa0459355e106d9c242a8dda60d7938",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)3524",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)2983_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)3796_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3524": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)3796_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2983_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)3796_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c2b47140f651f63735be7a7f3efc42e053a247522061cd9b9cbe3c26e3d11ddd": {
      "address": "0xD78140402077edd4cE760aa3C3C483aFf30F97C2",
      "txHash": "0xcc62adad668095a7c52508d60a541bda5c13bc975e15a217a4fb8375b6911e75",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2928c03d351826e109f3a39847007c8f4569be9558fb16a6843795458dd0e14a": {
      "address": "0xe49765C8fCb308E590AC18fD96D4695D4563D198",
      "txHash": "0x87338cb90c957106a37ad3a773cdb4d7b55a56950c8b0d446f0a645e4ab32fc2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:28"
          },
          {
            "label": "_boostFactor",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_boostLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidationRewardFactor",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_maxLiquidationReward",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_liquidationRewardPriceThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_liquidationRewardPriceLimit",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:36"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:38"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:40"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8318_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:42"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8318_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawalRequest)8318_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6a657c5aca1faf0f6d1ee2fe98a92ec688a52993d3c0b4116509dac8edff8e04": {
      "address": "0xd2B74A801c3472a6c0E89094758df1Cd267eb265",
      "txHash": "0x034ba98c252b167c3c9338ecc00d5bc87eb2a646ccb00109741fa87dcfee9093",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "007f944e47fd6745b1332ed5636e6f7fb0b318ee174da8bff433c6c5bbc2aa0b": {
      "address": "0x07d3b01BC35c3F48FfD20E3b8600323676281b69",
      "txHash": "0x2fbdf15a525fad2b812626a6e30e8acc65f4229f4ca153d56ecabb3d67c41f2e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2fe055f35a2fc12a6cc05ad3a1b58e8807c847ca299d5c5d0c608da09869e624": {
      "address": "0x98E73847198F563D46f4f11bB01bcb56436cdFe8",
      "txHash": "0xbc140118b7a12b61b3ca31bb881dbc60dc7b16ef12f45b3ae8ebb735a286405a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "54c8c0778e58f9bb2c1b366ace1f00c0b7c455a485a0d843b6cf38ae6fd0180a": {
      "address": "0x476C23cfd1e2D5BC5fc11e844fB4eEb1cc2697B3",
      "txHash": "0xf7cb964aa85a1880e23710fcec27960552a302c75e1f47019bb81acb9a11c8ef",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db7ea868a7157dda4ae13f6ee94e7003639c20d1687a59dc13ffc8a5d8c039ea": {
      "address": "0x552c1cB7D2eB088f4BA19F9350a26Ae0662fddfc",
      "txHash": "0x726d387b3474dd318bb9d5a11609b2c865c340ceba852779885960bc90acd743",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:34"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:35"
          },
          {
            "label": "_price",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:36"
          },
          {
            "label": "_maxLocktime",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:37"
          },
          {
            "label": "_minLocktime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:38"
          },
          {
            "label": "_nativeTokenFactor",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:39"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "407",
            "type": "t_address_payable",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:40"
          },
          {
            "label": "_ltvBoost",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:41"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "409",
            "type": "t_struct(Counter)3300_storage",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:42"
          },
          {
            "label": "_mintDepositReserve",
            "offset": 0,
            "slot": "410",
            "type": "t_address",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:43"
          },
          {
            "label": "_active",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:46"
          },
          {
            "label": "_mintDetails",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_struct(MintDetails)8376_storage)",
            "contract": "GenesisNFT",
            "src": "contracts/protocol/GenesisNFT.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintDetails)8376_storage)": {
            "label": "mapping(uint256 => struct DataTypes.MintDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3300_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MintDetails)8376_storage": {
            "label": "struct DataTypes.MintDetails",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locktime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0a6d89ec7c4788e6f1ace364febd8be4f788c697571a7c249fd934ca584ca0c7": {
      "address": "0x43e880A90702FE28DbAf5D930b2bf7C67b7b72a6",
      "txHash": "0x59df91e873544c6b5e505e8453ad1cb9d485814b15326f33e986dbc53d99c9ab",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5db1421dd00a499ee5ee286ac0a68e3aaaa451b644c3f9ceb2b9779061ed528a": {
      "address": "0xfef0954380122aCFA7c288363751bc8f413aC370",
      "txHash": "0xc167b4ba0475126e4201796701c040a63b6cf02471502aa317b37847ffadb106",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "INITIAL_CHAIN_ID",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:37"
          },
          {
            "label": "INITIAL_DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:40"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TrustusUpgradable",
            "src": "contracts/protocol/Trustus/TrustusUpgradable.sol:48"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IAddressesProvider)1588",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:22"
          },
          {
            "label": "_devAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:23"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:24"
          },
          {
            "label": "_devReward",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:25"
          },
          {
            "label": "_devVestingTime",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:26"
          },
          {
            "label": "_devWithdrawn",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:27"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "NativeToken",
            "src": "contracts/protocol/NativeToken.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAddressesProvider)1588": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "661db384b76666e7f74a93b820dc0e34792a17c969fb4f64b6bd390e48ebb9b8": {
      "address": "0xD1C29003e9480463C517D7630e242b151502F77E",
      "txHash": "0xe51f75d76e52b4da6515864b0d3712ecf99c19187b8eb379253e027a0544f6a8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4cd501653944c0ee4d6bb0a2c60e88b7b1113a793a035ee246de72a6a2dcf07": {
      "address": "0x4bDa1909133A238EBDf7C747Dee80d404e19A7f9",
      "txHash": "0x9e7e0ca1f6f68da02a9a8f3672bfed802859a0d64a08c43aa0a0681de6a175e6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fb99efc95d66e5801d0f2d0281c0126311c821c8ea9e66146ce2833d6a55003d": {
      "address": "0x47603eD2F1A794B27B987Fb1F3Dba2A56fbfe4Bc",
      "txHash": "0xc769fd4cc3dd8376029688aee2c9c0a38953480f7e93822aa9121682fd1e1103",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_reserves",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:39"
          },
          {
            "label": "_validReserves",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:41"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IAddressesProvider)3020",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:43"
          },
          {
            "label": "_defaultLiquidationPenalty",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:44"
          },
          {
            "label": "_defaultProtocolLiquidationFee",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:45"
          },
          {
            "label": "_defaultMaximumUtilizationRate",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:46"
          },
          {
            "label": "_defaultUnderlyingSafeguard",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Market",
            "src": "contracts/protocol/Market.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)3020": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "21c56ae28ccb783cbb8def6c6a6b5d4f805c017d8733c40c42765736c47fe82a": {
      "address": "0xe4D1cd17C934E963C4944cD3b5e4ab6d3160D979",
      "txHash": "0xdf37decb10c8eea739d9a2070373ae9ed99f0f97c08fbee837c338f7f49fd861",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_addressProvider",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IAddressesProvider)5521",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:29"
          },
          {
            "label": "_deployTimestamp",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:30"
          },
          {
            "label": "_liquidatonRewardsParams",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(LiquidationRewardParams)8390_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:31"
          },
          {
            "label": "_lastRewardsTimestamp",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:32"
          },
          {
            "label": "_boostParams",
            "offset": 0,
            "slot": "208",
            "type": "t_struct(BoostParams)8381_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:33"
          },
          {
            "label": "_stakingRewardsParams",
            "offset": 0,
            "slot": "210",
            "type": "t_struct(StakingRewardParams)8397_storage",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:34"
          },
          {
            "label": "_votes",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:37"
          },
          {
            "label": "_freeVotes",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:39"
          },
          {
            "label": "_collectionVotes",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:41"
          },
          {
            "label": "_withdrawalRequests",
            "offset": 0,
            "slot": "216",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:43"
          },
          {
            "label": "_reserveIncentives",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NativeTokenVault",
            "src": "contracts/protocol/NativeTokenVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAddressesProvider)5521": {
            "label": "contract IAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)8323_storage)": {
            "label": "mapping(address => struct DataTypes.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BoostParams)8381_storage": {
            "label": "struct DataTypes.BoostParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "limit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationRewardParams)8390_storage": {
            "label": "struct DataTypes.LiquidationRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "priceThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "priceLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(StakingRewardParams)8397_storage": {
            "label": "struct DataTypes.StakingRewardParams",
            "members": [
              {
                "label": "factor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPeriods",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawalRequest)8323_storage": {
            "label": "struct DataTypes.WithdrawalRequest",
            "members": [
              {
                "label": "created",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
